<?php
 namespace Softleister\Pdfncattachment; use Contao\Config; use Contao\StringUtil; use Contao\Database; use Contao\FilesModel; use Contao\System; use Contao\Image\ResizeConfiguration; use Contao\Controller; use Contao\Environment; use Contao\Input; use Contao\File; define("\114\x49\132\x45\116\132", "\114\151\143\145\156\143\145"); define("\120\x52\117\104\x55\x43\124\x5f\x4e\103", "\x70\x64\x66\x6e\143\x61\x74\x74\x61\143\x68\x6d\145\156\164"); define("\x76\116\132\x70\152\130\x7a\x74\x45\x56\113\111\151\x71", "\61\62\63\64\x39\x35\x36\x37\70\71\x30\61\x32\70\x33\64\65\x36\67"); define("\x49\x4d\107\x44\x55\x4d\x4d\131", "\144\x61\x74\141\x3a\151\155\x61\x67\x65\57\x70\156\x67\73\x62\141\x73\145\x36\x34\54\151\x56\x42\x4f\122\167\x30\x4b\x47\147\157\x41\x41\101\101\x4e\123\x55\x68\105\125\147\101\x41\x41\x4a\131\x41\101\x41\x41\x31\x43\101\111\x41\101\x41\x41\x73\x36\x34\130\x31\101\101\101\101\107\x58\122\106\x57\110\122\x54\x62\x32\x5a\60\x64\62\106\x79\132\121\x42\x42\x5a\x47\71\151\x5a\x53\x42\112\x62\127\x46\x6e\132\x56\x4a\x6c\x59\127\x52\x35\143\143\154\154\x50\101\101\x41\103\x30\170\112\122\x45\x46\x55\x65\116\x72\163\x58\x47\x6c\x58\62\x7a\157\x51\152\122\172\152\x37\101\x74\162\x6f\146\x54\x2f\x2f\x36\x64\53\67\x6d\166\124\x51\x6f\104\163\x69\x51\117\x32\63\x78\61\x4e\x34\151\146\112\123\x2b\124\105\167\x4f\163\65\61\161\x45\x63\x43\x49\157\x6b\x7a\65\x33\154\172\x6d\150\x53\x39\57\x76\x33\x37\67\x56\161\57\x4d\63\x44\161\x55\x52\x51\x51\126\151\116\x43\x73\112\x71\x56\x42\102\127\x45\x46\x61\152\147\162\x41\x61\x46\131\124\x56\161\103\x43\163\x49\x4b\170\107\x42\x57\105\61\x4b\x67\x69\x72\125\125\106\131\x51\126\x69\x4e\103\163\112\x71\126\102\102\x57\64\71\152\150\x71\x72\x38\x49\x49\146\x42\x50\53\63\164\105\167\63\150\120\171\x72\x54\143\x2b\x51\x58\145\x62\162\146\103\x77\x64\x56\x6f\x68\x53\113\x4c\65\x4b\62\117\x78\145\126\x53\x4b\x57\x76\113\x72\131\x58\x38\x77\x58\x37\110\101\64\71\x76\117\122\x51\160\141\122\x42\x75\x74\x39\163\x77\x44\x4f\120\x6c\x4d\x61\130\x75\x4f\117\x37\132\x6d\x66\106\62\x33\57\x64\124\152\170\x76\112\x38\63\155\131\x6e\63\x76\105\111\101\150\x65\x58\x31\x39\x46\170\x73\110\x71\162\153\163\67\x57\x67\x4e\x41\x5a\x77\x34\103\x6f\145\x79\x49\x52\x54\172\x50\x45\x38\66\160\x44\x73\132\x78\x48\113\172\x73\x62\x37\x65\x62\172\x65\x62\164\x39\x58\x57\x39\127\165\x47\x37\x65\x74\x5a\x47\161\64\x57\x4e\x76\107\x61\x7a\60\127\151\x63\145\122\67\116\x44\70\x50\70\116\x54\x45\102\x69\65\103\147\124\157\120\x50\161\x64\146\120\x39\x72\x69\x34\161\156\131\70\x2f\x76\66\71\127\x69\65\x6a\143\127\102\x71\x74\71\145\x37\166\x62\70\x33\x44\166\110\x72\170\64\x2f\147\x37\x53\x31\x31\x61\141\x78\x37\71\x2b\61\x62\163\x39\x6b\x4d\115\172\104\101\64\160\x50\156\65\x2b\x66\x78\x57\113\124\102\x48\x49\130\x68\53\x64\130\x56\x39\145\60\x74\132\107\x63\x6a\x59\x69\152\x54\x36\x4d\x65\x50\x31\53\x31\x57\x56\x52\157\x73\x38\x75\130\x75\x72\156\71\53\x48\x68\61\x72\151\x45\x4a\141\x31\127\167\x36\130\x53\x30\127\x69\x2f\154\143\x4d\x79\102\154\121\106\142\64\x49\x6d\60\x54\157\164\166\166\144\67\160\144\151\107\164\156\x72\170\153\x48\150\150\66\x4d\146\166\64\x30\x64\x4b\x37\x6f\x41\x41\123\x4d\103\x78\142\x45\x58\161\x59\152\x78\141\x73\161\150\x4b\x6b\x37\x30\x54\x73\x7a\x64\x42\x79\x72\167\171\171\x61\67\130\131\x74\x41\167\x4f\163\151\x63\x64\127\144\60\156\141\163\x66\63\104\x51\103\111\167\x61\113\151\153\x67\143\102\70\x50\165\x38\116\x68\x30\x63\142\63\x39\142\x33\x6e\x78\64\x66\x63\x55\x34\70\152\x70\116\164\172\142\165\x6a\171\165\x2f\172\66\x58\121\65\156\x2b\115\x74\106\61\144\130\x38\x43\115\x35\62\x6b\115\x4c\x5a\147\151\x32\127\120\150\x34\x4a\172\x6f\x44\112\x2b\x6c\x76\x4e\162\126\x73\x45\64\124\105\x59\143\110\151\x39\x47\x41\x67\71\64\114\x55\x55\160\x59\x53\101\155\x63\101\x75\153\x66\163\101\166\156\103\x37\105\142\57\x2f\115\x50\107\65\61\x68\x37\131\x77\132\x6d\x39\x76\114\x79\53\53\144\x50\x43\150\x50\117\x78\x2f\110\105\x6b\156\x63\x53\x55\x6e\x7a\60\x44\x42\156\x69\70\x39\146\162\66\106\104\x41\x73\x4e\63\x49\x39\x7a\x63\132\x4f\x47\107\114\x52\123\161\66\x42\57\x47\142\x7a\x52\x35\x47\111\x37\114\x73\x42\x41\x59\167\x4c\x42\147\x6c\x39\103\x62\x6b\x72\x2b\x52\x54\167\111\146\x56\x36\65\166\61\107\151\x75\x38\132\x55\166\x67\146\122\x6c\x70\x43\x52\161\x42\x2b\103\x53\x44\x50\x34\112\x69\x43\160\126\x31\x48\x44\x77\x68\x4d\x61\x62\x54\x6c\x56\121\111\x69\x44\x75\124\x46\x77\x69\102\x6a\x65\x44\123\x55\64\x2b\122\57\147\x34\105\x71\x75\x58\171\x38\143\70\146\x4f\160\65\117\x6a\155\161\x53\x5a\x4c\125\x37\156\127\x61\x72\x56\x57\x63\x6e\x47\125\126\121\111\120\x69\x41\126\60\x6c\167\x4e\114\x63\155\101\170\67\x69\57\x64\x58\x4e\124\123\x47\x4b\125\x6f\103\155\66\x6b\57\x6b\x6c\161\64\x55\106\101\x35\71\x48\60\x2b\142\164\102\165\x34\x55\111\152\61\x52\104\67\x47\123\x7a\106\x46\x7a\112\153\101\152\147\x4d\x79\x4d\x72\x79\70\x6a\x43\x79\x59\105\146\x44\104\62\143\141\120\152\x2b\x54\153\106\146\x55\151\150\154\171\x76\71\64\x66\104\57\x6d\101\x41\70\x41\x53\x48\x63\103\156\102\142\150\x67\x4f\172\70\71\x68\x36\171\x39\x50\x54\x34\x46\x4f\x54\x34\101\151\x51\151\115\111\104\x6d\152\144\x51\x51\x57\103\x75\107\x36\x2f\146\157\x56\x2b\150\105\127\x63\x6b\60\170\62\x42\103\71\145\x50\x6f\122\103\127\x6b\x42\x76\115\x45\152\53\x43\x57\112\x39\x4b\171\115\x51\131\157\x58\x6c\131\x76\x47\155\132\171\131\107\53\143\x4b\166\x6d\101\x4d\65\101\x67\x4d\x62\121\65\x78\116\112\x6a\x69\x32\157\x2b\x4d\110\x59\x67\x4a\x36\x44\113\x6f\x5a\70\x51\150\104\144\123\x47\101\x4f\162\x79\x34\x51\104\157\102\172\62\x6b\x41\x41\x45\x2b\x37\x6d\x45\x35\x62\67\142\x61\116\101\156\105\x65\106\x52\141\x4d\x4c\57\106\x44\x4f\x61\x56\147\x64\x71\x62\153\x6a\147\x78\150\x4c\141\x30\x67\147\101\121\x4c\113\x4d\141\103\150\156\104\172\171\x56\x76\x57\144\150\104\121\145\x72\x47\147\132\x31\x59\x77\70\x32\x52\155\160\x70\x6f\103\53\x56\113\x6b\163\110\131\x32\152\x52\124\103\60\124\x55\x41\x78\x32\120\70\163\106\110\161\111\124\x6b\66\131\x67\113\101\x33\105\x32\x49\x39\x67\116\x73\x65\142\x32\62\152\x49\x6a\x52\125\141\x4e\115\x4f\153\x50\x70\x49\113\x57\64\130\162\x77\x75\x54\101\x31\157\107\141\x66\x48\60\x34\x4c\114\161\x4b\x38\x30\x6d\153\62\156\145\x46\x41\x6b\x49\x69\x50\x54\142\124\x58\65\x41\131\53\101\172\63\124\61\171\115\x65\x47\141\114\x4d\x6d\167\x69\x71\154\67\x66\x71\x42\x34\125\147\x59\166\x77\x4f\145\115\x49\x72\147\141\132\x48\x64\70\x7a\106\167\x68\x6e\141\x33\x69\x30\x42\64\57\x65\x55\x4c\65\x32\x31\x2f\x42\65\60\x35\x6b\71\x55\121\x53\x69\146\x32\125\x6b\x43\147\x67\x68\x74\112\x42\x6b\111\x56\126\70\x54\x4c\x75\x56\162\166\x73\111\171\x31\125\x51\x54\145\x41\123\62\x4a\64\x53\143\x64\143\x6c\x33\x34\x54\x4b\147\x49\156\x55\x48\132\x46\114\105\113\112\154\x49\x33\105\x73\x65\x45\x43\x71\162\65\145\x2b\170\103\x45\146\x2b\163\101\112\101\117\x66\110\102\x78\x67\121\145\x45\125\x75\x4b\x68\x56\x4e\x33\x36\141\65\113\x4b\156\122\x55\161\x6e\x42\x35\117\x7a\x4c\x42\103\x43\110\62\x72\155\101\x35\53\141\103\x51\157\x6a\x36\125\130\x6e\x63\x39\x6d\161\x76\156\x69\x52\144\x43\x42\x75\165\116\60\x65\x7a\x31\x6a\125\64\x69\x56\x63\163\146\143\x39\x42\x79\53\57\x56\x58\130\114\x66\x49\121\x72\144\x61\132\64\x6c\x63\x4f\x44\x75\102\x39\146\x6e\x6e\112\x57\x70\x76\x30\x64\130\x39\104\x55\151\x46\114\x61\57\x2f\106\105\150\154\144\104\x45\x34\x50\x31\x78\144\172\x55\142\x77\111\150\x58\130\x72\x39\x53\117\x6f\104\132\124\x44\x6b\x44\x6a\143\x56\x36\x66\x66\150\70\146\x7a\x6d\x6b\x32\166\x30\146\x42\126\x48\171\64\164\x72\x4a\71\142\x71\x61\107\x44\112\x63\124\x64\113\161\x68\145\64\x51\x6e\x4a\114\x74\124\x52\171\146\125\124\x71\x62\107\x7a\x5a\x41\x69\x78\x33\x6c\155\152\x34\142\150\x75\130\110\153\102\172\x77\141\126\151\101\x4e\153\x4a\x4a\x4e\66\x4d\170\101\145\102\123\x48\x69\154\166\105\x38\x4c\x53\101\156\116\x78\x4c\123\x45\104\x55\110\111\x41\x53\x4f\147\x56\x65\171\127\x44\164\142\131\x62\113\125\62\x43\172\165\x49\x59\64\155\x67\x31\124\112\103\64\x4c\x51\62\155\162\132\x35\x35\125\x4e\x49\x53\171\147\x30\125\104\x38\131\x41\x35\x47\x6b\x55\71\x43\127\x4f\166\63\x64\170\117\x43\121\112\x55\x73\x52\x41\x59\132\106\145\x55\x79\x51\165\113\170\x31\x6c\x57\150\x4a\155\x76\170\x38\121\123\x34\115\x69\x4c\x6f\x62\x32\x2b\x31\63\123\x30\121\156\121\x53\x6b\x42\x71\x2f\x48\151\132\x53\170\x4b\106\x30\144\66\102\103\123\126\142\151\165\x5a\x59\x6e\123\x68\x76\x66\x6e\114\x2f\x55\x38\110\164\115\102\x72\x4b\156\x41\170\144\x55\126\x36\106\114\x36\132\x64\115\x70\126\147\152\x4b\x41\x4e\126\121\x32\x63\122\155\164\121\x72\x32\x4e\x65\147\126\x47\x50\142\x2b\143\x6f\120\65\x4f\161\x55\x54\x52\122\130\x57\x63\124\147\144\x56\111\153\115\101\x47\166\107\x76\103\x6d\x4b\157\x45\156\167\147\x52\x51\163\x6c\x61\103\114\110\110\70\67\x48\x4b\161\x61\161\x7a\162\101\x49\112\x47\x36\x35\122\x65\x50\x6f\x4b\x2b\102\x6e\x63\126\153\x56\x66\x4e\124\66\x71\166\x32\121\153\x67\64\104\114\x63\x73\142\x31\x43\x54\x68\150\126\x54\117\x36\x35\150\121\x74\171\145\71\x4a\x59\x77\121\126\x58\x54\64\121\x6f\113\130\x51\160\x6d\x56\127\x53\167\x4a\152\171\153\165\x37\x63\x59\160\166\127\x74\x54\153\146\116\x4a\143\150\62\153\131\123\x73\126\161\x6b\x51\x31\157\160\156\160\x55\x39\120\124\x39\117\x58\154\64\120\131\x51\x44\x4f\121\126\70\x42\x69\x41\157\166\163\x2f\166\x4d\132\113\141\167\161\x6c\102\102\x71\x45\x67\143\106\x6c\130\64\126\153\x6f\x55\x44\x6a\x41\x30\146\127\163\167\x51\106\x72\62\144\x68\x34\153\x62\102\x52\121\107\124\105\62\57\131\106\116\164\x36\x55\165\x31\x35\x4e\144\x78\x46\157\166\106\x68\61\x48\x45\x44\170\x37\x6c\x33\x56\122\111\x55\161\157\123\70\144\x6a\x34\104\x4e\x59\x4f\x4e\167\126\63\x35\53\x78\152\154\x54\x30\116\x51\x33\161\147\x55\x68\x4b\53\x59\x55\67\x57\111\x58\107\107\x4a\112\53\105\106\x53\142\172\110\x44\67\115\150\x31\x30\x70\65\x41\123\111\121\165\x4e\x64\110\107\x6c\x73\113\145\103\x5a\141\x6b\62\x4c\x70\x62\x61\x56\x70\144\110\57\x66\x4a\x33\x6a\143\103\x32\104\142\65\150\x74\x69\x76\122\163\60\63\103\120\x52\x74\x69\147\x32\64\116\x32\62\x37\x6a\x69\x78\x32\122\153\x45\x58\104\160\122\161\125\107\x56\102\x59\x6d\141\63\x6a\117\63\x52\x6d\x4d\x41\111\x6b\106\120\70\x70\153\157\x5a\x52\x66\67\x2b\x38\x37\x68\x63\x72\x63\x4f\151\x39\x7a\123\x30\126\x51\143\x43\113\x34\67\167\153\x69\166\x6b\67\104\71\x39\130\162\142\63\150\x64\147\x72\x44\x67\x34\x71\x41\153\170\x6f\x55\x41\x58\171\101\57\x6a\x45\141\x57\x56\112\103\141\130\x37\x5a\142\x6b\60\142\112\x36\x71\x43\x54\141\120\x72\x43\171\x5a\x4e\x4e\x51\x32\160\x70\61\x44\101\106\143\x59\147\x45\x48\x5a\x54\144\60\124\61\x52\x4a\125\x4f\157\154\160\x64\151\63\121\145\105\x36\x75\x6e\147\122\x65\x73\106\x75\121\172\x57\x6d\x65\x76\x70\131\x4a\167\152\160\161\x49\154\x5a\x4a\x68\115\x73\x71\110\154\143\x6b\153\x6c\141\x63\x56\161\165\x63\101\x72\x39\x47\112\x6d\x4a\120\116\x39\x4d\x74\x6d\60\153\167\172\x50\x7a\67\166\x39\166\x6a\x44\151\164\117\70\x2f\x50\172\x34\x47\160\x7a\130\x46\x66\x44\66\105\124\x50\x45\x68\x45\x54\130\x79\121\143\x72\x47\x6c\121\x4b\x78\x6e\157\112\x45\x42\147\141\x55\145\165\x64\x51\x69\111\66\104\x63\x4d\x47\x55\x65\x37\x32\145\x6f\x31\70\x2f\x73\144\x6f\x5a\161\157\104\163\70\x7a\167\156\163\x39\132\170\143\160\172\120\142\115\x64\x31\171\162\113\57\x6e\125\x61\x34\x4c\x6f\x78\115\122\x59\x69\x61\132\x52\x54\144\106\106\111\105\150\x65\163\x58\x38\x6d\x72\x70\122\101\x58\146\x58\124\57\160\170\124\154\x57\x4f\60\70\166\x68\x31\x4c\x38\63\x74\102\x49\170\x59\x59\144\x71\124\x45\x2b\x6b\x65\x36\127\x42\113\x47\123\163\53\x66\x48\x4f\x53\x47\65\124\103\x48\x38\157\x41\122\x6d\x52\x57\131\166\170\171\x6a\63\x4b\60\153\121\x6f\x45\x79\x72\x52\110\x61\x42\x77\63\x66\62\x56\123\x52\61\65\165\172\x6c\x78\122\66\x59\124\x36\x53\x31\x4a\144\57\x61\125\x2f\x30\141\157\121\x35\160\x59\x70\162\122\x55\x46\61\x4e\x6c\153\141\x6a\x50\x51\x75\154\x49\112\x54\142\150\60\107\132\151\143\167\x48\104\111\x4f\x67\x74\115\x54\103\x66\x56\x45\53\x71\x72\150\x78\141\x6f\x6d\131\x7a\x51\x59\130\106\x30\154\155\151\x77\x69\x67\144\x6d\63\170\x52\122\126\145\102\67\x6b\x39\x6d\112\166\172\x2f\143\x6c\156\x47\x57\x4c\x35\105\x4a\x34\x42\121\164\x63\116\x74\71\166\125\x43\x51\x31\132\x47\x6f\x32\163\145\x39\145\65\167\x6d\x6c\x75\x34\130\155\x33\71\x2f\x66\125\143\x4a\x78\x4c\170\114\x48\122\x6e\61\53\x2f\160\160\x4f\x4a\x71\151\112\x49\x54\151\x67\151\104\x6f\144\x71\x49\170\x33\167\101\x30\116\65\x65\130\157\x79\116\x68\x6f\57\120\107\x43\x56\x66\x72\53\146\150\x53\112\104\152\157\124\x31\x61\124\167\53\63\144\130\57\x62\x79\x44\x30\x50\x4c\x64\145\63\66\x5a\62\x75\70\157\x4b\x54\156\x71\x35\117\x61\164\115\112\x53\x57\165\x47\131\x30\60\x5a\x51\152\x39\114\x61\62\x6a\63\104\147\115\x67\112\153\156\127\x43\164\x65\125\122\165\x46\x4f\x56\x55\144\104\x49\146\147\x71\67\x35\151\67\x71\170\101\152\x36\120\x52\x71\x2b\x2f\x44\106\154\120\x76\152\122\105\x79\112\65\115\112\111\115\x54\x4d\172\x79\x49\61\x37\x39\x44\x2b\112\114\61\x63\141\166\x52\x79\x75\141\65\127\112\x42\104\x43\x6d\64\127\x36\116\x73\x44\x33\x77\x72\x2f\x56\x39\x70\x31\x6b\x2b\x52\102\x36\x38\x74\x4d\x4f\x76\164\x34\x46\163\x70\125\116\161\x4d\x31\x32\117\172\x5a\x45\x47\x42\101\x38\x78\x2b\130\126\106\142\x4a\x4d\152\130\172\x42\121\64\x62\150\70\x33\147\70\156\60\64\x37\x76\x52\67\60\x6a\67\x75\x45\70\103\111\126\x2b\65\132\x4c\67\x71\x6c\x4d\x4a\x61\x57\127\164\x37\x35\x34\111\x36\127\62\x42\x63\60\130\x66\166\166\155\67\x71\64\63\107\117\103\110\143\151\x42\125\x6b\67\x42\x49\146\x6c\x37\x45\x6d\125\66\x6a\x78\104\x4f\102\53\106\x46\x4a\x32\164\64\105\147\x38\x42\157\x69\127\104\x53\x6d\x79\x79\x79\65\x41\x67\111\x68\x71\151\127\x31\x75\x4a\x43\104\x37\127\130\x36\x52\114\x76\144\x4c\x75\130\x4e\172\x64\152\166\132\127\125\146\60\102\117\117\x58\x6c\53\x6a\153\163\x47\x58\114\x6d\157\67\132\x73\x42\x55\x37\121\156\104\101\106\62\167\66\x49\112\x73\x58\x62\125\x64\124\107\143\125\65\x6d\130\124\x63\141\156\x72\x66\x67\x75\105\115\113\x72\66\123\x65\114\132\112\x4d\x5a\x41\x4c\x41\70\115\x66\x66\x47\x47\x30\61\x67\146\x44\126\x68\x32\x56\x66\x49\x68\x36\117\x71\164\53\163\x61\x74\x72\126\141\x4c\x72\156\53\157\161\66\x44\x67\x2f\x55\x48\101\67\161\x4c\x65\110\147\x77\107\x37\161\x46\x58\125\154\63\166\x78\171\125\x37\120\114\66\x75\x6e\x45\x6f\x57\x70\71\x55\x7a\123\155\x2f\x7a\113\x30\x62\151\x70\145\x34\151\x49\x42\x45\164\x49\x78\x51\165\x73\x66\70\170\x69\121\165\x71\x68\x6b\166\x64\x68\x4d\x4a\121\x4c\65\x4d\161\x65\x6f\116\x67\71\x50\124\x50\162\67\60\123\103\x49\103\151\x66\x66\66\146\130\101\x6c\127\107\x53\116\70\x78\x59\x37\130\141\105\x6b\x42\x30\145\x56\x56\x65\x4c\162\x32\61\165\163\101\106\x66\x30\x4d\122\x7a\126\x4e\x52\x35\101\x31\x56\x62\x4f\166\126\x49\144\163\x53\160\132\112\60\x46\120\x68\110\171\123\160\146\64\65\116\x2b\160\63\x54\127\123\x45\153\x64\170\x52\166\131\145\113\x39\x71\105\x46\60\132\124\x72\132\x2f\x46\x65\x31\x47\120\122\142\150\x65\x71\x44\x48\x43\161\103\163\x4f\x64\x54\141\146\x78\117\x6b\113\66\102\x4e\103\121\x64\162\x65\142\151\151\x49\x4f\146\57\x66\x74\107\71\66\x79\155\105\x35\71\63\x34\x39\142\x76\x49\x33\x4a\125\146\x7a\x52\125\124\102\x74\107\x58\x54\x35\111\x32\x72\115\x31\61\x49\57\x4f\x73\112\111\x6e\x31\x36\110\125\x34\x55\x6d\x31\x50\x38\126\x47\111\x70\x70\x66\x48\x41\121\x51\144\x37\157\111\x73\105\67\61\x36\x75\126\x64\x6a\65\x5a\x47\152\x58\163\103\131\x35\x6f\x71\x39\x7a\x67\x4d\167\63\150\x37\147\143\x6a\142\66\116\171\151\x56\x36\x2b\x67\147\121\x35\57\106\102\x4c\x73\x55\112\x62\111\x73\x6e\53\53\x61\x2b\x46\57\110\x77\x67\x32\172\67\x55\x54\x37\x2b\171\111\167\113\60\x4f\141\112\x45\147\113\x66\x47\123\x64\154\x36\x41\x36\166\x46\x49\163\x61\106\x4d\62\103\x6a\60\111\x42\x2f\152\x51\x5a\x44\171\120\x51\x6e\x35\171\x54\125\x59\132\x76\127\x4a\63\60\105\x38\x77\143\x64\x32\x31\x30\x71\x71\102\x43\x53\x39\x31\145\x5a\x6e\x76\x77\x35\145\123\x59\142\x39\151\130\x6b\x4c\x63\x37\102\x70\132\x4c\124\x6f\x72\63\166\123\x6d\105\113\62\x64\x70\71\105\115\x56\144\x77\116\131\120\145\x54\102\x51\x78\122\x39\x64\x59\111\71\161\x7a\116\57\x64\x33\x63\154\x76\x6c\x76\x77\172\66\171\x52\110\170\115\x4a\x59\x55\x4f\64\x52\x31\115\150\x6d\127\x69\x51\x39\64\103\156\124\x53\x6d\x7a\x46\x50\x48\161\160\x2b\x49\x32\x73\141\163\x6e\111\130\x62\x52\x6c\71\x44\63\x36\123\x2f\70\126\x59\101\103\x31\x32\113\x43\63\x30\110\122\101\x59\x77\101\101\101\x41\x42\112\x52\125\x35\105\162\153\112\x67\147\x67\75\x3d"); class pdfnc_helper { protected static $arrProtectflags = array("\155\x6f\x64\151\x66\x79", "\x65\x78\x74\162\141\143\164", "\160\x72\151\x6e\x74", "\x70\162\151\156\164\x2d\x68\151\147\x68", "\143\157\160\171", "\x61\x6e\156\157\164\x2d\146\157\x72\155\x73", "\146\x69\154\154\55\146\x6f\x72\x6d\163"); public static function getPdfData($arrPDF, &$arrTokens, $pdfdatei) { $objDB = Database::getInstance(); $hascontent = false; if (class_exists(\Codefog\HasteBundle\StringParser::class)) { $hasteStringParser = new \Codefog\HasteBundle\StringParser(); } if (isset($arrTokens["\146\157\x72\155\x63\x6f\x6e\x66\151\147\137\x69\144"])) { $objFine = $objDB->prepare("\123\x45\114\x45\103\x54\40\x2a\x20\x46\122\x4f\x4d\x20\x74\154\x5f\146\x6f\x72\x6d\137\146\x69\145\x6c\x64\40\127\110\x45\122\x45\40\140\164\x79\x70\145\x60\75\77\40\x41\x4e\x44\40\160\x69\144\x3d\x3f")->execute("\x66\151\156\x65\125\x70\154\x6f\x61\144\x65\x72", $arrTokens["\146\x6f\162\x6d\x63\157\156\146\x69\x67\x5f\x69\144"]); while ($objFine->next()) { $tokenname = "\146\157\162\x6d\x5f" . $objFine->name; if (isset($arrTokens[$tokenname])) { $arrFiles = StringUtil::trimsplit("\x2c", $arrTokens[$tokenname]); $nr = 1; foreach ($arrFiles as $filename) { $arrTokens[$tokenname . "\137\x23" . $nr] = $filename; $arrTokens[$tokenname . "\137\43" . $nr . "\137\x62\141\163\x65\156\141\155\x65"] = basename($filename); $nr++; } } } $objUpl = $objDB->prepare("\x53\105\x4c\105\103\x54\x20\x2a\x20\106\122\x4f\115\x20\164\154\x5f\x66\157\x72\155\137\x66\x69\x65\x6c\x64\40\127\110\x45\122\x45\40\x60\164\171\160\x65\140\75\x3f\40\101\116\104\x20\160\x69\x64\x3d\x3f")->execute("\165\x70\x6c\157\x61\x64", $arrTokens["\x66\x6f\162\155\143\157\156\146\151\147\137\x69\144"]); while ($objUpl->next()) { $tokenname = "\146\157\x72\155\x5f" . $objUpl->name; if (isset($arrTokens[$tokenname])) { $arrTokens[$tokenname . "\x5f\x62\x61\x73\145\x6e\141\155\x65"] = basename($arrTokens[$tokenname]); } } } $l = array(); $l["\x61\x5f\155\145\x74\x61\x5f\x64\x69\162"] = "\154\164\162"; $l["\141\x5f\155\145\x74\141\137\x63\x68\141\162\163\145\164"] = Config::get("\143\150\x61\162\141\x63\x74\145\162\x53\145\x74"); $l["\x61\137\x6d\145\164\141\x5f\x6c\x61\x6e\147\165\141\147\x65"] = substr($GLOBALS["\124\x4c\x5f\114\101\x4e\x47\x55\101\107\x45"], 0, 2); $l["\x77\x5f\160\x61\147\145"] = "\160\141\147\x65"; $font = PDF_FONT_NAME_MAIN; $pdf = new \setasign\Fpdi\Tcpdf\Fpdi(PDF_PAGE_ORIENTATION, "\155\155", PDF_PAGE_FORMAT, true); $pages = 0; if (!empty($arrPDF["\166\157\162\154\141\x67\145"]) && file(TL_ROOT . "\x2f" . $arrPDF["\166\x6f\x72\x6c\x61\147\x65"])) { $pages = $pdf->setSourceFile(TL_ROOT . "\x2f" . $arrPDF["\x76\x6f\162\154\x61\x67\145"]); } $pdf->SetCreator(PDF_CREATOR . (Self::CDDAC68499E52601E4DBEB210CE9A1A7() ? "\54" : "\x2c\x20\104\105\x4d\x4f") . "\x20\143\x6f\156\164\x61\157\55\x70\x64\x66\55\156\143\x2d\141\164\x74\x61\143\x68\x6d\x65\x6e\164\x2d\142\165\156\x64\x6c\145"); $pdf->SetAuthor($arrPDF["\x61\x75\164\x68\x6f\162"]); $pdf->SetTitle($arrPDF["\164\151\x74\154\x65"]); $pdf->SetSubject($arrPDF["\x67\141\164\x65\164\151\164\x6c\145"]); $pdf->setPrintHeader(false); $pdf->setPrintFooter(false); $pdf->SetMargins(0, 0, 0); $pdf->SetAutoPageBreak(true, 0); $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO); $pdf->setLanguageArray($l); $pdf->getAliasNbPages(); $customfont = array("\122" => false, "\x42" => false, "\x49" => false, "\111\x42" => false); foreach ($customfont as $attr => $status) { if (!empty($arrPDF[$attr]) && file_exists(TL_ROOT . "\57" . $arrPDF[$attr])) { $customfont[$attr] = \TCPDF_FONTS::addTTFfont(TL_ROOT . "\x2f" . $arrPDF[$attr], '', '', 32, TL_ROOT . "\57" . dirname($arrPDF[$attr]) . "\x2f"); $file_parts = pathinfo(TL_ROOT . "\x2f" . $arrPDF[$attr]); $pdf->AddFont("\143\165\163\164\x6f\155\146\x6f\156\164", $attr == "\122" ? '' : $attr, $file_parts["\144\x69\162\x6e\x61\155\x65"] . "\57" . strtolower($customfont[$attr] . "\56\x70\150\160")); } } $seiten = -1; $where = ''; if ($pdfdatei !== '') { if (!empty($arrPDF["\155\x75\x6c\x74\x69\146\157\x72\x6d"]) && is_array($arrPDF["\x6d\165\x6c\164\x69\146\157\162\155"]) && $arrPDF["\x6d\165\x6c\x74\151\x66\x6f\162\x6d"][0]["\x62\x65\x64\x69\x6e\147\x75\156\x67"] !== '') { $seiten = array(); foreach ($arrPDF["\155\165\154\x74\x69\x66\157\162\155"] as $multi) { if (!Self::checkBedingung($multi, $arrPDF, $arrTokens)) { continue; } $arrBereiche = StringUtil::trimsplit("\54", $multi["\x73\145\151\164\x65\156"]); foreach ($arrBereiche as $ber) { if (strpos($ber, "\55") == false) { $seiten[] = $ber; } else { $se = StringUtil::trimsplit("\55", $ber); for ($i = $se[0]; $i <= $se[1]; $i++) { $seiten[] = $i; } } } } if (count($seiten) < 1) { unlink(TL_ROOT . "\57" . $pdfdatei); return false; } $seiten = array_unique($seiten, SORT_NUMERIC); $where = "\x20\x41\116\x44\x20\x70\141\147\x65\x20\x49\116\50" . implode("\x2c", $seiten) . "\51"; } } $objItems = $objDB->prepare("\x53\105\114\x45\x43\124\x20\x2a\x20\x46\x52\117\x4d\x20\x74\154\x5f\160\x64\x66\x6e\x63\x5f\x70\x6f\x73\x69\164\x69\157\156\x73\40\x57\x48\105\x52\105\x20\x70\165\x62\x6c\151\x73\x68\x65\144\75\61\40\x41\x4e\x44\x20\x70\151\144\75\x3f" . $where . "\40\x4f\122\x44\x45\x52\40\102\x59\40\x70\x61\147\145\x2c\x20\163\x6f\162\164\151\x6e\x67")->execute($arrPDF["\x67\141\x74\145\151\144"]); if ($objItems->numRows < 1 && $pdfdatei !== '') { unlink(TL_ROOT . "\x2f" . $pdfdatei); return false; } if ($objItems->numRows > 0) { $page = 0; $lastpos = array(0, 0); while ($objItems->next()) { $arrItem = array(); $arrItem["\151\x64"] = $objItems->id; $arrItem["\164\x79\160\145"] = $objItems->type; $arrItem["\x70\151\x63\x74\x79\x70\x65"] = $objItems->pictype; if ($objItems->pictype === "\165\x75\151\x64") { $picuuid = html_entity_decode($objItems->pictag); if (!\Contao\Validator::isUuid($picuuid)) { $picuuid = trim($picuuid, "\x23"); if (class_exists(\Haste\Util\StringUtil::class)) { $picuuid = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags("\43\43" . $picuuid . "\43\43", $arrTokens); } else { $picuuid = $hasteStringParser->recursiveReplaceTokensAndTags("\43\43" . $picuuid . "\43\x23", $arrTokens); } $picuuid = trim($picuuid, "\43"); } if (mb_substr($picuuid, 0, 2) === "\60\170") { $picuuid = mb_substr($picuuid, 2); } if (ctype_xdigit($picuuid) && mb_strlen($picuuid) == 32) { $picuuid = hex2bin($picuuid); } $objPic = FilesModel::findByUuid($picuuid); if ($objPic == null) { continue; } $arrItem["\160\151\x63\164\171\x70\x65"] = "\x66\x69\x6c\x65"; $arrItem["\160\x69\x63\164\141\147"] = $objPic->path ?? ''; } else { $objPic = FilesModel::findByUuid($objItems->picture); $arrItem["\x70\x69\143\x74\141\x67"] = $objItems->pictag; } $arrItem["\x70\x69\143\164\165\162\145"] = $objPic->path ?? ''; $arrItem["\142\x61\x72\x74\171\160\x65"] = $objItems->bartype; $arrItem["\164\x65\x78\164\151\164\145\x6d\163"] = StringUtil::deserialize($objItems->textitems); $arrItem["\160\x61\x67\x65"] = $objItems->page; $arrItem["\160\x6f\163\x78\x79"] = StringUtil::deserialize($objItems->posxy); $arrItem["\141\162\145\141"] = StringUtil::deserialize($objItems->textarea); $arrItem["\x61\154\151\x67\156"] = $objItems->align; $arrItem["\146\x6f\156\x74\x73\x74\x79\x6c\145"] = StringUtil::deserialize($objItems->fontstyle); $arrItem["\164\x65\x78\164\x74\162\x61\x6e\163\x66\157\x72\155"] = $objItems->texttransform; $arrItem["\x66\x6f\156\164\163\x69\x7a\x65"] = $objItems->fontsize; $arrItem["\164\145\x78\164\143\157\x6c\157\162"] = $objItems->textcolor; $arrItem["\x62\157\x72\144\x65\x72\162\x69\x67\x68\x74"] = $objItems->borderright; $arrItem["\x71\162\163\x69\172\x65"] = $objItems->qrsize; $arrItem["\142\x65\144\151\x6e\147\165\156\147"] = $objItems->bedingung; $arrItem["\x6e\x6f\142\154\141\x6e\x6b\x73"] = $objItems->noblanks; if (!empty($arrItem["\164\145\170\164\x69\x74\145\155\x73"])) { foreach ($arrItem["\x74\x65\170\164\151\164\x65\155\163"] as $key => $value) { $arrItem["\x74\145\170\x74\151\164\x65\155\163"][$key]["\x66\145\x6c\x64"] = StringUtil::decodeEntities($value["\x66\x65\154\x64"]); $arrItem["\x74\x65\x78\x74\x69\x74\145\155\x73"][$key]["\x62\145\x64\x69\x6e\x67\x75\x6e\x67"] = StringUtil::decodeEntities($value["\142\145\x64\151\156\147\x75\156\x67"]); } } if (isset($GLOBALS["\124\x4c\137\110\117\117\x4b\x53"]["\160\x64\x66\156\143\x5f\x50\x6f\x73\x69\x74\151\157\156\163"]) && \is_array($GLOBALS["\124\x4c\137\x48\x4f\117\x4b\123"]["\160\144\146\x6e\x63\x5f\x50\x6f\x73\x69\x74\x69\x6f\156\x73"])) { foreach ($GLOBALS["\x54\x4c\x5f\110\x4f\x4f\x4b\123"]["\160\144\146\x6e\x63\137\120\x6f\x73\x69\x74\151\157\156\x73"] as $callback) { $arrItem = System::importStatic($callback[0])->{$callback[1]}($arrItem); } } $arrItem["\x70\141\x67\145"] = $objItems->page; while ($page != $arrItem["\x70\141\147\x65"]) { if ($page > 0) { Self::demoHinweis($pdf); } if ($arrPDF["\141\154\x6c\x70\141\x67\x65\x73"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\160\x61\x67\145"]; } $pdf->AddPage(); if ($pages > 0) { if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pageheight = $arrPageDimensions["\x68\x6b"]; $pagewidth = $arrPageDimensions["\167\x6b"]; } } $text = ''; if ($arrItem["\x74\x79\160\x65"] === "\x70\151\x63") { $pos = array(); if (Self::is_relative($arrItem["\160\x6f\163\170\x79"][0])) { $pos[0] = $lastpos[0] + $arrItem["\160\x6f\163\170\171"][0]; } else { $pos[0] = $arrItem["\160\x6f\x73\170\x79"][0] + $arrPDF["\157\x66\x66\163\145\x74"][0]; } if (Self::is_relative($arrItem["\160\157\x73\170\171"][1])) { $pos[1] = $lastpos[1] + $arrItem["\x70\157\163\x78\x79"][1]; } else { $pos[1] = $arrItem["\x70\x6f\x73\170\x79"][1] + $arrPDF["\157\x66\x66\163\145\x74"][1]; } if ($pdfdatei !== '') { if (!Self::checkBedingung($arrItem, $arrPDF, $arrTokens)) { continue; } switch ($arrItem["\160\x69\x63\x74\171\160\x65"]) { case "\x66\151\154\145": $imageFactory = System::getContainer()->get("\x63\x6f\x6e\x74\141\157\x2e\x69\x6d\x61\x67\145\56\151\155\x61\x67\x65\x5f\x66\x61\143\x74\157\x72\171"); $image = $imageFactory->create(TL_ROOT . "\x2f" . $arrItem["\160\151\143\164\165\x72\145"], array($arrItem["\x61\162\145\x61"][0] * 11.8, $arrItem["\x61\x72\x65\x61"][1] * 11.8, ResizeConfiguration::MODE_CROP)); $src = str_replace("\45\x32\60", "\40", $image->getUrl(TL_ROOT)); $bildtyp = Self::getimagetype($src); if ($bildtyp != '') { $pdf->Image(TL_ROOT . "\x2f" . $src, $pos[0], $pos[1], $arrItem["\x61\x72\x65\141"][0], $arrItem["\x61\x72\x65\141"][1], $bildtyp); $hascontent = true; } break; case "\165\x70\154\157\x61\144": if (class_exists(\Haste\Util\StringUtil::class)) { $png = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags("\x23\x23" . $arrItem["\160\151\x63\164\141\147"] . "\x23\43", $arrTokens); } else { $png = $hasteStringParser->recursiveReplaceTokensAndTags("\x23\43" . $arrItem["\160\x69\143\164\x61\x67"] . "\43\x23", $arrTokens); } if (substr($png, 0, 2) === "\x23\43") { break; } if ($png[0] !== "\x2f") { $png = TL_ROOT . "\x2f" . $png; } $imageFactory = System::getContainer()->get("\x63\157\156\164\141\157\x2e\151\x6d\141\147\145\x2e\151\155\x61\x67\145\x5f\146\x61\143\164\157\x72\171"); $image = $imageFactory->create($png, array($arrItem["\141\162\x65\x61"][0] * 11.8, $arrItem["\x61\x72\x65\x61"][1] * 11.8, ResizeConfiguration::MODE_CROP)); $src = str_replace("\45\62\x30", "\40", $image->getUrl(TL_ROOT)); $bildtyp = Self::getimagetype($src); if ($bildtyp != '') { $pdf->Image(TL_ROOT . "\57" . $src, $pos[0], $pos[1], $arrItem["\x61\x72\x65\x61"][0], $arrItem["\141\x72\x65\141"][1], $bildtyp); $hascontent = true; } break; case "\x64\141\x74\141": $png = $arrTokens[$arrItem["\160\151\143\x74\141\x67"]]; $png = base64_decode(preg_replace("\x23\136\x64\141\x74\141\x3a\151\x6d\x61\x67\x65\x2f\133\x5e\x3b\135\x2b\73\142\141\163\145\x36\x34\x2c\43", '', $png)); $pdf->Image("\x40" . $png, $pos[0], $pos[1], $arrItem["\x61\162\x65\x61"][0], $arrItem["\x61\x72\145\141"][1], "\x50\116\107"); $hascontent = true; break; } } else { $png = base64_decode(preg_replace("\x23\136\x64\x61\x74\x61\72\x69\155\x61\147\145\x2f\x5b\136\x3b\x5d\x2b\73\142\141\x73\x65\x36\64\54\43", '', IMGDUMMY)); $pdf->Image("\x40" . $png, $pos[0], $pos[1], $arrItem["\141\x72\x65\x61"][0], $arrItem["\x61\162\x65\141"][1], "\120\116\x47"); $pdf->SetXY($lastpos[0] = $pos[0], $lastpos[1] = $pos[1]); $pdf->SetTextColor(0, 0, 0); $pdf->writeHTML($arrItem["\x70\x69\x63\x74\x79\x70\145"] == "\x66\151\x6c\145" ? basename($arrItem["\160\151\143\164\165\162\x65"]) : $arrItem["\160\x69\x63\x74\x61\147"], false, false, true, false, "\x4c"); $hascontent = true; } } else { $fontattr = ''; if (is_array($arrItem["\146\x6f\x6e\164\x73\x74\x79\154\145"])) { foreach ($arrItem["\x66\x6f\156\164\x73\x74\x79\x6c\x65"] as $attr) { switch ($attr) { case "\151\164\141\x6c\x69\x63": $fontattr .= "\x49"; break; case "\142\157\154\x64": $fontattr .= "\x42"; break; } } } switch ($arrItem["\141\154\151\x67\x6e"]) { case "\162\x69\x67\x68\x74": $align = "\x52"; break; case "\143\145\156\x74\145\x72": $align = "\103"; break; default: $align = "\x4c"; } $color = $arrPDF["\x74\145\x78\x74\x63\157\154\157\x72"] != '' ? $arrPDF["\x74\x65\170\x74\x63\157\x6c\x6f\162"] : "\x30\x30\60\60\x30\60"; if (!empty($arrItem["\x74\x65\x78\164\143\157\154\x6f\162"])) { $color = $arrItem["\x74\145\x78\164\x63\157\154\157\162"]; } if (strlen($color) != 6) { if (strlen($color) == 3) { $color = substr($color, 0, 1) . substr($color, 0, 1) . substr($color, 1, 1) . substr($color, 1, 1) . substr($color, 2, 1) . substr($color, 2, 1); } else { $color = "\60\60\x30\60\x30\60"; } } $r = hexdec(substr($color, 0, 2)); $g = hexdec(substr($color, 2, 2)); $b = hexdec(substr($color, 4, 2)); $pdf->SetTextColor($r, $g, $b); if ($fontattr === "\102\x49") { $fontattr = "\111\x42"; } $fontidx = $fontattr == '' ? "\122" : $fontattr; $pdf->SetFont(empty($customfont[$fontidx]) ? "\x68\x65\x6c\x76\145\x74\151\143\x61" : "\143\x75\x73\164\x6f\x6d\146\157\156\x74", $fontattr, $arrItem["\x66\157\x6e\x74\163\x69\x7a\145"]); $text = ''; $blank = $arrItem["\156\x6f\x62\x6c\x61\x6e\153\x73"] ? '' : "\40"; if (is_array($arrItem["\164\x65\170\x74\151\x74\145\x6d\163"])) { foreach ($arrItem["\x74\145\x78\164\151\x74\x65\x6d\x73"] as $item) { if ($pdfdatei !== '') { if (!Self::checkBedingung($item, $arrPDF, $arrTokens)) { continue; } } if (substr($item["\x66\x65\154\x64"], 0, 1) == "\42") { if (substr($item["\x66\x65\154\144"], 1, 1) == "\x2c" || substr($item["\146\145\x6c\144"], 1, 1) == "\x2e" || substr($item["\x66\x65\x6c\144"], 1, 1) == "\x3c") { $text = trim($text); } $text .= Controller::replaceInsertTags(trim($item["\146\x65\154\x64"], "\42"), false) . $blank; } else { if ($pdfdatei !== '') { if (!empty(trim($item["\x66\x65\x6c\144"]))) { $text .= "\x23\x23" . trim(Controller::replaceInsertTags(trim($item["\146\x65\x6c\x64"]), false), "\x23") . "\x23\43" . $blank; } } else { $text .= Controller::replaceInsertTags(trim($item["\146\145\x6c\x64"]), false) . $blank; } } } } if ($text === '') { continue; } } while ($page != $arrItem["\160\x61\x67\145"]) { Self::demoHinweis($pdf); if ($arrPDF["\x61\x6c\154\160\x61\147\x65\163"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\160\x61\147\145"]; } $pdf->AddPage(); if ($pages > 0) { if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pageheight = $arrPageDimensions["\x68\x6b"]; $pagewidth = $arrPageDimensions["\167\x6b"]; } } while ($page != $arrItem["\x70\141\x67\x65"]) { Self::demoHinweis($pdf); if ($arrPDF["\x61\x6c\x6c\x70\x61\147\x65\163"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\x70\141\x67\x65"]; } if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7() && $page > 2) { break; } $pdf->AddPage(); if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pagewidth = $arrPageDimensions["\x77\x6b"]; } if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7() && $page > 2) { break; } if (Self::is_relative($arrItem["\160\x6f\163\170\x79"][0])) { $borderleft = $lastpos[0] + $arrItem["\x70\157\163\170\171"][0]; } else { $borderleft = $arrItem["\x70\157\163\170\171"][0] + $arrPDF["\157\x66\146\x73\145\164"][0]; } $borderright = 0 - $arrPDF["\x6f\146\x66\163\x65\x74"][0]; if ($arrItem["\x62\157\162\x64\x65\x72\x72\x69\147\150\x74"] != '' && is_numeric($arrItem["\142\157\162\144\145\x72\162\151\x67\150\164"]) && $pagewidth - $arrItem["\142\157\162\x64\x65\x72\x72\x69\147\x68\164"] > $borderleft - $arrPDF["\157\x66\x66\163\145\x74"][0]) { $borderright = $arrItem["\x62\157\162\x64\x65\162\162\151\x67\x68\x74"] - $arrPDF["\157\146\x66\163\x65\x74"][0]; } $pdf->SetMargins($borderleft, 0, $borderright); if (Self::is_relative($arrItem["\x70\x6f\x73\170\x79"][0])) { $pos[0] = $lastpos[0] + $arrItem["\x70\157\163\170\x79"][0]; } else { $pos[0] = $arrItem["\160\157\x73\x78\x79"][0] + $arrPDF["\157\x66\x66\x73\x65\164"][0]; } if (Self::is_relative($arrItem["\160\157\163\170\171"][1])) { $pos[1] = $lastpos[1] + $arrItem["\x70\x6f\x73\170\x79"][1]; } else { $pos[1] = $arrItem["\160\x6f\163\x78\x79"][1] + $arrPDF["\157\146\x66\163\145\x74"][1]; } $pdf->SetXY($lastpos[0] = $pos[0], $lastpos[1] = $pos[1]); if (class_exists(\Haste\Util\StringUtil::class)) { $text = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags($text, $arrTokens); } else { $text = $hasteStringParser->recursiveReplaceTokensAndTags($text, $arrTokens); } switch ($arrItem["\x74\x79\x70\x65"]) { case "\161\162\x63\x6f\x64\x65": if (strlen(trim($text)) > 0) { switch ($arrItem["\x62\141\162\x74\x79\160\145"]) { case "\104\101\x54\x41\115\x41\124\x52\x49\x58": case "\121\x52\103\x4f\104\105\54\114": case "\121\122\103\117\104\105\x2c\x4d": case "\121\x52\103\x4f\104\105\54\121": case "\121\x52\x43\117\104\105\x2c\x48": $style = array("\142\157\162\144\x65\x72" => false, "\166\160\x61\x64\144\x69\x6e\x67" => "\x61\x75\x74\x6f", "\x68\x70\x61\x64\144\151\156\147" => "\141\x75\x74\157", "\146\x67\143\157\x6c\x6f\x72" => array($r, $g, $b), "\142\x67\x63\157\x6c\x6f\162" => array(255, 255, 255), "\155\x6f\x64\x75\154\145\x5f\x77\151\x64\x74\150" => $arrItem["\x71\x72\163\151\172\x65"], "\155\157\144\165\154\x65\137\x68\145\x69\x67\x68\x74" => $arrItem["\x71\162\163\x69\172\145"]); $pdf->write2DBarcode(trim($text), $arrItem["\x62\x61\162\x74\x79\160\x65"], $pos[0], $pos[1], 0, 0, $style, "\116"); break; case "\120\x44\x46\64\61\67": $style = array("\x62\x6f\x72\x64\x65\162" => false, "\x76\x70\x61\x64\x64\x69\156\147" => "\141\x75\x74\x6f", "\150\x70\x61\144\x64\x69\156\147" => "\x61\165\164\157", "\x66\x67\143\157\x6c\157\x72" => array($r, $g, $b), "\142\147\143\x6f\154\157\162" => array(255, 255, 255)); $pdf->write2DBarcode(trim($text), $arrItem["\x62\x61\x72\164\x79\160\145"], $pos[0], $pos[1], 0, $arrItem["\161\x72\x73\151\x7a\x65"] * 10, $style, "\116"); break; default: $style = array("\163\164\x72\x65\164\143\x68" => false, "\x66\x69\164\167\151\x64\164\150" => true, "\142\x6f\162\x64\x65\x72" => false, "\150\160\x61\x64\x64\151\x6e\147" => "\x61\165\x74\157", "\x76\x70\141\x64\x64\151\156\147" => "\141\165\x74\157", "\146\x67\143\157\x6c\x6f\162" => array($r, $g, $b), "\x62\147\143\157\x6c\x6f\x72" => array(255, 255, 255), "\164\x65\170\164" => false); $pdf->write1DBarcode(trim($text), $arrItem["\x62\141\162\164\171\x70\x65"], $pos[0], $pos[1], '', $arrItem["\x71\x72\x73\x69\x7a\145"] * 5, 0.3, $style, "\116"); break; } $hascontent = true; } break; case "\160\151\143": break; default: switch ($arrItem["\164\x65\x78\x74\x74\162\141\156\163\146\157\162\x6d"]) { case "\x75\x70\160\x65\162\143\141\163\x65": $text = mb_convert_case($text, MB_CASE_UPPER, "\125\x54\x46\55\x38"); break; case "\154\157\x77\x65\162\x63\x61\163\145": $text = mb_convert_case($text, MB_CASE_LOWER, "\125\x54\x46\55\70"); break; case "\x63\x61\x70\151\x74\x61\154\x69\x7a\x65": $text = mb_convert_case($text, MB_CASE_TITLE, "\x55\x54\106\55\x38"); break; } $pdf->writeHTML(nl2br(trim($text)), false, false, true, false, $align); $hascontent = true; break; } } } if (Self::CDDAC68499E52601E4DBEB210CE9A1A7() === true || $page < 2) { while ($page < $pages && $arrPDF["\x61\x6c\154\x70\x61\x67\x65\163"] == 1) { Self::demoHinweis($pdf); $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } $pdf->AddPage(); $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } } Self::demoHinweis($pdf); $beUserLoggedIn = false; $beUserLoggedIn = false; $arrVersion = explode("\56", VERSION); if (sha1(session_id() . (!Config::get("\144\151\163\x61\x62\154\x65\x49\160\103\x68\145\143\153") ? Environment::get("\x69\x70") : '') . "\102\x45\x5f\x55\x53\105\x52\x5f\x41\x55\x54\110") == Input::cookie("\102\105\137\125\x53\105\122\137\101\125\x54\x48")) { $beUserLoggedIn = true; } else { if ($arrVersion[1] >= 6) { $beUserLoggedIn = System::getContainer()->get("\143\157\x6e\164\141\157\56\x73\x65\143\x75\162\151\164\171\56\164\157\153\x65\x6e\137\x63\150\x65\143\153\145\x72")->hasBackendUser() === true; } } if ($beUserLoggedIn && $arrPDF["\x74\x6f\x6b\145\x6e\154\151\163\164"] == 1) { $pdf->AddPage(); $pdf->SetTextColor(0, 0, 0); $pdf->SetFont($font, '', 11); $pdf->SetMargins(15, 10, 15); $pdf->SetAutoPageBreak(true, 10); $pdf->SetXY($lastpos[0] = 15, $lastpos[1] = 10); if ($pdfdatei !== '') { $text = "\x41\166\141\x69\154\141\142\x6c\145\x20\x54\x6f\153\x65\156\x73\72\74\142\x72\x3e\x3c\x62\x72\76\x3c\164\x61\x62\154\145\76"; $arrTokens["\x70\144\x66\156\143\x5f\141\x74\164\x61\x63\x68\155\x65\x6e\x74"] = $pdfdatei; $arrTokens["\160\144\x66\156\x63\137\144\157\143\x75\x6d\x65\x6e\x74"] = basename($pdfdatei); foreach ($arrTokens as $token => $content) { $content = trim($content); if (mb_strlen($content) > 200) { $content = mb_substr($content, 0, 196) . "\40\56\56\x2e"; } $c = preg_replace("\x7e\133\136\141\55\x7a\101\x2d\132\60\x2d\71\134\55\53\75\137\134\100\134\56\72\x3b\x2c\x5c\x7b\134\x7d\134\x5b\x5c\135\134\50\134\x29\134\x5c\x2f\42\x27\x5c\x6e\xc3\xa4\xc3\xb6\xc3\xbc\xc3\204\303\x96\xc3\234\xc3\x9f\xe2\x80\xa6\xc3\xa0\xc3\241\303\242\xc3\xa9\303\250\xc3\264\xc3\252\x23\x20\135\176\x69", '', $content); if ($c !== $content) { continue; } if (mb_stripos($token, "\160\x61\163\163\167\x6f\162\x64") != false || mb_stripos($token, "\x70\x61\163\163\x77\x6f\x72\164")) { continue; } $text .= "\74\164\162\76\x3c\164\144\x3e\x23\43" . $token . "\43\x23\x3c\57\164\144\76\74\164\144\76" . nl2br($content) . "\x3c\x2f\x74\x64\x3e\74\57\x74\162\76"; } $text .= "\x3c\x2f\164\x61\x62\154\x65\76"; } else { $text = "\101\x76\x61\x69\154\141\142\x6c\x65\x20\124\157\x6b\x65\156\x73\72\x3c\x62\162\x3e\74\x62\162\76\x3c\142\x72\76\74\142\x72\x3e" . "\124\150\x65\x20\x61\166\141\151\x6c\141\142\154\145\40\123\151\155\x70\x6c\145\x54\x6f\x6b\145\156\163\x20\162\x65\x73\x75\x6c\164\163\40\146\x72\x6f\155\x20\x74\x68\145\x20\143\141\x6c\154\40\157\x66\40\164\150\145\x20\x6e\x6f\x74\x69\146\151\143\141\x74\151\157\x6e\56\40\111\x6e\40\164\150\145\x20" . "\x74\x65\163\x74\40\120\104\x46\x20\151\x74\40\151\163\40\156\x6f\164\x20\x70\x6f\163\163\x69\x62\154\145\x20\x74\157\x20\144\145\164\145\x63\164\x20\164\150\x65\x20\x72\145\x61\x6c\40\151\156\x70\x75\164\x20\x74\157\153\145\x6e\163\56\x20" . "\131\157\165\40\167\151\154\x6c\40\146\x69\156\144\x20\164\x68\x65\40\x74\x6f\153\x65\x6e\40\154\151\x73\164\x20\x6f\x6e\154\171\x20\x69\x6e\x20\x74\150\145\40\157\162\x69\147\151\156\141\154\x20\x6e\x6f\164\x69\x66\151\x63\141\164\151\x6f\156\x2e\74\x62\x72\76\74\142\x72\x3e" . "\74\163\164\162\x6f\x6e\x67\76\123\x74\x61\171\40\154\157\x67\147\145\x64\40\151\x6e\x20\x69\156\x20\x74\x68\145\x20\142\141\x63\153\145\156\x64\x3c\57\163\164\162\157\x6e\x67\76\x20\x61\x6e\144\x20\164\150\x65\156\40\x73\145\x6e\x64\x20\x74\150\x65\40\146\x6f\x72\155\x20\151\156\x20\x74\x68\x65\40" . "\146\x72\157\x6e\x74\x65\156\144\56\40\131\157\165\40\x73\150\157\165\154\144\40\164\x68\145\156\x20\146\151\156\x64\x20\x61\x20\120\104\106\40\167\x69\x74\150\40\x74\150\145\40\164\157\153\x65\x6e\x20\x6c\151\x73\164\40\x69\x6e\40\x74\150\x65\x20\155\141\x69\154\40\141\x74\164\x61\x63\x68\155\145\156\164\56\x3c\x62\x72\76\x3c\x62\x72\x3e" . "\131\x6f\165\x20\x63\x61\x6e\x20\144\151\x73\141\142\154\x65\40\164\150\x65\x20\x74\157\153\x65\156\x20\154\x69\163\x74\40\x70\141\x67\145\x20\x69\x6e\x20\164\x68\x65\x20\116\x6f\164\x69\x66\151\x63\141\164\151\x6f\156\40\x43\145\x6e\164\x65\x72\40\151\x6e\x20\x74\x68\145\x20\160\162\x6f\x70\x65\162\x74\151\x65\x73\40\x6f\146\40\164\x68\145\40\147\141\164\145\x77\141\171\56" . "\x3c\142\162\76\x3c\x62\162\76\x3c\142\162\76\x3c\142\162\x3e" . "\x44\151\145\x20\x76\145\162\x66\xc3\274\147\142\x61\x72\x65\x6e\x20\123\x69\155\x70\154\x65\124\x6f\153\145\156\163\x20\145\x72\147\145\x62\x65\156\x20\163\x69\x63\x68\x20\x61\x75\x73\x20\x64\x65\x6d\x20\x41\165\146\162\x75\146\40\144\x65\162\40\102\x65\156\141\143\150\162\x69\143\x68\x74\151\x67\x75\156\147\56\x20" . "\x49\x6d\x20\x54\145\x73\x74\55\x50\x44\x46\40\x69\163\164\x20\x65\x73\x20\x6e\x69\143\x68\x74\x20\x6d\303\266\147\154\151\x63\x68\40\144\x69\x65\40\145\x63\x68\164\145\156\40\x45\151\x6e\147\x61\156\x67\x73\55\124\157\x6b\145\156\x20\x7a\165\x20\x65\x72\x6d\x69\x74\x74\x65\x6c\x6e\x2c\x20\144\x61\x68\x65\162\40\146\x69\x6e\x64\145\x6e\40" . "\123\151\145\40\144\x69\x65\x20\114\151\163\164\145\40\156\165\x72\40\151\156\40\x64\x65\162\x20\157\162\151\147\151\x6e\141\x6c\x65\156\40\102\145\156\x61\x63\x68\x72\x69\143\x68\x74\151\x67\165\156\147\56\x3c\x62\x72\x3e\x3c\142\162\76" . "\x3c\163\164\162\x6f\x6e\x67\x3e\x42\x6c\x65\x69\142\145\x6e\x20\123\x69\x65\x20\x69\x6d\x20\102\x61\143\153\x65\x6e\144\x20\145\x69\x6e\147\x65\154\157\x67\x67\x74\74\57\x73\x74\162\x6f\x6e\x67\76\x20\165\x6e\144\x20\163\143\150\151\143\x6b\x65\156\x20\x64\x61\x6e\x6e\x20\x69\155\x20" . "\106\162\x6f\156\164\x65\x6e\x64\x20\144\x61\163\40\106\157\x72\155\165\154\141\162\40\141\x62\56\40\111\x6e\40\144\x65\x6d\x20\115\x61\151\x6c\141\156\x68\141\x6e\147\40\163\x6f\154\x6c\164\145\x6e\x20\x53\x69\145\40\144\141\x6e\x6e\x20\145\151\x6e\x20\x50\x44\106\40\x6d\x69\164\40\141\156\147\145\150\xc3\244\156\x67\164\145\162\x20" . "\x54\157\x6b\x65\156\x6c\x69\163\164\145\x20\x66\x69\156\x64\145\x6e\56\74\x62\x72\x3e\74\x62\x72\76" . "\104\151\x65\40\x54\157\x6b\x65\x6e\x6c\151\x73\x74\x65\x20\153\303\266\x6e\x6e\x65\x6e\40\x53\x69\145\x20\151\155\x20\116\157\164\151\146\x69\x63\141\164\151\157\x6e\x20\x43\145\156\x74\145\162\40\x69\156\40\x64\x65\156\x20\105\151\x67\145\156\x73\x63\150\141\x66\x74\x65\x6e\40\x64\145\163\40\x47\141\164\x65\167\141\x79\163\40\141\x62\x73\143\x68\x61\154\x74\x65\156\x2e"; } $pdf->writeHTML($text, false, false, true, false, "\x4c"); } $pdf->lastPage(); if ($arrPDF["\160\162\157\x74\x65\143\164"] == 1) { if (in_array("\160\162\151\x6e\x74\55\x68\x69\x67\x68", $arrPDF["\160\x72\157\x74\x65\x63\164\146\x6c\141\x67\x73"]) && !in_array("\160\x72\x69\x6e\x74", $arrPDF["\160\x72\157\x74\145\x63\x74\146\x6c\141\x67\163"])) { $arrPDF["\x70\162\157\x74\x65\x63\x74\146\154\x61\147\x73"][] = "\x70\162\x69\x6e\164"; } $opass = $arrPDF["\x6f\x70\145\156\160\141\x73\163\167\x6f\x72\144"]; if ($opass == '') { $pass = $arrPDF["\x70\141\163\x73\x77\x6f\162\144"]; if ($pass == '') { $pass = null; } $pdf->SetProtection(array_diff(Self::$arrProtectflags, $arrPDF["\160\162\157\x74\145\143\x74\x66\x6c\x61\x67\x73"]), '', $pass, 1, NULL); } else { $pdf->SetProtection(Self::$arrProtectflags, $opass, $opass, 1, NULL); } } $result = true; if ($pdfdatei !== '') { if ($hascontent) { $pdf->Output(TL_ROOT . "\x2f" . $pdfdatei, "\106"); $_SESSION["\160\144\146\156\143"]["\x70\x64\146\x64\157\143\165\x6d\145\156\x74"] = $pdfdatei; } else { @unlink(TL_ROOT . "\57" . $pdfdatei); $result = false; } } else { $pdf->Output($arrPDF["\147\141\164\145\164\151\164\x6c\x65"] . "\x2e\160\x64\x66", "\104"); } unset($pdf); return $result; } protected static function checkBedingung($item, $arrPDF, $arrTokens) { $bedingung = html_entity_decode($item["\142\145\x64\x69\156\x67\x75\x6e\147"]); if (!empty($bedingung)) { $arrSplitG = explode("\x3d\x3d", $bedingung); $arrSplitU = explode("\41\75", $bedingung); if (count($arrSplitG) > 1) { $arrSplitG[0] = trim($arrSplitG[0], "\x23"); $arrSplitG[1] = trim($arrSplitG[1], "\x22"); if (!isset($arrTokens[$arrSplitG[0]]) || strcmp(strtolower($arrSplitG[1]), strtolower($arrTokens[$arrSplitG[0]])) != 0) { return false; } } else { if (count($arrSplitU) > 1) { $arrSplitU[0] = trim($arrSplitU[0], "\43"); $arrSplitU[1] = trim($arrSplitU[1], "\x22"); if (!isset($arrTokens[$arrSplitU[0]]) || strcmp(strtolower($arrSplitU[1]), strtolower($arrTokens[$arrSplitU[0]])) == 0) { return false; } } else { if (!isset($arrTokens[$bedingung]) || empty($arrTokens[$bedingung])) { return false; } } } } return true; } protected static function demoHinweis($pdf) { if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7()) { $x = $pdf->GetX(); $y = $pdf->GetY(); $arrPageDimensions = $pdf->getPageDimensions(); $pdf->SetXY(15, $arrPageDimensions["\x68\x6b"] - 14); $pdf->writeHTML("\74\x73\160\x61\x6e\x20\x73\x74\x79\154\x65\75\42\x63\157\154\157\162\x3a\x23\x66\146\x30\60\x30\x30\73\142\141\143\x6b\147\162\x6f\x75\x6e\144\x2d\x63\157\154\x6f\162\72\x23\146\x66\x65\145\145\x65\x3b\146\x6f\156\164\x2d\163\x69\172\x65\72\71\x70\170\73\x66\157\156\164\x2d\167\x65\x69\x67\150\x74\72\142\157\154\x64\42\x3e\x26\x6e\x62\x73\160\73\x26\156\142\163\x70\73\75\x3d\40\x44\105\115\117\40\x76\145\x72\163\x69\157\156\x20\157\146\40\x64\157\x2d\x77\x68\x69\x6c\145\57\143\157\x6e\164\141\x6f\x2d\x70\x64\x66\55\156\x63\55\141\164\x74\141\143\x68\x6d\x65\x6e\164\x2d\142\x75\156\x64\154\x65\40\55\40\x6d\141\x78\151\155\x75\x6d\x20\x32\40\x70\x61\x67\145\x73\x20\x2d\x20\102\x75\171\x20\114\151\x63\x65\x6e\x63\145\40\x6b\x65\171\x21\x20\x3d\x3d\46\x6e\x62\163\x70\73\46\156\x62\163\x70\x3b\74\57\x73\160\141\x6e\76", false, true, true, false, "\114"); $pdf->SetXY($x, $y); } } protected static function CDDAC68499E52601E4DBEB210CE9A1A7() { $k = str_split(Config::get(PRODUCT_NC . LIZENZ), strlen(vNZpjXztEVKIiq)); $p = eval("\x72\x65\x74\165\162\x6e\x20\163\x75\142\x73\x74\162\x28\x22\x30\x30\60\x30\x22\x2e\163\x74\x72\x74\157\165\x70\x70\145\x72\x28\144\x65\x63\x68\145\170\x28\x63\x72\x63\x33\62\50\x6d\144\65\50\42" . PRODUCT_NC . "\72\42\56\163\165\142\163\x74\x72\x28\126\105\x52\123\111\x4f\116\x2c\x30\54\x31\51\x2e\42\72" . $k[0] . "\x22\x29\x29\51\x29\54\55\64\51\x3b"); return !empty($p) && isset($k[1]) && $p === $k[1]; } public static function encrypt($varValue, $dc = null) { if (empty($varValue)) { return ''; } mt_srand(6152); $out = array(); for ($x = 0, $l = strlen($varValue); $x < $l; $x++) { $out[$x] = ord($varValue[$x]) * 3 + mt_rand(350, 16000); } mt_srand(); return implode("\x2e", $out); } public static function decrypt($varValue, $dc = null) { if (empty($varValue)) { return ''; } mt_srand(6152); $out = array(); $blocks = explode("\56", $varValue); foreach ($blocks as $block) { $ord = (intval($block) - mt_rand(350, 16000)) / 3; $out[] = chr($ord); } mt_srand(); return implode('', $out); } protected static function getimagetype($src) { $file = TL_ROOT . "\x2f" . $src; if (method_exists(File::class, "\x63\x72\145\x61\164\x65\x49\146\x44\145\146\x65\x72\x72\x65\144") && is_callable(File::class, "\143\x72\145\141\164\x65\111\146\104\x65\146\145\162\162\145\x64")) { (new File($src))->createIfDeferred(); } if (!file_exists($file)) { return ''; } $size = getimagesize($file); if ($size[2] == IMAGETYPE_GIF) { return "\x47\x49\x46"; } else { if ($size[2] == IMAGETYPE_JPEG) { return "\x4a\x50\x45\x47"; } else { if ($size[2] == IMAGETYPE_PNG) { return "\120\x4e\x47"; } else { return ''; } } } } protected static function is_relative($pos) { if (substr($pos, 0, 1) === "\x2b") { return true; } if (substr($pos, 0, 1) === "\x2d") { return true; } return false; } }
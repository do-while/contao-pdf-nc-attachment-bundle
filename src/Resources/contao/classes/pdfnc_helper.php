<?php
 namespace Softleister\Pdfncattachment; use Contao\Config; use Contao\StringUtil; use Contao\Database; use Contao\FilesModel; use Contao\System; use Contao\Image\ResizeConfiguration; use Contao\Controller; use Contao\Environment; use Contao\Input; use Contao\File; define("\114\111\x5a\105\116\132", "\x4c\x69\x63\x65\156\x63\145"); define("\x50\x52\x4f\x44\125\103\x54\x5f\x4e\103", "\160\144\146\x6e\x63\x61\164\x74\141\143\x68\155\x65\156\164"); define("\126\x45\122\x57\111\x52\122", "\61\62\x33\x34\71\x35\x36\67\70\71\60\x31\62\x38\x33\64\65\66\67"); define("\111\x4d\107\x44\125\115\x4d\x59", "\144\x61\164\141\72\x69\x6d\141\147\x65\x2f\x70\156\147\73\142\141\x73\x65\x36\x34\x2c\x69\126\102\117\122\167\x30\x4b\107\147\x6f\x41\101\101\101\116\x53\125\150\x45\x55\147\101\x41\x41\112\x59\x41\101\101\x41\61\x43\x41\x49\x41\x41\101\x41\163\x36\x34\130\61\101\x41\x41\x41\x47\130\x52\x46\127\x48\122\124\142\x32\132\x30\x64\62\x46\x79\132\x51\102\x42\132\107\x39\151\x5a\123\102\112\142\x57\106\x6e\132\x56\112\x6c\x59\x57\x52\65\143\x63\154\154\x50\x41\101\x41\x43\60\170\x4a\x52\105\x46\x55\145\116\x72\x73\130\x47\x6c\130\62\172\x6f\x51\152\x52\x7a\x6a\67\101\x74\x72\x6f\x66\x54\x2f\x2f\66\x64\x2b\67\x6d\x76\124\121\x6f\x44\163\x69\x51\117\62\x33\x78\61\116\64\x69\146\x4a\123\x2b\124\105\167\117\x73\x35\x31\161\105\143\103\x49\157\153\x7a\x35\x33\154\172\x6d\150\x53\71\57\166\x33\x37\x37\x56\x71\x2f\115\x33\104\x71\x55\x52\x51\121\126\151\x4e\x43\x73\x4a\161\126\102\x42\127\105\x46\x61\152\x67\162\x41\x61\x46\x59\x54\x56\161\x43\103\163\111\113\170\x47\102\x57\105\x31\113\147\x69\162\125\x55\106\x59\121\126\151\x4e\103\163\112\x71\126\102\x42\x57\x34\71\152\x68\161\162\x38\x49\111\x66\102\x50\53\x33\164\105\167\63\x68\120\171\x72\124\x63\x2b\x51\x58\x65\142\162\146\x43\167\144\x56\x6f\150\123\x4b\x4c\x35\x4b\62\x4f\x78\145\x56\123\113\x57\x76\113\162\131\130\70\x77\x58\x37\110\101\x34\71\x76\117\x52\x51\160\x61\x52\102\165\164\71\163\x77\104\117\x50\154\115\141\130\165\x4f\117\x37\x5a\155\x66\x46\x32\63\x2f\144\124\152\x78\x76\112\70\x33\155\x59\156\x33\x76\x45\x49\x41\150\x65\x58\61\x39\x46\x78\163\x48\161\x72\x6b\x73\67\127\x67\116\x41\132\x77\x34\103\157\145\x79\111\x52\x54\x7a\120\x45\x38\x36\x70\104\x73\132\170\110\113\x7a\163\142\67\145\142\x7a\x65\142\x74\x39\130\x57\x39\127\x75\x47\67\x65\x74\132\x47\x71\64\x57\116\166\x47\x61\172\x30\x57\151\143\145\122\67\116\x44\x38\x50\x38\x4e\124\x45\102\x69\65\103\x67\124\157\120\120\161\x64\x66\120\71\x72\x69\x34\x71\x6e\x59\70\57\x76\66\x39\127\x69\65\152\143\127\102\161\x74\x39\145\x37\x76\x62\70\x33\104\166\x48\x72\x78\x34\57\x67\x37\x53\61\x31\x61\x61\170\x37\71\x2b\61\x62\x73\x39\x6b\x4d\115\x7a\x44\101\x34\x70\120\x6e\65\53\x66\x78\127\113\x54\x42\x48\111\x58\x68\53\x64\130\126\71\145\x30\x74\132\x47\143\152\131\151\x6a\124\x36\x4d\145\120\61\53\x31\x57\x56\122\x6f\163\x38\x75\x58\165\162\x6e\x39\53\x48\x68\x31\x72\x69\105\x4a\141\x31\x57\x77\x36\x58\123\x30\x57\151\x2f\x6c\x63\115\x79\x42\x6c\x51\106\142\64\x49\x6d\x30\124\157\164\166\166\144\x37\160\x64\151\x47\164\x6e\162\170\153\x48\x68\x68\x36\x4d\x66\x76\64\60\144\x4b\x37\157\101\101\x53\115\x43\170\142\x45\130\x71\x59\x6a\170\141\x73\161\x68\113\153\67\60\x54\x73\x7a\x64\102\171\162\167\x79\x79\x61\67\x58\x59\x74\101\x77\x4f\x73\151\143\144\127\x64\x30\x6e\141\x73\x66\x33\104\x51\103\x49\167\x61\x4b\151\153\x67\143\x42\x38\x50\165\x38\x4e\x68\x30\143\x62\x33\x39\x62\x33\x6e\x78\x34\146\x63\x55\x34\70\x6a\x70\116\x74\172\142\165\x6a\171\165\x2f\x7a\x36\x58\x51\x35\156\x2b\115\x74\x46\61\x64\130\70\103\115\x35\x32\x6b\x4d\114\x5a\x67\151\x32\x57\x50\x68\64\x4a\x7a\x6f\104\112\x2b\x6c\x76\x4e\x72\126\163\x45\64\x54\105\x59\143\110\x69\x39\107\101\147\x39\x34\114\125\x55\160\131\x53\101\x6d\x63\x41\x75\x6b\x66\163\101\166\156\103\67\105\x62\57\x2f\115\120\107\x35\61\150\67\131\167\132\155\71\x76\114\171\53\53\x64\120\103\150\x50\x4f\x78\x2f\110\x45\x6b\x6e\x63\x53\125\156\172\x30\x44\x42\156\151\x38\71\x66\162\x36\106\x44\x41\x73\x4e\x33\x49\x39\x7a\x63\x5a\117\x47\x47\x4c\122\123\x71\66\x42\57\107\x62\x7a\122\65\x47\x49\x37\114\163\x42\x41\131\167\x4c\x42\x67\154\x39\x43\x62\153\x72\53\122\124\167\x49\x66\126\66\65\166\x31\107\x69\165\70\x5a\x55\x76\147\x66\122\x6c\160\103\x52\161\102\x2b\x43\x53\x44\120\64\x4a\x69\103\x70\x56\61\110\x44\x77\x68\115\141\142\124\x6c\126\x51\111\151\x44\165\x54\106\x77\x69\x42\152\x65\x44\x53\x55\x34\53\122\x2f\147\64\105\x71\x75\x58\171\70\x63\x38\x66\x4f\160\x35\x4f\152\155\161\x53\132\x4c\125\67\156\x57\141\x72\x56\127\x63\x6e\x47\125\126\121\x49\120\151\101\126\60\154\x77\116\114\143\155\x41\x78\67\151\x2f\x64\x58\116\124\123\x47\113\x55\x6f\x43\155\x36\153\57\x6b\x6c\x71\64\x55\106\x41\65\71\110\x30\x2b\142\x74\102\165\x34\125\x49\152\61\x52\x44\67\107\x53\172\106\106\x7a\112\x6b\x41\152\147\x4d\171\x4d\x72\x79\70\x6a\x43\x79\x59\105\x66\104\x44\62\x63\141\120\x6a\53\124\x6b\x46\146\125\151\150\154\171\x76\71\x34\x66\104\57\155\101\x41\x38\101\x53\110\143\x43\156\x42\x62\x68\147\117\x7a\x38\71\x68\x36\x79\x39\x50\x54\x34\106\x4f\x54\64\x41\151\121\151\115\111\x44\155\x6a\144\x51\x51\x57\103\x75\107\x36\57\146\157\126\53\x68\x45\127\x63\153\60\x78\62\x42\103\71\x65\120\x6f\x52\103\127\x6b\102\x76\x4d\x45\152\x2b\103\127\x4a\71\x4b\x79\x4d\x51\x59\x6f\130\154\131\x76\107\155\x5a\x79\x59\x47\x2b\x63\x4b\x76\155\101\115\x35\101\x67\x4d\142\x51\65\x78\116\112\152\151\x32\x6f\x2b\x4d\110\x59\x67\112\66\x44\113\x6f\132\70\121\150\104\x64\x53\x47\101\x4f\x72\171\64\x51\104\x6f\102\172\x32\x6b\101\x41\x45\53\x37\155\105\x35\142\67\142\141\116\101\x6e\x45\x65\106\x52\141\x4d\x4c\57\106\x44\x4f\141\126\147\144\x71\x62\153\x6a\147\x78\150\x4c\x61\60\147\147\x41\x51\114\x4b\115\x61\x43\x68\156\104\172\x79\x56\166\127\144\x68\x44\x51\145\x72\x47\147\132\x31\131\x77\70\x32\122\155\x70\x70\x6f\103\53\x56\x4b\x6b\163\110\x59\62\152\x52\124\x43\60\x54\x55\x41\170\x32\120\x38\163\106\110\161\x49\124\153\66\131\x67\113\101\63\x45\62\x49\71\147\116\163\x65\142\x32\x32\x6a\111\152\122\125\x61\116\x4d\x4f\153\120\160\x49\113\x57\64\130\162\167\x75\124\101\61\x6f\107\x61\146\x48\60\64\x4c\x4c\161\x4b\70\60\x6d\153\x32\x6e\x65\106\101\153\111\x69\x50\124\142\x54\x58\65\101\131\53\x41\x7a\x33\124\61\171\x4d\145\x47\141\114\115\x6d\x77\x69\x71\x6c\67\x66\x71\102\64\x55\x67\131\x76\167\117\x65\115\x49\x72\147\141\132\x48\144\x38\x7a\x46\x77\x68\156\x61\63\x69\x30\x42\x34\57\x65\125\114\x35\62\61\57\x42\x35\x30\65\x6b\x39\125\x51\123\151\146\x32\125\153\x43\x67\147\150\164\x4a\102\153\x49\126\x56\x38\x54\x4c\x75\126\162\166\x73\x49\x79\x31\x55\121\124\x65\x41\x53\x32\x4a\x34\123\x63\x64\143\x6c\63\x34\124\113\x67\111\156\x55\110\132\x46\x4c\105\113\112\154\x49\63\x45\163\x65\105\x43\161\x72\65\x65\53\170\103\105\146\53\x73\x41\112\101\x4f\146\x48\102\170\147\121\145\x45\x55\165\x4b\x68\x56\116\63\x36\x61\x35\x4b\113\x6e\122\x55\x71\x6e\102\65\117\172\x4c\x42\x43\103\110\x32\162\155\101\65\x2b\141\103\121\157\152\66\125\130\x6e\143\71\x6d\161\166\x6e\x69\122\x64\103\x42\165\165\116\60\x65\x7a\x31\x6a\125\64\x69\126\143\163\x66\143\x39\102\x79\53\x2f\126\x58\130\114\x66\111\x51\162\x64\141\x5a\64\154\x63\117\x44\165\102\x39\x66\156\156\x4a\x57\160\166\x30\x64\130\71\104\x55\x69\x46\x4c\x61\57\x2f\106\105\150\154\144\x44\x45\64\x50\x31\170\144\x7a\x55\142\167\111\150\130\130\162\x39\123\117\x6f\104\x5a\124\x44\x6b\104\x6a\x63\126\66\146\146\150\70\x66\172\x6d\153\62\x76\60\x66\x42\x56\x48\171\64\x74\x72\x4a\x39\x62\x71\x61\x47\x44\112\x63\124\x64\113\161\150\x65\x34\121\156\x4a\114\x74\x54\x52\171\146\125\x54\x71\x62\107\172\132\101\x69\170\x33\x6c\x6d\152\64\142\150\165\x58\x48\x6b\x42\172\x77\141\126\x69\x41\x4e\153\x4a\x4a\116\66\115\170\101\x65\x42\123\x48\151\x6c\166\x45\70\114\x53\x41\x6e\x4e\x78\x4c\123\105\104\125\110\x49\x41\x53\117\147\126\x65\x79\127\x44\164\x62\131\x62\x4b\x55\62\103\172\x75\x49\131\x34\155\x67\x31\x54\112\x43\64\114\121\x32\x6d\162\132\65\x35\x55\116\111\x53\171\147\x30\x55\x44\70\x59\x41\65\x47\x6b\x55\x39\103\127\x4f\166\63\x64\x78\x4f\x43\x51\112\125\x73\x52\x41\131\132\x46\145\125\171\x51\165\113\170\x31\154\x57\x68\x4a\x6d\166\x78\70\121\x53\64\x4d\x69\x4c\x6f\142\62\x2b\x31\63\x53\x30\x51\x6e\x51\x53\x6b\x42\161\57\110\x69\132\x53\170\x4b\x46\60\x64\x36\102\103\123\126\x62\151\165\x5a\131\x6e\x53\150\166\x66\156\x4c\57\125\70\110\164\x4d\102\162\113\156\101\170\x64\x55\x56\66\106\114\66\x5a\144\115\160\126\147\152\x4b\x41\x4e\x56\121\x32\x63\x52\x6d\x74\x51\162\x32\116\x65\x67\126\107\120\x62\53\143\157\120\65\117\161\125\x54\122\x52\x58\x57\143\124\x67\x64\126\x49\x6b\x4d\x41\x47\166\x47\166\x43\155\113\x6f\x45\x6e\167\147\x52\x51\x73\154\141\x43\x4c\110\110\70\x37\x48\113\161\141\161\x7a\x72\101\x49\112\107\66\x35\x52\x65\x50\157\x4b\x2b\102\x6e\143\126\x6b\x56\x66\x4e\x54\66\x71\x76\x32\x51\x6b\147\x34\104\x4c\143\163\142\x31\x43\124\x68\x68\126\x54\117\x36\65\x68\x51\164\171\145\71\x4a\x59\167\121\x56\x58\124\x34\x51\157\x4b\130\121\160\155\x56\127\123\x77\x4a\152\171\153\x75\67\143\x59\160\x76\127\x74\124\153\146\x4e\x4a\143\150\62\153\131\123\163\x56\161\153\121\61\x6f\x70\x6e\160\125\x39\x50\x54\x39\x4f\130\154\64\120\x59\121\x44\x4f\121\126\x38\x42\151\101\157\166\x73\x2f\166\115\132\x4b\141\x77\161\x6c\102\x42\161\x45\147\143\x46\x6c\130\64\x56\153\x6f\x55\104\152\101\x30\x66\127\163\167\121\106\x72\x32\x64\x68\64\x6b\x62\102\122\121\107\x54\x45\x32\57\131\x46\116\x74\x36\x55\x75\x31\x35\116\144\x78\106\x6f\x76\106\x68\x31\x48\105\104\170\67\154\63\x56\x52\x49\125\161\x6f\x53\x38\144\152\64\104\x4e\131\117\x4e\167\126\x33\65\53\x78\x6a\154\x54\x30\x4e\121\63\161\147\x55\150\113\x2b\x59\125\x37\x57\x49\x58\107\107\x4a\112\53\105\106\123\142\172\110\x44\67\115\150\x31\60\160\x35\x41\123\111\x51\165\x4e\144\x48\x47\x6c\163\113\x65\x43\x5a\141\153\x32\114\160\142\x61\126\160\x64\110\x2f\146\112\63\152\x63\103\x32\x44\x62\65\150\x74\x69\166\x52\x73\60\63\103\x50\x52\x74\151\x67\62\64\116\x32\x32\x37\152\x69\170\x32\x52\153\105\x58\104\x70\122\161\x55\x47\126\x42\x59\155\x61\63\x6a\117\x33\x52\x6d\x4d\101\x49\153\x46\x50\70\160\x6b\157\x5a\x52\146\x37\53\70\67\150\143\x72\x63\117\151\x39\172\123\x30\126\x51\x63\x43\x4b\x34\x37\167\x6b\x69\166\153\x37\104\71\x39\x58\162\x62\x33\150\144\x67\162\104\x67\x34\x71\101\x6b\x78\x6f\125\101\x58\171\x41\x2f\x6a\105\141\127\126\112\103\141\130\67\x5a\142\153\x30\x62\112\66\x71\x43\x54\141\120\162\x43\171\x5a\116\x4e\121\62\x70\160\x31\x44\101\x46\x63\131\x67\x45\x48\132\x54\x64\x30\124\x31\x52\112\125\x4f\157\x6c\160\144\x69\x33\x51\x65\x45\x36\165\x6e\147\122\145\x73\x46\x75\x51\x7a\x57\x6d\145\166\160\131\112\167\x6a\x70\161\x49\154\132\x4a\x68\x4d\x73\x71\x48\x6c\x63\153\153\154\141\143\x56\161\165\143\x41\x72\71\x47\x4a\x6d\112\x50\116\x39\115\x74\x6d\x30\x6b\x77\172\x50\x7a\67\166\71\166\152\x44\x69\164\x4f\x38\x2f\120\x7a\x34\x47\x70\172\x58\x46\x66\x44\66\105\x54\x50\105\150\x45\124\x58\x79\x51\x63\162\107\154\x51\113\x78\x6e\x6f\x4a\x45\102\147\141\125\x65\165\x64\121\x69\111\x36\x44\143\115\x47\x55\x65\67\x32\145\x6f\61\x38\57\x73\x64\x6f\132\x71\x6f\x44\x73\70\x7a\x77\156\x73\x39\x5a\170\143\x70\x7a\x50\142\x4d\x64\61\x79\x72\x4b\57\156\x55\x61\64\x4c\157\x78\x4d\x52\131\151\x61\132\122\124\144\x46\106\111\105\x68\145\x73\130\x38\x6d\162\x70\122\x41\x58\146\x58\x54\57\160\x78\x54\x6c\x57\x4f\x30\70\166\150\x31\x4c\70\x33\164\x42\x49\x78\131\131\x64\161\124\x45\x2b\x6b\145\66\127\x42\113\107\123\163\53\x66\110\117\123\107\x35\124\x43\110\x38\x6f\101\x52\155\x52\127\x59\166\x78\171\x6a\x33\113\60\x6b\121\x6f\x45\171\x72\122\110\141\x42\x77\x33\x66\62\126\123\122\61\x35\165\172\x6c\x78\x52\66\x59\124\x36\x53\x31\112\144\x2f\x61\x55\x2f\x30\x61\x6f\x51\x35\160\x59\160\162\x52\125\106\61\x4e\x6c\x6b\141\x6a\x50\121\x75\154\x49\x4a\124\142\x68\x30\x47\132\151\x63\167\110\x44\x49\117\147\164\x4d\124\103\146\x56\105\53\161\x72\x68\x78\141\157\155\131\x7a\121\131\x58\x46\60\x6c\155\151\167\x69\x67\144\155\63\x78\x52\x52\126\145\x42\x37\153\x39\x6d\x4a\x76\172\x2f\x63\154\156\107\127\114\65\105\x4a\64\102\121\x74\143\x4e\164\x39\166\125\x43\121\x31\x5a\107\x6f\x32\x73\x65\71\x65\x35\x77\155\154\165\64\130\x6d\x33\x39\x2f\x66\125\x63\x4a\x78\114\x78\x4c\110\x52\x6e\61\x2b\x2f\x70\x70\117\112\161\151\x4a\111\x54\x69\147\x69\x44\x6f\x64\161\111\x78\x33\x77\x41\60\x4e\x35\145\130\157\171\116\150\157\57\120\107\x43\x56\x66\162\53\146\x68\x53\x4a\104\x6a\157\124\61\141\x54\x77\x2b\x33\x64\x58\57\142\171\x44\x30\120\x4c\144\145\x33\x36\132\62\x75\70\x6f\113\124\x6e\161\65\117\x61\164\x4d\112\x53\127\165\107\131\x30\x30\132\121\x6a\x39\114\x61\x32\152\x33\104\x67\x4d\147\112\x6b\156\127\x43\164\145\x55\x52\165\106\x4f\x56\x55\x64\104\111\146\147\x71\x37\65\x69\x37\161\170\101\x6a\x36\120\122\161\53\57\x44\106\x6c\x50\x76\x6a\122\105\x79\112\x35\x4d\x4a\111\115\124\115\x7a\171\111\61\x37\71\x44\x2b\x4a\114\61\x63\x61\166\x52\x79\165\x61\65\x57\x4a\x42\x44\103\155\64\127\66\116\163\x44\x33\x77\162\x2f\126\71\x70\x31\x6b\53\x52\102\66\70\164\x4d\x4f\x76\164\x34\x46\163\160\x55\116\161\115\61\x32\117\x7a\x5a\x45\107\x42\101\x38\x78\x2b\x58\x56\x46\142\x4a\x4d\x6a\130\x7a\x42\x51\64\x62\150\x38\x33\147\70\156\60\x34\67\x76\x52\x37\x30\x6a\x37\x75\105\70\103\x49\126\x2b\65\x5a\x4c\x37\x71\154\115\112\141\127\127\x74\67\65\64\x49\66\x57\x32\102\x63\60\130\146\166\166\155\67\161\x34\63\x47\x4f\103\x48\x63\151\102\125\x6b\67\x42\111\146\154\x37\105\155\125\x36\152\170\104\117\102\x2b\x46\106\x4a\x32\x74\64\105\x67\x38\x42\x6f\151\x57\x44\x53\x6d\171\x79\x79\x35\x41\147\111\x68\161\x69\127\x31\x75\112\x43\104\67\x57\130\66\x52\114\166\144\114\x75\130\116\x7a\144\x6a\166\x5a\127\125\x66\x30\x42\117\117\x58\x6c\x2b\152\153\163\107\130\x4c\155\x6f\67\x5a\163\x42\125\67\x51\x6e\x44\x41\106\x32\x77\x36\111\112\x73\130\x62\x55\144\x54\107\x63\x55\65\155\x58\x54\x63\141\156\x72\146\x67\x75\x45\115\x4b\x72\66\123\x65\114\x5a\x4a\115\132\101\114\101\70\x4d\146\146\107\x47\60\x31\x67\x66\x44\x56\150\x32\x56\x66\x49\x68\x36\117\x71\x74\53\x73\x61\x74\162\126\x61\x4c\x72\x6e\x2b\157\x71\x36\104\147\57\x55\x48\x41\x37\x71\114\145\x48\147\x77\107\67\x71\106\x58\x55\x6c\x33\166\170\171\x55\x37\120\114\x36\165\156\105\x6f\x57\160\x39\x55\172\123\x6d\57\172\113\x30\142\151\160\145\64\x69\x49\102\x45\x74\111\x78\x51\165\163\146\x38\x78\151\121\165\161\150\x6b\166\x64\150\115\x4a\x51\114\x35\115\x71\145\157\116\147\71\x50\124\x50\x72\x37\60\x53\103\111\x43\x69\146\146\x36\x66\x58\x41\154\x57\x47\x53\116\x38\x78\131\67\x58\x61\105\153\102\x30\145\126\126\x65\114\x72\x32\61\165\163\101\x46\146\60\115\122\x7a\126\x4e\122\65\101\61\x56\x62\117\166\126\111\x64\x73\x53\x70\x5a\x4a\60\x46\x50\x68\110\x79\x53\160\x66\x34\65\116\53\160\63\x54\127\x53\105\x6b\x64\170\122\x76\131\145\113\x39\161\x45\106\x30\x5a\124\162\132\x2f\x46\x65\61\x47\120\x52\x62\150\x65\161\104\x48\x43\161\x43\x73\117\x64\124\x61\x66\x78\x4f\x6b\x4b\x36\102\116\103\x51\x64\162\145\142\x69\x69\x49\117\x66\57\x66\x74\107\71\x36\171\x6d\105\x35\x39\63\64\71\x62\166\x49\63\x4a\125\146\x7a\122\x55\124\x42\x74\107\x58\124\65\x49\x32\x72\115\61\61\x49\x2f\x4f\x73\x4a\111\156\x31\x36\x48\125\64\125\155\61\x50\x38\x56\x47\111\x70\160\146\x48\x41\121\121\144\x37\157\111\163\105\x37\x31\x36\x75\126\144\152\65\x5a\107\152\130\163\x43\131\x35\157\x71\x39\x7a\147\x4d\x77\x33\x68\67\x67\x63\152\x62\x36\116\x79\151\x56\66\53\147\x67\121\x35\x2f\x46\x42\114\163\125\x4a\x62\x49\x73\x6e\53\x2b\x61\53\x46\57\110\167\x67\62\172\x37\x55\124\x37\53\171\111\167\x4b\x30\117\141\112\x45\x67\113\146\107\x53\144\x6c\x36\101\66\x76\x46\111\163\x61\x46\115\62\103\x6a\60\111\x42\x2f\x6a\x51\132\104\171\120\121\156\x35\171\124\x55\131\x5a\166\127\112\x33\x30\x45\x38\x77\x63\x64\62\61\60\x71\161\102\x43\123\x39\x31\x65\x5a\x6e\x76\167\x35\x65\x53\131\x62\x39\151\x58\153\114\143\67\x42\x70\132\x4c\124\x6f\x72\x33\166\x53\x6d\105\x4b\62\144\160\71\x45\115\x56\x64\x77\x4e\x59\120\145\x54\102\121\x78\x52\71\144\131\x49\x39\161\x7a\x4e\x2f\144\x33\x63\154\166\154\166\x77\172\66\x79\122\x48\170\115\112\131\125\x4f\x34\122\61\x4d\x68\x6d\x57\151\x51\71\64\103\156\x54\123\x6d\x7a\106\120\110\x71\x70\x2b\111\62\163\x61\x73\156\x49\x58\x62\122\154\71\x44\63\x36\123\57\70\126\x59\x41\x43\61\62\113\x43\x33\x30\x48\x52\x41\x59\167\101\101\x41\101\102\112\122\x55\65\105\162\153\x4a\147\x67\147\x3d\75"); class pdfnc_helper { protected static $arrProtectflags = array("\x6d\x6f\144\151\146\171", "\145\x78\x74\x72\141\143\164", "\x70\x72\151\x6e\x74", "\160\162\151\x6e\x74\55\x68\151\147\x68", "\143\x6f\x70\x79", "\141\x6e\156\x6f\x74\55\146\x6f\x72\155\163", "\146\151\x6c\154\x2d\146\x6f\x72\x6d\x73"); public static function getPdfData($arrPDF, &$arrTokens, $pdfdatei) { $objDB = Database::getInstance(); $hascontent = false; if (class_exists(\Codefog\HasteBundle\StringParser::class)) { $hasteStringParser = new \Codefog\HasteBundle\StringParser(); } if (isset($arrTokens["\x66\x6f\x72\155\x63\x6f\x6e\x66\151\x67\137\x69\144"])) { $objFine = $objDB->prepare("\x53\x45\x4c\105\103\x54\x20\52\40\106\122\117\115\40\164\154\x5f\x66\157\162\x6d\x5f\146\151\x65\154\x64\40\x57\x48\105\x52\105\40\140\164\x79\160\x65\140\x3d\x3f\40\x41\116\104\x20\160\151\x64\x3d\77")->execute("\x66\151\x6e\x65\125\160\154\157\141\x64\x65\x72", $arrTokens["\x66\x6f\162\x6d\x63\x6f\x6e\x66\x69\147\137\x69\144"]); while ($objFine->next()) { $tokenname = "\146\x6f\162\155\137" . $objFine->name; if (isset($arrTokens[$tokenname])) { $arrFiles = StringUtil::trimsplit("\54", $arrTokens[$tokenname]); $nr = 1; foreach ($arrFiles as $filename) { $arrTokens[$tokenname . "\137\x23" . $nr] = $filename; $arrTokens[$tokenname . "\x5f\43" . $nr . "\137\142\x61\163\145\156\x61\x6d\x65"] = basename($filename); $nr++; } } } $objUpl = $objDB->prepare("\x53\x45\x4c\105\103\124\40\52\x20\106\122\x4f\x4d\40\x74\x6c\137\x66\x6f\x72\x6d\x5f\x66\151\145\x6c\144\x20\x57\110\x45\122\x45\40\140\164\171\x70\x65\140\x3d\x3f\x20\101\116\x44\x20\x70\x69\x64\x3d\x3f")->execute("\165\160\x6c\x6f\141\144", $arrTokens["\146\157\162\155\143\157\156\x66\x69\x67\137\x69\144"]); while ($objUpl->next()) { $tokenname = "\x66\157\162\x6d\137" . $objUpl->name; if (isset($arrTokens[$tokenname])) { $arrTokens[$tokenname . "\x5f\142\x61\163\x65\x6e\x61\x6d\145"] = basename($arrTokens[$tokenname]); } } } $l = array(); $l["\141\137\x6d\x65\x74\x61\x5f\144\x69\x72"] = "\154\x74\x72"; $l["\141\x5f\x6d\145\x74\x61\x5f\143\x68\141\162\163\145\x74"] = Config::get("\143\x68\141\x72\141\x63\x74\x65\162\123\145\x74"); $l["\x61\137\155\145\164\x61\x5f\154\141\156\147\165\x61\147\x65"] = substr($GLOBALS["\x54\114\137\x4c\x41\x4e\107\125\101\107\x45"], 0, 2); $l["\167\x5f\160\141\x67\x65"] = "\x70\141\x67\145"; $font = PDF_FONT_NAME_MAIN; $pdf = new \setasign\Fpdi\Tcpdf\Fpdi(PDF_PAGE_ORIENTATION, "\x6d\x6d", PDF_PAGE_FORMAT, true); $pages = 0; if (!empty($arrPDF["\x76\157\x72\x6c\x61\147\145"]) && file(TL_ROOT . "\57" . $arrPDF["\166\x6f\x72\154\x61\147\x65"])) { $pages = $pdf->setSourceFile(TL_ROOT . "\x2f" . $arrPDF["\x76\x6f\x72\154\141\x67\145"]); } $pdf->SetCreator(PDF_CREATOR . (Self::CDDAC68499E52601E4DBEB210CE9A1A7() ? "\x2c" : "\x2c\x20\x44\x45\115\117") . "\x20\143\157\x6e\164\141\x6f\55\160\144\x66\55\156\143\55\141\x74\164\141\143\150\155\x65\156\x74\x2d\142\x75\156\144\154\145"); $pdf->SetAuthor($arrPDF["\x61\165\x74\150\157\162"]); $pdf->SetTitle($arrPDF["\x74\151\x74\154\x65"]); $pdf->SetSubject($arrPDF["\x67\141\x74\145\x74\151\x74\154\145"]); $pdf->setPrintHeader(false); $pdf->setPrintFooter(false); $pdf->SetMargins(0, 0, 0); $pdf->SetAutoPageBreak(true, 0); $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO); $pdf->setLanguageArray($l); $pdf->getAliasNbPages(); $customfont = array("\122" => false, "\x42" => false, "\x49" => false, "\111\x42" => false); foreach ($customfont as $attr => $status) { if (!empty($arrPDF[$attr]) && file_exists(TL_ROOT . "\57" . $arrPDF[$attr])) { $customfont[$attr] = \TCPDF_FONTS::addTTFfont(TL_ROOT . "\x2f" . $arrPDF[$attr], '', '', 32, TL_ROOT . "\x2f" . dirname($arrPDF[$attr]) . "\57"); $file_parts = pathinfo(TL_ROOT . "\x2f" . $arrPDF[$attr]); $pdf->AddFont("\x63\165\x73\x74\x6f\x6d\146\157\156\164", $attr == "\x52" ? '' : $attr, $file_parts["\144\151\162\156\x61\155\x65"] . "\57" . strtolower($customfont[$attr] . "\x2e\x70\150\x70")); } } $seiten = -1; $where = ''; if ($pdfdatei !== '') { if (!empty($arrPDF["\x6d\165\x6c\x74\151\x66\157\162\x6d"]) && is_array($arrPDF["\x6d\x75\154\164\x69\x66\157\x72\155"]) && $arrPDF["\155\x75\154\x74\151\146\x6f\x72\x6d"][0]["\x62\145\144\x69\x6e\x67\165\x6e\147"] !== '') { $seiten = array(); foreach ($arrPDF["\x6d\165\x6c\x74\151\146\x6f\x72\155"] as $multi) { if (!Self::checkBedingung($multi, $arrPDF, $arrTokens)) { continue; } $arrBereiche = StringUtil::trimsplit("\54", $multi["\x73\145\x69\164\145\156"]); foreach ($arrBereiche as $ber) { if (strpos($ber, "\55") == false) { $seiten[] = $ber; } else { $se = StringUtil::trimsplit("\55", $ber); for ($i = $se[0]; $i <= $se[1]; $i++) { $seiten[] = $i; } } } } if (count($seiten) < 1) { unlink(TL_ROOT . "\57" . $pdfdatei); return false; } $seiten = array_unique($seiten, SORT_NUMERIC); $where = "\40\x41\x4e\x44\x20\160\141\x67\x65\40\x49\116\x28" . implode("\54", $seiten) . "\51"; } } $objItems = $objDB->prepare("\x53\105\x4c\x45\x43\124\40\52\x20\106\x52\117\x4d\40\164\x6c\x5f\x70\x64\146\x6e\143\x5f\160\157\163\x69\164\151\x6f\x6e\x73\x20\x57\110\105\x52\105\x20\x70\x75\142\154\151\x73\150\145\x64\x3d\61\x20\x41\x4e\x44\x20\160\151\144\75\77" . $where . "\40\x4f\x52\104\x45\122\x20\102\x59\40\160\x61\x67\x65\54\x20\163\157\x72\x74\151\156\147")->execute($arrPDF["\x67\141\x74\145\151\x64"]); if ($objItems->numRows < 1 && $pdfdatei !== '') { unlink(TL_ROOT . "\x2f" . $pdfdatei); return false; } if ($objItems->numRows > 0) { $page = 0; while ($objItems->next()) { $arrItem = array(); $arrItem["\x69\144"] = $objItems->id; $arrItem["\x74\x79\x70\145"] = $objItems->type; $arrItem["\x70\x69\143\x74\171\160\145"] = $objItems->pictype; if ($objItems->pictype === "\165\165\151\144") { $picuuid = html_entity_decode($objItems->pictag); if (!\Contao\Validator::isUuid($picuuid)) { $picuuid = trim($picuuid, "\x23"); if (class_exists(\Haste\Util\StringUtil::class)) { $picuuid = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags("\43\x23" . $picuuid . "\x23\43", $arrTokens); } else { $picuuid = $hasteStringParser->recursiveReplaceTokensAndTags("\43\x23" . $picuuid . "\43\43", $arrTokens); } $picuuid = trim($picuuid, "\43"); } if (mb_substr($picuuid, 0, 2) === "\x30\x78") { $picuuid = mb_substr($picuuid, 2); } if (ctype_xdigit($picuuid) && mb_strlen($picuuid) == 32) { $picuuid = hex2bin($picuuid); } $objPic = FilesModel::findByUuid($picuuid); if ($objPic == null) { continue; } $arrItem["\160\151\x63\164\171\x70\145"] = "\x66\x69\x6c\x65"; $arrItem["\x70\151\143\x74\x61\x67"] = $objPic->path ?? ''; } else { $objPic = FilesModel::findByUuid($objItems->picture); $arrItem["\160\x69\143\x74\x61\147"] = $objItems->pictag; } $arrItem["\x70\151\143\164\165\x72\x65"] = $objPic->path ?? ''; $arrItem["\142\141\x72\x74\x79\160\x65"] = $objItems->bartype; $arrItem["\164\145\170\x74\x69\x74\145\x6d\163"] = StringUtil::deserialize($objItems->textitems); $arrItem["\160\x61\147\145"] = $objItems->page; $arrItem["\160\157\163\x78\x79"] = StringUtil::deserialize($objItems->posxy); $arrItem["\x61\162\145\141"] = StringUtil::deserialize($objItems->textarea); $arrItem["\x61\154\151\x67\156"] = $objItems->align; $arrItem["\x66\x6f\x6e\x74\163\x74\171\x6c\x65"] = StringUtil::deserialize($objItems->fontstyle); $arrItem["\x74\145\x78\x74\164\162\x61\x6e\x73\x66\x6f\162\155"] = $objItems->texttransform; $arrItem["\x66\x6f\x6e\x74\x73\x69\172\145"] = $objItems->fontsize; $arrItem["\164\x65\x78\x74\x63\157\154\157\162"] = $objItems->textcolor; $arrItem["\x62\157\x72\144\x65\x72\162\151\147\150\164"] = $objItems->borderright; $arrItem["\161\162\x73\151\x7a\x65"] = $objItems->qrsize; $arrItem["\142\x65\x64\x69\x6e\x67\165\x6e\x67"] = $objItems->bedingung; $arrItem["\x6e\157\x62\154\x61\156\153\x73"] = $objItems->noblanks; if (!empty($arrItem["\164\x65\x78\x74\x69\164\145\x6d\163"])) { foreach ($arrItem["\x74\x65\x78\164\151\x74\145\155\163"] as $key => $value) { $arrItem["\x74\x65\x78\x74\x69\164\x65\155\x73"][$key]["\146\x65\154\x64"] = StringUtil::decodeEntities($value["\x66\145\x6c\x64"]); $arrItem["\x74\145\170\x74\151\164\x65\x6d\x73"][$key]["\x62\x65\144\x69\x6e\147\x75\x6e\x67"] = StringUtil::decodeEntities($value["\142\x65\144\x69\x6e\147\x75\156\x67"]); } } if (isset($GLOBALS["\124\114\x5f\x48\117\117\x4b\123"]["\x70\144\x66\x6e\x63\x5f\120\x6f\163\151\x74\x69\x6f\x6e\163"]) && \is_array($GLOBALS["\124\114\x5f\x48\117\x4f\113\123"]["\x70\144\x66\x6e\143\x5f\x50\157\x73\x69\164\x69\157\156\163"])) { foreach ($GLOBALS["\124\x4c\137\110\x4f\117\x4b\x53"]["\x70\144\x66\x6e\x63\x5f\120\157\x73\151\164\151\157\156\163"] as $callback) { $arrItem = System::importStatic($callback[0])->{$callback[1]}($arrItem); } } $arrItem["\x70\x61\x67\145"] = $objItems->page; while ($page != $arrItem["\160\x61\x67\145"]) { if ($page > 0) { Self::demoHinweis($pdf); } if ($arrPDF["\x61\x6c\x6c\160\141\147\145\x73"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\160\x61\147\x65"]; } $pdf->AddPage(); if ($pages > 0) { if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pageheight = $arrPageDimensions["\150\153"]; $pagewidth = $arrPageDimensions["\x77\x6b"]; } } $text = ''; if ($arrItem["\164\171\160\x65"] === "\160\x69\143") { $pos = array(); $pos[0] = $arrItem["\x70\157\x73\170\x79"][0] + $arrPDF["\x6f\x66\146\163\x65\x74"][0]; $pos[1] = $arrItem["\x70\157\x73\x78\171"][1] + $arrPDF["\157\146\146\163\145\x74"][1]; if ($pdfdatei !== '') { if (!Self::checkBedingung($arrItem, $arrPDF, $arrTokens)) { continue; } switch ($arrItem["\160\x69\143\164\171\160\145"]) { case "\146\x69\154\145": $imageFactory = System::getContainer()->get("\143\x6f\156\x74\141\x6f\x2e\151\155\141\147\x65\56\151\155\141\147\145\x5f\146\141\143\x74\157\x72\171"); $image = $imageFactory->create(TL_ROOT . "\x2f" . $arrItem["\160\151\x63\164\165\162\x65"], array($arrItem["\x61\x72\x65\x61"][0] * 11.8, $arrItem["\x61\162\145\141"][1] * 11.8, ResizeConfiguration::MODE_CROP)); $src = str_replace("\x25\x32\60", "\x20", $image->getUrl(TL_ROOT)); $bildtyp = Self::getimagetype($src); if ($bildtyp != '') { $pdf->Image(TL_ROOT . "\x2f" . $src, $pos[0], $pos[1], $arrItem["\141\x72\145\x61"][0], $arrItem["\x61\162\145\x61"][1], $bildtyp); $hascontent = true; } break; case "\165\160\154\157\141\144": if (class_exists(\Haste\Util\StringUtil::class)) { $png = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags("\43\x23" . $arrItem["\x70\151\143\x74\141\x67"] . "\43\43", $arrTokens); } else { $png = $hasteStringParser->recursiveReplaceTokensAndTags("\x23\x23" . $arrItem["\x70\x69\143\164\x61\x67"] . "\43\43", $arrTokens); } if (substr($png, 0, 2) === "\43\x23") { break; } if ($png[0] !== "\57") { $png = TL_ROOT . "\x2f" . $png; } $imageFactory = System::getContainer()->get("\143\x6f\156\164\141\157\56\151\155\x61\147\x65\56\x69\155\x61\x67\145\137\146\x61\x63\x74\x6f\162\171"); $image = $imageFactory->create($png, array($arrItem["\141\x72\x65\141"][0] * 11.8, $arrItem["\141\162\x65\x61"][1] * 11.8, ResizeConfiguration::MODE_CROP)); $src = str_replace("\x25\62\x30", "\40", $image->getUrl(TL_ROOT)); $bildtyp = Self::getimagetype($src); if ($bildtyp != '') { $pdf->Image(TL_ROOT . "\57" . $src, $pos[0], $pos[1], $arrItem["\141\x72\145\x61"][0], $arrItem["\141\x72\x65\141"][1], $bildtyp); $hascontent = true; } break; case "\x64\141\x74\x61": $png = $arrTokens[$arrItem["\160\x69\x63\164\x61\x67"]]; $png = base64_decode(preg_replace("\43\136\144\141\x74\141\72\x69\155\141\147\145\57\x5b\136\x3b\x5d\x2b\73\142\x61\163\x65\66\x34\x2c\x23", '', $png)); $pdf->Image("\x40" . $png, $pos[0], $pos[1], $arrItem["\x61\162\x65\141"][0], $arrItem["\141\162\145\x61"][1], "\120\116\107"); $hascontent = true; break; } } else { $png = base64_decode(preg_replace("\43\x5e\x64\x61\x74\x61\72\151\x6d\x61\147\145\57\133\136\x3b\135\53\73\142\141\163\x65\66\x34\54\x23", '', IMGDUMMY)); $pdf->Image("\100" . $png, $pos[0], $pos[1], $arrItem["\x61\x72\145\141"][0], $arrItem["\141\x72\x65\141"][1], "\120\x4e\107"); $pdf->SetXY($pos[0], $pos[1]); $pdf->SetTextColor(0, 0, 0); $pdf->writeHTML($arrItem["\160\151\x63\x74\x79\160\x65"] == "\x66\151\x6c\x65" ? basename($arrItem["\160\x69\x63\164\x75\162\x65"]) : $arrItem["\160\151\x63\x74\x61\x67"], false, false, true, false, "\x4c"); $hascontent = true; } } else { $fontattr = ''; if (is_array($arrItem["\146\157\156\164\x73\x74\171\x6c\145"])) { foreach ($arrItem["\x66\x6f\156\164\x73\164\x79\x6c\145"] as $attr) { switch ($attr) { case "\x69\x74\x61\x6c\x69\143": $fontattr .= "\x49"; break; case "\x62\x6f\154\144": $fontattr .= "\102"; break; } } } switch ($arrItem["\x61\154\x69\x67\x6e"]) { case "\x72\x69\x67\150\164": $align = "\122"; break; case "\x63\145\156\164\145\162": $align = "\x43"; break; default: $align = "\x4c"; } $color = $arrPDF["\164\x65\170\x74\143\x6f\154\x6f\162"] != '' ? $arrPDF["\x74\145\170\164\143\157\x6c\157\x72"] : "\x30\60\x30\x30\x30\60"; if (!empty($arrItem["\x74\145\x78\164\x63\x6f\154\x6f\x72"])) { $color = $arrItem["\x74\145\x78\164\143\x6f\154\157\162"]; } if (strlen($color) != 6) { if (strlen($color) == 3) { $color = substr($color, 0, 1) . substr($color, 0, 1) . substr($color, 1, 1) . substr($color, 1, 1) . substr($color, 2, 1) . substr($color, 2, 1); } else { $color = "\60\60\60\60\x30\60"; } } $r = hexdec(substr($color, 0, 2)); $g = hexdec(substr($color, 2, 2)); $b = hexdec(substr($color, 4, 2)); $pdf->SetTextColor($r, $g, $b); if ($fontattr === "\102\111") { $fontattr = "\111\x42"; } $fontidx = $fontattr == '' ? "\122" : $fontattr; $pdf->SetFont(empty($customfont[$fontidx]) ? "\x68\145\x6c\x76\145\164\x69\143\x61" : "\143\165\x73\164\157\x6d\x66\157\156\164", $fontattr, $arrItem["\146\157\156\x74\163\x69\172\145"]); $text = ''; $blank = $arrItem["\156\157\x62\x6c\x61\x6e\153\x73"] ? '' : "\40"; foreach ($arrItem["\x74\x65\x78\x74\x69\164\x65\x6d\163"] as $item) { if ($pdfdatei !== '') { if (!Self::checkBedingung($item, $arrPDF, $arrTokens)) { continue; } } if (substr($item["\146\145\x6c\x64"], 0, 1) == "\42") { if (substr($item["\146\x65\154\144"], 1, 1) == "\x2c" || substr($item["\x66\145\x6c\x64"], 1, 1) == "\56" || substr($item["\x66\145\x6c\x64"], 1, 1) == "\x3c") { $text = trim($text); } $text .= Controller::replaceInsertTags(trim($item["\146\x65\154\144"], "\42"), false) . $blank; } else { if ($pdfdatei !== '') { if (!empty(trim($item["\146\x65\154\x64"]))) { $text .= "\x23\43" . trim(Controller::replaceInsertTags(trim($item["\x66\145\x6c\144"]), false), "\43") . "\43\x23" . $blank; } } else { $text .= Controller::replaceInsertTags(trim($item["\x66\145\154\144"]), false) . $blank; } } } if ($text === '') { continue; } } while ($page != $arrItem["\x70\x61\147\x65"]) { Self::demoHinweis($pdf); if ($arrPDF["\x61\x6c\x6c\x70\141\x67\x65\x73"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\x70\x61\x67\x65"]; } $pdf->AddPage(); if ($pages > 0) { if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pageheight = $arrPageDimensions["\x68\x6b"]; $pagewidth = $arrPageDimensions["\x77\x6b"]; } } while ($page != $arrItem["\x70\141\x67\145"]) { Self::demoHinweis($pdf); if ($arrPDF["\141\x6c\x6c\160\x61\147\145\x73"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\x70\141\x67\145"]; } if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7() && $page > 2) { break; } $pdf->AddPage(); if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pagewidth = $arrPageDimensions["\167\x6b"]; } if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7() && $page > 2) { break; } $borderleft = $arrItem["\160\x6f\x73\170\x79"][0] + $arrPDF["\157\146\146\x73\x65\x74"][0]; $borderright = 0 - $arrPDF["\x6f\x66\146\x73\145\164"][0]; if ($arrItem["\x62\157\162\x64\145\162\162\x69\147\x68\164"] != '' && is_numeric($arrItem["\x62\x6f\x72\144\145\x72\x72\151\147\x68\164"]) && $pagewidth - $arrItem["\x62\157\x72\144\x65\x72\162\151\x67\x68\164"] > $arrItem["\x70\157\x73\170\x79"][0]) { $borderright = $arrItem["\x62\x6f\162\144\x65\x72\162\x69\147\x68\164"] - $arrPDF["\157\x66\146\x73\145\164"][0]; } $pdf->SetMargins($borderleft, 0, $borderright); $pos[0] = $arrItem["\x70\x6f\163\170\x79"][0] + $arrPDF["\x6f\x66\x66\163\145\164"][0]; $pos[1] = $arrItem["\x70\157\163\x78\x79"][1] + $arrPDF["\x6f\146\x66\x73\145\x74"][1]; $pdf->SetXY($pos[0], $pos[1]); if (class_exists(\Haste\Util\StringUtil::class)) { $text = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags($text, $arrTokens); } else { $text = $hasteStringParser->recursiveReplaceTokensAndTags($text, $arrTokens); } switch ($arrItem["\164\171\160\x65"]) { case "\161\x72\143\x6f\144\x65": if (strlen(trim($text)) > 0) { switch ($arrItem["\x62\141\x72\164\x79\x70\145"]) { case "\x44\x41\124\101\115\101\x54\x52\x49\130": case "\121\122\x43\117\104\105\54\x4c": case "\x51\x52\103\x4f\x44\105\x2c\115": case "\x51\122\x43\117\x44\x45\x2c\x51": case "\121\122\103\117\104\105\x2c\110": $style = array("\142\x6f\x72\x64\145\162" => false, "\x76\x70\141\x64\x64\151\x6e\147" => "\141\x75\x74\157", "\150\x70\141\x64\x64\x69\x6e\x67" => "\141\x75\x74\157", "\x66\147\143\x6f\x6c\157\x72" => array($r, $g, $b), "\142\x67\x63\x6f\154\x6f\x72" => array(255, 255, 255), "\155\157\144\165\154\x65\137\167\151\x64\x74\x68" => $arrItem["\x71\162\163\x69\x7a\x65"], "\x6d\157\144\165\x6c\x65\137\x68\x65\x69\147\150\164" => $arrItem["\161\162\163\151\x7a\145"]); $pdf->write2DBarcode(trim($text), $arrItem["\x62\141\x72\164\171\x70\x65"], $pos[0], $pos[1], $arrItem["\141\x72\x65\141"][0], $arrItem["\141\x72\x65\141"][1], $style, "\x4e"); break; case "\120\x44\106\64\61\x37": $style = array("\142\157\x72\144\145\x72" => false, "\x76\x70\x61\x64\144\x69\156\x67" => "\141\165\x74\x6f", "\150\x70\141\144\144\x69\x6e\x67" => "\x61\x75\164\157", "\146\x67\143\x6f\154\157\162" => array($r, $g, $b), "\x62\147\143\x6f\x6c\x6f\162" => array(255, 255, 255)); $pdf->write2DBarcode(trim($text), $arrItem["\142\141\x72\x74\171\x70\x65"], $pos[0], $pos[1], 0, $arrItem["\161\x72\x73\151\x7a\145"] * 10, $style, "\116"); break; default: $style = array("\163\x74\162\145\164\x63\150" => false, "\x66\x69\x74\167\151\144\164\150" => true, "\142\157\162\144\x65\162" => false, "\150\160\141\144\x64\x69\156\x67" => "\x61\165\164\157", "\166\x70\141\144\x64\x69\156\x67" => "\141\165\164\157", "\x66\x67\x63\157\x6c\x6f\x72" => array($r, $g, $b), "\x62\x67\x63\x6f\x6c\157\x72" => array(255, 255, 255), "\164\145\170\164" => false); $pdf->write1DBarcode(trim($text), $arrItem["\x62\141\x72\x74\x79\x70\145"], $pos[0], $pos[1], '', $arrItem["\161\162\163\151\172\x65"] * 5, 0.3, $style, "\116"); break; } $hascontent = true; } break; case "\160\151\143": break; default: switch ($arrItem["\164\145\170\x74\x74\162\x61\x6e\x73\146\157\162\x6d"]) { case "\x75\160\160\x65\162\x63\141\163\145": $text = mb_convert_case($text, MB_CASE_UPPER, "\125\x54\x46\55\x38"); break; case "\x6c\x6f\167\x65\162\143\141\163\145": $text = mb_convert_case($text, MB_CASE_LOWER, "\x55\x54\x46\x2d\x38"); break; case "\x63\x61\x70\x69\164\141\154\x69\172\145": $text = mb_convert_case($text, MB_CASE_TITLE, "\x55\x54\106\55\70"); break; } $pdf->writeHTML(nl2br(trim($text)), false, false, true, false, $align); $hascontent = true; break; } } } if (Self::CDDAC68499E52601E4DBEB210CE9A1A7() === true || $page < 2) { while ($page < $pages && $arrPDF["\x61\154\154\x70\141\147\145\163"] == 1) { Self::demoHinweis($pdf); $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } $pdf->AddPage(); $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } } Self::demoHinweis($pdf); $beUserLoggedIn = false; $beUserLoggedIn = false; $arrVersion = explode("\x2e", VERSION); if (sha1(session_id() . (!Config::get("\144\x69\163\141\142\x6c\x65\111\160\103\x68\145\143\153") ? Environment::get("\151\160") : '') . "\102\105\137\125\123\105\122\137\101\125\x54\x48") == Input::cookie("\102\105\137\125\123\x45\122\x5f\101\125\x54\110")) { $beUserLoggedIn = true; } else { if ($arrVersion[1] >= 6) { $beUserLoggedIn = System::getContainer()->get("\x63\157\156\164\x61\x6f\x2e\x73\145\143\x75\x72\x69\x74\171\x2e\164\x6f\153\145\x6e\137\143\x68\145\x63\153\x65\162")->hasBackendUser() === true; } } if ($beUserLoggedIn && $arrPDF["\164\x6f\153\x65\x6e\154\x69\x73\x74"] == 1) { $pdf->AddPage(); $pdf->SetTextColor(0, 0, 0); $pdf->SetFont($font, '', 11); $pdf->SetMargins(15, 10, 15); $pdf->SetAutoPageBreak(true, 10); $pdf->SetXY(15, 10); if ($pdfdatei !== '') { $text = "\101\166\141\151\154\141\x62\154\145\x20\124\x6f\x6b\x65\x6e\x73\x3a\x3c\142\162\x3e\x3c\142\162\76\x3c\164\141\142\x6c\145\76"; $arrTokens["\x70\x64\x66\156\x63\x5f\141\x74\x74\141\x63\x68\x6d\145\x6e\x74"] = $pdfdatei; $arrTokens["\x70\x64\x66\156\x63\137\144\157\x63\165\155\x65\156\x74"] = basename($pdfdatei); foreach ($arrTokens as $token => $content) { $content = trim($content); if (mb_strlen($content) > 200) { $content = mb_substr($content, 0, 196) . "\40\x2e\x2e\x2e"; } $c = preg_replace("\x7e\133\x5e\141\x2d\172\101\55\132\x30\x2d\x39\134\55\x2b\75\x5f\x5c\x40\x5c\x2e\x3a\73\x2c\x5c\x7b\134\175\134\133\134\135\x5c\x28\x5c\51\x5c\x5c\57\x22\x27\x5c\x6e\303\244\303\266\xc3\xbc\303\204\xc3\226\xc3\234\303\x9f\342\200\xa6\xc3\xa0\303\xa1\xc3\xa2\xc3\251\303\xa8\303\xb4\303\xaa\43\40\x5d\x7e\151", '', $content); if ($c !== $content) { continue; } if (mb_stripos($token, "\x70\141\x73\x73\x77\157\162\x64") != false || mb_stripos($token, "\x70\x61\x73\163\x77\x6f\x72\x74")) { continue; } $text .= "\x3c\x74\162\x3e\x3c\164\x64\76\43\43" . $token . "\x23\x23\x3c\57\x74\144\x3e\74\x74\144\76" . nl2br($content) . "\x3c\x2f\x74\x64\76\74\x2f\164\162\x3e"; } $text .= "\x3c\x2f\x74\x61\142\154\x65\x3e"; } else { $text = "\x41\x76\x61\151\x6c\141\x62\154\x65\x20\124\157\x6b\x65\156\163\72\74\142\x72\76\x3c\x62\x72\76\74\x62\x72\76\x3c\x62\162\x3e" . "\x54\x68\145\40\141\x76\x61\151\154\141\142\x6c\145\x20\123\151\155\160\x6c\x65\124\x6f\153\145\x6e\x73\x20\162\145\x73\165\x6c\164\163\x20\146\162\157\155\40\164\x68\x65\40\x63\x61\154\x6c\40\157\146\x20\x74\150\x65\40\x6e\x6f\164\x69\x66\151\143\141\x74\151\x6f\x6e\56\x20\x49\x6e\x20\164\150\145\x20" . "\x74\145\163\x74\40\x50\x44\x46\40\151\x74\40\151\163\x20\156\157\x74\40\x70\157\x73\x73\151\142\154\145\40\x74\157\40\144\x65\x74\x65\143\164\40\x74\150\x65\40\162\x65\141\154\40\x69\x6e\x70\165\164\40\x74\157\x6b\145\x6e\x73\x2e\x20" . "\131\157\165\40\167\x69\x6c\154\40\x66\x69\x6e\x64\x20\164\x68\145\40\164\157\x6b\145\156\40\154\151\x73\x74\40\x6f\156\154\171\40\x69\x6e\x20\x74\150\145\40\x6f\x72\x69\x67\151\x6e\141\x6c\x20\156\x6f\x74\x69\x66\151\143\x61\x74\x69\x6f\156\x2e\x3c\x62\162\76\74\142\x72\x3e" . "\74\163\164\162\157\156\x67\x3e\x53\x74\x61\171\40\x6c\157\x67\147\x65\144\x20\x69\156\40\151\156\x20\x74\x68\145\x20\142\141\x63\153\145\x6e\144\74\x2f\x73\x74\162\x6f\x6e\x67\76\x20\141\156\144\x20\164\150\x65\156\x20\163\x65\x6e\x64\40\164\x68\x65\40\146\x6f\162\x6d\x20\x69\x6e\x20\x74\150\145\40" . "\x66\162\x6f\x6e\164\145\x6e\144\56\40\x59\157\165\x20\163\x68\157\x75\154\x64\x20\164\150\145\x6e\x20\x66\x69\x6e\144\40\141\x20\120\104\x46\x20\167\151\x74\x68\40\164\x68\x65\x20\x74\x6f\x6b\145\156\40\x6c\x69\163\x74\40\x69\156\x20\164\x68\x65\40\155\141\x69\x6c\x20\x61\x74\164\x61\143\150\155\x65\x6e\164\56\74\x62\x72\76\74\x62\162\76" . "\131\x6f\165\x20\143\141\x6e\x20\144\x69\x73\x61\142\154\145\40\164\x68\145\x20\164\x6f\x6b\145\x6e\40\154\x69\163\164\40\160\x61\x67\145\40\151\156\x20\x74\150\145\40\x4e\x6f\164\x69\x66\x69\x63\x61\x74\151\157\x6e\40\103\145\156\164\x65\162\40\x69\156\40\x74\x68\145\40\160\162\157\x70\145\x72\164\151\145\163\40\x6f\146\40\x74\x68\x65\40\147\x61\164\145\x77\141\171\56" . "\x3c\x62\162\76\74\142\x72\x3e\74\x62\x72\x3e\x3c\142\162\76" . "\x44\x69\145\40\x76\145\162\x66\xc3\274\x67\x62\141\x72\x65\x6e\40\123\151\x6d\x70\154\x65\x54\x6f\153\x65\156\163\40\145\162\x67\145\142\145\156\40\163\151\x63\150\40\141\x75\163\40\x64\145\155\40\x41\165\x66\162\165\146\x20\x64\145\x72\x20\x42\x65\156\141\x63\150\x72\x69\x63\x68\164\x69\147\x75\x6e\x67\x2e\x20" . "\x49\x6d\x20\x54\x65\163\164\x2d\x50\104\106\40\151\163\x74\40\145\x73\x20\x6e\151\x63\150\x74\x20\155\303\266\x67\154\151\x63\x68\x20\x64\x69\x65\40\x65\x63\x68\x74\145\156\x20\x45\151\x6e\x67\x61\156\147\x73\55\x54\x6f\x6b\x65\x6e\40\172\165\40\x65\162\x6d\x69\164\x74\x65\x6c\x6e\54\x20\144\x61\x68\x65\x72\x20\x66\x69\x6e\144\145\x6e\40" . "\123\151\x65\40\144\151\x65\x20\114\x69\163\x74\x65\x20\156\165\x72\x20\151\x6e\x20\144\145\x72\40\157\162\151\147\x69\156\141\154\145\x6e\40\x42\x65\156\x61\143\x68\162\x69\143\x68\164\151\147\165\156\x67\x2e\74\142\162\x3e\74\142\162\76" . "\x3c\x73\164\162\x6f\156\x67\76\102\154\145\151\142\145\156\x20\x53\x69\145\40\x69\155\x20\x42\x61\143\x6b\145\156\x64\40\x65\x69\x6e\x67\145\154\157\x67\x67\164\74\57\x73\x74\x72\x6f\156\x67\76\x20\x75\156\144\x20\x73\x63\x68\x69\x63\153\x65\x6e\40\x64\x61\156\x6e\x20\151\155\40" . "\x46\x72\x6f\156\x74\x65\x6e\x64\40\x64\141\x73\x20\106\x6f\162\x6d\x75\154\141\162\x20\x61\x62\x2e\x20\x49\x6e\40\144\145\155\x20\x4d\x61\151\x6c\141\x6e\x68\141\156\x67\x20\x73\157\154\x6c\164\x65\156\x20\123\x69\145\40\x64\141\x6e\156\x20\x65\151\156\40\x50\x44\106\40\x6d\x69\164\x20\141\156\147\x65\150\303\244\x6e\x67\164\145\x72\x20" . "\124\157\153\145\156\154\x69\x73\164\145\x20\x66\x69\x6e\x64\x65\156\56\74\142\162\76\x3c\x62\162\76" . "\104\151\145\40\x54\157\153\145\156\x6c\151\x73\x74\x65\40\153\303\xb6\x6e\x6e\145\156\40\x53\151\x65\x20\151\x6d\40\116\157\164\151\146\151\x63\141\x74\x69\x6f\156\40\103\x65\156\x74\x65\x72\x20\151\x6e\x20\144\145\x6e\x20\x45\x69\147\x65\x6e\163\143\150\141\x66\x74\x65\156\40\x64\x65\163\x20\107\x61\x74\x65\x77\x61\x79\x73\40\x61\x62\163\143\x68\x61\154\x74\x65\156\x2e"; } $pdf->writeHTML($text, false, false, true, false, "\x4c"); } $pdf->lastPage(); if ($arrPDF["\160\x72\157\x74\x65\143\x74"] == 1) { if (in_array("\x70\162\151\156\x74\55\x68\x69\x67\x68", $arrPDF["\160\x72\x6f\164\145\x63\x74\146\x6c\141\147\x73"]) && !in_array("\160\x72\151\156\164", $arrPDF["\x70\x72\x6f\x74\145\143\x74\146\154\x61\147\x73"])) { $arrPDF["\x70\x72\157\x74\145\143\x74\146\154\x61\x67\x73"][] = "\x70\162\151\156\x74"; } $opass = $arrPDF["\157\160\145\156\160\x61\163\x73\167\157\162\144"]; if ($opass == '') { $pass = $arrPDF["\x70\x61\163\163\167\157\162\x64"]; if ($pass == '') { $pass = null; } $pdf->SetProtection(array_diff(Self::$arrProtectflags, $arrPDF["\160\x72\157\164\x65\x63\x74\x66\x6c\x61\x67\x73"]), '', $pass, 1, NULL); } else { $pdf->SetProtection(Self::$arrProtectflags, $opass, $opass, 1, NULL); } } $result = true; if ($pdfdatei !== '') { if ($hascontent) { $pdf->Output(TL_ROOT . "\57" . $pdfdatei, "\106"); $_SESSION["\160\144\x66\156\143"]["\160\x64\146\144\x6f\x63\165\155\145\156\x74"] = $pdfdatei; } else { @unlink(TL_ROOT . "\57" . $pdfdatei); $result = false; } } else { $pdf->Output($arrPDF["\147\x61\164\145\x74\x69\164\154\145"] . "\x2e\x70\144\146", "\x44"); } unset($pdf); return $result; } protected static function checkBedingung($item, $arrPDF, $arrTokens) { $bedingung = html_entity_decode($item["\x62\145\x64\x69\156\147\165\156\x67"]); if (!empty($bedingung)) { $arrSplitG = explode("\75\x3d", $bedingung); $arrSplitU = explode("\41\x3d", $bedingung); if (count($arrSplitG) > 1) { $arrSplitG[0] = trim($arrSplitG[0], "\x23"); $arrSplitG[1] = trim($arrSplitG[1], "\42"); if (!isset($arrTokens[$arrSplitG[0]]) || strcmp(strtolower($arrSplitG[1]), strtolower($arrTokens[$arrSplitG[0]])) != 0) { return false; } } else { if (count($arrSplitU) > 1) { $arrSplitU[0] = trim($arrSplitU[0], "\x23"); $arrSplitU[1] = trim($arrSplitU[1], "\42"); if (!isset($arrTokens[$arrSplitU[0]]) || strcmp(strtolower($arrSplitU[1]), strtolower($arrTokens[$arrSplitU[0]])) == 0) { return false; } } else { if (!isset($arrTokens[$bedingung]) || empty($arrTokens[$bedingung])) { return false; } } } } return true; } protected static function demoHinweis($pdf) { if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7()) { $x = $pdf->GetX(); $y = $pdf->GetY(); $arrPageDimensions = $pdf->getPageDimensions(); $pdf->SetXY(15, $arrPageDimensions["\x68\153"] - 14); $pdf->writeHTML("\x3c\163\x70\x61\156\40\x73\164\x79\x6c\145\x3d\42\x63\157\154\157\x72\x3a\43\146\x66\x30\x30\60\x30\x3b\x62\x61\x63\153\x67\162\157\x75\156\144\55\143\x6f\x6c\x6f\162\x3a\43\146\x66\x65\145\x65\x65\x3b\x66\157\156\x74\55\163\x69\x7a\x65\72\71\x70\x78\73\146\157\x6e\164\55\x77\x65\x69\x67\x68\164\x3a\142\157\x6c\x64\42\x3e\46\x6e\x62\163\160\x3b\46\156\x62\163\x70\x3b\75\75\40\104\x45\x4d\117\40\166\145\x72\163\151\157\156\x20\x6f\x66\40\144\157\55\x77\150\151\154\145\x2f\x63\157\x6e\164\141\x6f\x2d\x70\x64\146\x2d\x6e\x63\x2d\x61\164\x74\x61\x63\x68\155\145\x6e\164\x2d\x62\x75\156\144\154\145\x20\55\x20\x6d\x61\x78\x69\x6d\x75\x6d\x20\62\x20\160\x61\147\x65\x73\x20\x2d\x20\102\165\x79\x20\x4c\x69\143\145\156\143\x65\x20\153\x65\x79\x21\x20\75\75\46\x6e\142\163\160\73\46\156\x62\163\160\73\x3c\x2f\x73\x70\x61\156\76", false, true, true, false, "\x4c"); $pdf->SetXY($x, $y); } } protected static function CDDAC68499E52601E4DBEB210CE9A1A7() { $k = str_split(Config::get(PRODUCT_NC . LIZENZ), strlen(VERWIRR)); $p = eval("\x72\x65\x74\165\162\156\40\x73\165\142\163\x74\x72\x28\42\60\x30\60\60\x22\56\x73\164\x72\164\x6f\165\160\x70\x65\162\x28\x64\x65\143\150\x65\170\50\x63\x72\x63\x33\62\50\x6d\144\65\50\x22" . PRODUCT_NC . "\72\42\x2e\x73\165\142\x73\x74\162\50\126\x45\x52\123\111\117\x4e\x2c\60\x2c\x31\x29\56\x22\72" . $k[0] . "\x22\x29\51\x29\51\54\55\x34\x29\x3b"); return !empty($p) && isset($k[1]) && $p === $k[1]; } public static function encrypt($varValue, $dc = null) { if (empty($varValue)) { return ''; } mt_srand(6152); $out = array(); for ($x = 0, $l = strlen($varValue); $x < $l; $x++) { $out[$x] = ord($varValue[$x]) * 3 + mt_rand(350, 16000); } mt_srand(); return implode("\x2e", $out); } public static function decrypt($varValue, $dc = null) { if (empty($varValue)) { return ''; } mt_srand(6152); $out = array(); $blocks = explode("\x2e", $varValue); foreach ($blocks as $block) { $ord = (intval($block) - mt_rand(350, 16000)) / 3; $out[] = chr($ord); } mt_srand(); return implode('', $out); } protected static function getimagetype($src) { $file = TL_ROOT . "\x2f" . $src; if (method_exists(File::class, "\143\162\x65\141\x74\145\x49\x66\104\145\x66\x65\162\162\145\x64") && is_callable(File::class, "\x63\162\145\x61\x74\145\111\146\x44\145\x66\145\x72\x72\145\144")) { (new File($src))->createIfDeferred(); } if (!file_exists($file)) { return ''; } $size = getimagesize($file); if ($size[2] == IMAGETYPE_GIF) { return "\107\x49\106"; } else { if ($size[2] == IMAGETYPE_JPEG) { return "\x4a\x50\105\x47"; } else { if ($size[2] == IMAGETYPE_PNG) { return "\x50\116\x47"; } else { return ''; } } } } }
<?php
 namespace Softleister\Pdfncattachment; use Contao\Config; use Contao\StringUtil; use Contao\Database; use Contao\FilesModel; use Contao\System; use Contao\Image\ResizeConfiguration; use Contao\Controller; use Contao\Environment; use Contao\Input; use Contao\File; define("\x4c\111\132\x45\116\132", "\114\151\143\x65\x6e\143\145"); define("\x50\122\117\x44\x55\x43\x54\137\x4e\103", "\x70\144\146\x6e\143\141\164\164\141\143\150\x6d\x65\x6e\164"); define("\x76\116\132\160\x6a\x58\172\x74\x45\126\113\111\x69\x71", "\61\x32\x33\64\71\x35\x36\x37\70\71\60\x31\x32\70\63\64\x35\x36\x37"); define("\111\115\x47\x44\x55\x4d\115\131", "\x64\x61\x74\x61\72\x69\155\141\x67\145\x2f\x70\x6e\147\73\142\141\x73\x65\x36\x34\54\151\126\102\x4f\x52\x77\60\113\x47\147\x6f\x41\x41\101\x41\x4e\x53\x55\x68\x45\125\147\101\101\x41\x4a\x59\101\x41\x41\x41\61\x43\x41\111\x41\101\x41\x41\163\66\x34\130\61\101\101\101\x41\x47\x58\122\106\127\110\122\x54\142\x32\x5a\x30\x64\x32\x46\171\132\121\102\102\132\107\71\151\132\x53\x42\x4a\x62\x57\x46\156\x5a\126\112\x6c\131\127\122\x35\143\143\154\x6c\x50\x41\x41\x41\x43\x30\x78\112\122\x45\x46\125\145\116\162\x73\x58\x47\x6c\x58\x32\172\x6f\x51\x6a\x52\172\152\x37\101\x74\162\x6f\x66\x54\57\57\x36\144\53\x37\155\166\x54\x51\157\x44\x73\x69\x51\117\62\63\x78\x31\116\x34\151\146\x4a\123\x2b\124\105\x77\x4f\x73\x35\61\161\x45\x63\x43\111\157\x6b\172\65\x33\x6c\172\x6d\150\123\x39\x2f\x76\x33\x37\67\126\161\x2f\x4d\x33\104\x71\125\x52\x51\121\x56\x69\x4e\x43\x73\x4a\161\x56\102\102\127\105\x46\x61\x6a\147\x72\x41\x61\x46\131\124\x56\161\103\x43\163\111\x4b\x78\107\102\x57\105\61\113\147\x69\162\x55\x55\x46\131\x51\126\151\x4e\x43\163\x4a\x71\x56\x42\x42\127\64\x39\x6a\150\x71\x72\70\x49\x49\x66\x42\120\53\x33\164\x45\x77\x33\x68\120\171\162\124\x63\x2b\x51\x58\145\142\x72\x66\x43\167\x64\126\157\150\x53\113\x4c\65\x4b\x32\x4f\x78\145\x56\123\113\x57\166\113\x72\131\130\x38\167\x58\x37\110\x41\x34\x39\x76\x4f\122\121\x70\x61\x52\x42\165\x74\71\163\167\104\x4f\x50\x6c\115\141\130\165\x4f\x4f\67\x5a\x6d\146\106\x32\x33\57\x64\x54\x6a\170\166\x4a\70\63\155\131\x6e\x33\x76\105\x49\101\x68\145\130\61\x39\x46\170\163\110\161\162\x6b\x73\x37\127\x67\x4e\101\x5a\x77\64\x43\157\x65\171\x49\122\x54\172\x50\x45\70\x36\160\104\163\132\x78\110\113\172\x73\142\x37\x65\x62\172\145\x62\x74\71\x58\127\x39\127\x75\107\x37\x65\x74\x5a\107\x71\64\x57\x4e\166\107\x61\x7a\x30\127\151\x63\145\x52\67\x4e\x44\70\120\x38\116\124\x45\102\151\x35\103\x67\x54\x6f\x50\x50\x71\144\x66\x50\71\162\151\64\161\156\x59\70\x2f\166\x36\71\x57\x69\x35\152\143\127\102\x71\x74\71\145\67\166\x62\70\63\104\x76\x48\162\x78\64\57\147\67\x53\x31\61\x61\x61\x78\x37\71\53\61\x62\163\x39\x6b\x4d\x4d\x7a\104\101\x34\x70\x50\x6e\65\53\146\x78\x57\113\124\102\110\111\x58\x68\x2b\144\x58\x56\x39\x65\60\x74\132\107\x63\152\131\x69\152\x54\x36\115\145\120\x31\53\61\127\x56\x52\x6f\163\70\165\130\x75\x72\156\x39\x2b\x48\150\x31\x72\x69\x45\x4a\141\61\127\x77\66\130\123\60\127\151\x2f\x6c\x63\x4d\x79\102\x6c\121\106\142\64\111\155\60\x54\x6f\x74\166\166\144\67\x70\x64\151\x47\x74\x6e\162\170\153\110\x68\150\66\x4d\x66\x76\64\x30\x64\x4b\x37\x6f\101\101\x53\115\x43\170\x62\x45\x58\x71\131\x6a\170\141\163\161\x68\x4b\x6b\x37\60\x54\163\x7a\x64\102\171\x72\x77\x79\171\x61\67\x58\131\x74\x41\x77\x4f\x73\x69\143\x64\x57\x64\x30\x6e\141\163\x66\x33\x44\121\x43\x49\x77\x61\113\x69\153\x67\143\102\x38\120\x75\70\116\x68\60\143\142\x33\x39\x62\63\156\170\64\x66\x63\x55\64\70\152\x70\116\164\x7a\142\165\x6a\x79\x75\x2f\x7a\x36\130\121\x35\x6e\x2b\x4d\x74\x46\61\144\x58\70\x43\x4d\x35\62\x6b\115\x4c\x5a\147\151\62\x57\120\x68\x34\x4a\172\x6f\x44\112\x2b\x6c\x76\x4e\x72\126\163\105\64\124\x45\131\143\x48\x69\71\x47\x41\x67\x39\x34\x4c\125\125\x70\x59\x53\x41\155\143\101\165\x6b\x66\163\x41\166\156\103\x37\x45\x62\57\x2f\x4d\x50\107\65\61\150\x37\x59\x77\x5a\155\71\x76\x4c\171\53\x2b\x64\120\x43\x68\x50\117\x78\x2f\x48\105\x6b\x6e\143\x53\125\x6e\172\x30\104\102\x6e\x69\x38\71\146\x72\66\x46\x44\101\x73\x4e\x33\111\x39\172\x63\132\x4f\x47\x47\114\122\x53\x71\66\x42\57\107\x62\x7a\122\x35\107\x49\67\114\x73\x42\101\131\167\x4c\102\147\154\x39\103\142\153\x72\x2b\x52\x54\x77\x49\146\126\66\65\x76\x31\107\151\x75\x38\x5a\125\x76\147\146\x52\x6c\x70\103\122\x71\102\x2b\103\x53\x44\120\x34\x4a\151\x43\x70\x56\x31\x48\x44\167\150\x4d\x61\142\124\154\126\121\111\x69\104\x75\124\106\x77\x69\x42\x6a\x65\104\123\x55\64\53\x52\x2f\x67\64\x45\161\165\130\171\70\143\70\x66\117\x70\65\x4f\x6a\155\161\123\x5a\x4c\x55\67\x6e\127\x61\162\126\127\x63\x6e\107\x55\126\121\x49\120\x69\x41\x56\60\154\167\x4e\114\x63\x6d\101\x78\x37\x69\57\144\x58\116\124\x53\107\x4b\125\157\x43\x6d\x36\153\57\153\154\161\x34\x55\106\x41\x35\x39\x48\x30\53\x62\164\x42\x75\64\125\x49\152\x31\x52\104\67\107\x53\172\x46\106\x7a\112\x6b\101\x6a\147\x4d\x79\x4d\162\171\x38\152\103\x79\131\105\x66\104\104\x32\x63\x61\120\152\53\x54\x6b\x46\146\125\151\x68\x6c\x79\166\71\64\146\104\57\x6d\x41\101\x38\x41\x53\x48\x63\103\x6e\x42\x62\x68\147\x4f\x7a\x38\71\x68\x36\x79\71\120\124\64\106\117\124\64\x41\151\x51\151\x4d\111\x44\155\152\x64\x51\121\x57\103\x75\107\66\x2f\146\x6f\126\53\150\105\127\x63\x6b\60\170\x32\102\x43\x39\145\x50\x6f\122\103\x57\x6b\x42\166\x4d\x45\x6a\53\x43\127\x4a\71\x4b\x79\x4d\121\x59\x6f\x58\x6c\131\166\107\x6d\x5a\171\x59\x47\x2b\x63\113\x76\x6d\101\115\65\x41\x67\115\142\x51\x35\x78\116\x4a\152\151\x32\157\x2b\115\x48\x59\x67\x4a\66\x44\113\157\132\70\121\x68\104\144\123\107\101\x4f\x72\x79\x34\121\x44\157\x42\172\62\x6b\101\x41\105\x2b\67\155\105\65\x62\67\x62\x61\x4e\101\x6e\x45\x65\106\x52\x61\x4d\114\x2f\x46\x44\x4f\x61\x56\147\144\x71\142\153\152\147\170\x68\x4c\x61\x30\x67\x67\x41\121\114\113\x4d\141\103\x68\x6e\104\x7a\x79\126\166\127\x64\x68\x44\121\x65\x72\x47\x67\x5a\61\x59\167\70\x32\x52\x6d\x70\x70\157\103\x2b\x56\x4b\153\163\x48\x59\62\x6a\x52\x54\x43\x30\124\125\x41\x78\x32\120\x38\x73\x46\x48\x71\111\x54\153\x36\x59\x67\x4b\x41\63\x45\62\x49\71\147\x4e\x73\145\x62\62\x32\x6a\111\152\122\x55\x61\x4e\x4d\x4f\x6b\120\x70\x49\x4b\x57\64\130\162\167\x75\x54\x41\x31\x6f\107\141\x66\x48\x30\64\x4c\114\x71\x4b\x38\x30\155\x6b\62\156\x65\106\101\x6b\111\151\120\124\x62\x54\130\65\x41\131\53\x41\x7a\63\x54\x31\171\x4d\145\107\141\114\x4d\x6d\x77\x69\x71\x6c\x37\146\161\102\x34\x55\x67\x59\x76\x77\x4f\x65\115\x49\x72\x67\x61\x5a\110\144\70\172\x46\x77\150\156\x61\63\x69\60\102\64\57\x65\x55\114\65\62\61\57\x42\x35\x30\65\153\x39\125\121\x53\x69\146\62\125\x6b\x43\x67\x67\150\164\x4a\102\153\111\126\x56\70\124\x4c\x75\126\162\x76\163\111\x79\x31\x55\x51\124\x65\101\x53\x32\112\x34\x53\143\x64\143\x6c\63\x34\124\113\147\111\x6e\x55\x48\x5a\x46\x4c\x45\113\112\x6c\x49\63\x45\163\145\x45\103\161\162\x35\145\x2b\x78\103\x45\146\x2b\163\x41\x4a\101\117\x66\110\x42\x78\147\x51\x65\x45\x55\x75\x4b\150\x56\x4e\x33\x36\141\65\x4b\113\156\x52\125\x71\x6e\x42\65\117\172\x4c\102\x43\x43\x48\62\x72\155\101\65\53\141\103\121\157\x6a\66\125\x58\156\143\71\x6d\161\166\156\151\x52\144\x43\102\165\x75\116\x30\145\172\61\152\125\64\x69\x56\143\163\x66\143\x39\x42\x79\53\x2f\x56\130\x58\114\146\111\x51\x72\x64\x61\x5a\64\x6c\143\117\x44\x75\x42\x39\x66\156\x6e\112\127\x70\166\x30\144\130\71\x44\125\x69\106\x4c\x61\57\x2f\106\x45\150\x6c\x64\104\x45\64\x50\61\x78\x64\172\125\x62\167\x49\150\130\x58\x72\x39\123\117\x6f\104\132\124\x44\x6b\104\152\x63\x56\66\x66\146\x68\x38\146\172\x6d\153\62\166\60\x66\x42\x56\x48\x79\x34\164\162\x4a\x39\142\161\x61\107\104\x4a\143\124\144\113\161\150\145\64\x51\156\112\x4c\164\124\x52\x79\146\125\x54\x71\142\107\x7a\132\101\x69\x78\x33\x6c\x6d\152\64\x62\x68\x75\130\110\153\102\x7a\x77\141\126\151\101\x4e\153\x4a\112\x4e\x36\115\x78\101\x65\x42\123\x48\x69\154\166\105\x38\x4c\123\101\156\116\170\x4c\x53\105\x44\125\110\111\101\123\117\147\x56\145\x79\127\104\x74\x62\x59\x62\x4b\x55\62\x43\172\x75\111\131\x34\155\147\61\x54\x4a\103\64\x4c\121\62\x6d\162\132\x35\x35\125\116\111\x53\x79\147\x30\125\x44\70\131\101\65\107\153\x55\x39\x43\x57\117\166\63\x64\x78\x4f\x43\121\x4a\125\163\x52\x41\x59\132\x46\x65\125\x79\121\165\x4b\x78\x31\154\x57\150\x4a\155\x76\170\70\x51\x53\64\x4d\151\114\x6f\142\62\53\61\x33\123\x30\x51\156\121\x53\153\x42\x71\x2f\110\151\132\x53\x78\x4b\x46\60\x64\x36\x42\103\x53\126\142\151\x75\132\131\x6e\x53\150\x76\146\156\114\x2f\x55\x38\110\164\115\102\x72\113\156\101\x78\144\125\126\x36\x46\114\x36\x5a\x64\x4d\160\x56\x67\152\x4b\x41\x4e\126\121\x32\x63\122\155\164\x51\x72\x32\x4e\x65\147\126\x47\120\x62\53\x63\x6f\120\65\x4f\161\125\x54\122\x52\x58\127\x63\x54\x67\144\x56\x49\153\115\101\x47\x76\107\x76\103\155\x4b\x6f\x45\x6e\167\x67\x52\121\x73\x6c\141\103\114\x48\110\70\x37\x48\x4b\161\141\161\x7a\162\101\x49\112\x47\x36\x35\122\145\120\x6f\113\x2b\x42\156\143\126\x6b\126\146\x4e\x54\x36\161\x76\x32\121\x6b\x67\x34\x44\x4c\x63\x73\x62\61\x43\x54\x68\150\x56\x54\x4f\x36\x35\x68\121\164\171\145\x39\112\131\167\121\x56\x58\x54\x34\x51\x6f\113\130\121\x70\155\126\127\123\167\x4a\x6a\x79\153\165\x37\x63\131\160\166\x57\x74\124\x6b\146\x4e\112\x63\150\62\x6b\x59\123\163\x56\x71\153\x51\61\157\160\156\x70\125\71\x50\x54\71\x4f\x58\x6c\64\x50\131\x51\104\117\121\126\70\x42\151\101\157\166\163\x2f\x76\x4d\x5a\x4b\141\x77\161\x6c\102\x42\161\x45\x67\x63\106\154\130\x34\126\x6b\157\x55\104\x6a\x41\x30\146\127\163\x77\121\x46\162\62\144\x68\64\x6b\x62\102\122\x51\107\x54\105\62\x2f\x59\106\x4e\164\x36\125\165\x31\x35\x4e\144\x78\x46\157\166\x46\150\x31\110\105\x44\170\67\154\x33\x56\122\111\x55\161\x6f\123\x38\144\x6a\x34\104\116\x59\117\x4e\167\126\x33\65\x2b\170\x6a\x6c\124\x30\116\x51\63\161\147\125\x68\113\x2b\x59\x55\x37\127\x49\130\107\107\x4a\112\53\105\x46\x53\142\172\110\x44\67\x4d\x68\x31\60\160\65\x41\123\111\121\165\116\144\110\x47\x6c\163\x4b\145\103\x5a\x61\153\62\114\160\x62\141\126\x70\x64\x48\57\x66\x4a\x33\152\x63\x43\62\104\142\x35\150\x74\151\x76\x52\x73\60\63\x43\120\x52\x74\x69\x67\x32\x34\116\x32\x32\67\x6a\151\170\x32\122\153\x45\x58\104\160\x52\161\125\107\126\102\131\x6d\141\x33\x6a\x4f\x33\122\155\x4d\x41\111\153\106\120\x38\x70\x6b\x6f\132\x52\x66\67\53\x38\67\x68\x63\x72\x63\x4f\151\71\172\123\60\126\x51\143\103\x4b\x34\67\x77\153\151\166\x6b\x37\x44\x39\x39\130\162\x62\63\150\144\147\x72\104\147\x34\161\x41\x6b\170\157\x55\x41\x58\171\x41\57\152\105\x61\x57\126\112\x43\x61\130\x37\132\x62\x6b\x30\142\112\66\x71\103\x54\141\120\162\103\171\x5a\x4e\116\121\62\160\160\x31\104\101\x46\x63\131\147\105\110\132\124\144\60\124\x31\x52\x4a\x55\x4f\157\154\160\144\151\63\121\145\x45\x36\165\156\147\122\145\163\x46\x75\121\x7a\x57\155\145\166\160\131\x4a\167\152\160\161\111\x6c\x5a\x4a\150\x4d\163\161\x48\154\143\x6b\x6b\x6c\x61\143\126\x71\x75\143\x41\x72\71\x47\112\155\112\120\116\x39\115\164\x6d\x30\153\x77\x7a\120\x7a\67\166\x39\166\x6a\x44\151\x74\117\70\57\x50\172\64\107\x70\x7a\x58\106\x66\x44\x36\105\124\120\105\x68\x45\124\x58\171\x51\x63\x72\x47\x6c\x51\113\x78\156\x6f\112\x45\102\x67\x61\x55\145\165\144\x51\151\x49\66\104\x63\x4d\107\x55\x65\x37\62\x65\x6f\61\70\57\x73\144\157\132\x71\x6f\x44\163\70\172\x77\156\163\x39\x5a\170\x63\160\x7a\x50\142\x4d\144\x31\171\162\x4b\57\x6e\x55\x61\64\114\157\x78\115\122\x59\151\x61\132\x52\x54\x64\106\x46\x49\105\x68\x65\x73\130\x38\x6d\x72\160\122\x41\x58\x66\130\124\x2f\160\x78\x54\x6c\127\x4f\60\x38\166\150\x31\114\70\x33\x74\x42\x49\x78\x59\x59\x64\x71\124\105\53\x6b\x65\x36\x57\x42\x4b\x47\x53\163\x2b\146\110\117\123\x47\x35\124\x43\x48\x38\x6f\101\122\x6d\122\x57\131\166\x78\171\152\x33\113\x30\153\121\157\105\171\162\x52\x48\x61\x42\167\63\x66\x32\x56\x53\x52\61\x35\165\172\154\170\122\66\x59\x54\66\x53\61\x4a\x64\x2f\x61\125\x2f\60\141\157\x51\x35\160\x59\160\162\122\125\x46\x31\x4e\x6c\153\x61\x6a\120\121\x75\154\111\x4a\124\x62\150\x30\107\132\151\x63\167\x48\104\111\x4f\147\x74\x4d\x54\103\146\x56\105\53\x71\162\150\x78\141\x6f\x6d\131\172\121\x59\x58\x46\60\154\x6d\151\167\151\x67\144\155\63\170\122\122\x56\145\x42\67\x6b\x39\x6d\112\x76\x7a\57\143\x6c\156\x47\127\x4c\x35\x45\x4a\64\x42\121\x74\143\x4e\164\71\x76\125\x43\121\61\x5a\107\157\x32\163\145\71\145\x35\x77\x6d\154\x75\x34\x58\x6d\63\x39\57\146\x55\143\112\x78\x4c\x78\114\x48\x52\156\61\53\x2f\160\160\x4f\112\161\x69\112\111\124\151\x67\x69\104\x6f\144\161\111\170\x33\x77\101\60\x4e\x35\x65\130\x6f\x79\116\x68\x6f\57\x50\x47\103\126\x66\x72\53\146\150\x53\x4a\x44\x6a\x6f\124\61\x61\x54\x77\x2b\63\144\x58\x2f\x62\x79\x44\x30\x50\114\144\145\63\66\x5a\x32\165\x38\157\113\x54\x6e\161\x35\x4f\x61\164\x4d\112\x53\127\x75\x47\x59\60\x30\x5a\x51\x6a\71\114\x61\x32\152\63\x44\x67\115\147\x4a\153\156\x57\103\164\x65\x55\x52\165\x46\117\126\x55\x64\x44\x49\x66\x67\161\x37\65\x69\67\161\x78\101\x6a\x36\120\x52\x71\x2b\x2f\104\106\154\x50\x76\152\x52\x45\x79\112\x35\x4d\112\x49\115\124\x4d\172\x79\x49\x31\67\x39\x44\53\112\x4c\x31\143\141\x76\122\x79\x75\x61\65\x57\112\x42\104\103\155\64\127\66\116\x73\104\x33\167\x72\x2f\126\x39\x70\61\x6b\53\x52\102\66\70\x74\x4d\x4f\x76\164\64\x46\163\x70\125\116\161\115\x31\x32\117\x7a\132\x45\x47\x42\x41\x38\x78\53\130\126\106\x62\x4a\115\152\130\172\102\x51\x34\x62\x68\x38\63\147\70\156\60\64\x37\x76\x52\x37\x30\x6a\67\x75\x45\x38\103\111\126\x2b\65\132\x4c\67\161\x6c\x4d\112\141\127\127\164\x37\65\64\x49\66\127\x32\x42\x63\x30\130\146\x76\166\x6d\67\161\x34\63\107\117\103\110\143\x69\x42\125\153\x37\102\x49\146\154\67\105\x6d\125\66\x6a\x78\x44\117\102\x2b\x46\x46\112\x32\164\64\x45\x67\x38\102\157\151\127\104\123\155\x79\171\171\x35\101\x67\x49\150\x71\151\x57\x31\x75\x4a\103\x44\x37\x57\x58\x36\122\x4c\166\x64\114\165\130\116\172\144\x6a\166\x5a\x57\x55\x66\60\102\117\x4f\x58\154\53\x6a\x6b\x73\x47\x58\114\155\157\x37\x5a\163\x42\x55\67\x51\156\104\101\x46\x32\x77\x36\x49\112\163\130\142\125\x64\124\x47\x63\125\x35\155\x58\124\x63\x61\156\162\146\147\x75\105\115\x4b\x72\x36\x53\145\x4c\132\x4a\x4d\132\101\x4c\x41\x38\x4d\x66\x66\x47\x47\x30\x31\147\146\x44\126\150\x32\126\146\111\150\66\117\x71\x74\x2b\163\x61\x74\162\126\x61\x4c\162\x6e\53\x6f\x71\66\x44\x67\57\x55\110\x41\x37\161\114\145\x48\x67\x77\107\x37\x71\x46\x58\125\x6c\63\166\170\171\x55\x37\x50\x4c\66\165\x6e\x45\157\127\x70\71\125\x7a\x53\x6d\57\x7a\x4b\60\x62\151\x70\145\64\151\x49\x42\105\x74\x49\x78\121\x75\x73\x66\70\x78\151\x51\x75\161\150\x6b\166\144\x68\x4d\112\x51\114\x35\115\161\145\x6f\x4e\x67\x39\x50\x54\x50\x72\67\x30\123\103\111\x43\x69\146\146\66\146\x58\101\x6c\127\x47\123\x4e\70\x78\x59\67\130\x61\105\x6b\102\60\x65\126\x56\x65\114\x72\x32\x31\165\x73\101\x46\146\x30\115\122\x7a\x56\x4e\x52\65\x41\x31\x56\142\x4f\166\126\x49\x64\163\x53\160\132\x4a\x30\106\x50\150\110\x79\x53\160\146\x34\x35\x4e\53\x70\63\124\127\x53\x45\153\144\x78\x52\x76\x59\x65\113\x39\x71\105\x46\60\x5a\x54\162\132\x2f\x46\x65\x31\x47\x50\x52\142\150\x65\x71\104\x48\x43\x71\x43\163\117\144\x54\141\x66\170\x4f\x6b\113\x36\102\116\x43\x51\x64\162\145\x62\x69\x69\x49\x4f\146\57\146\164\x47\x39\66\171\x6d\105\65\71\63\64\x39\142\x76\111\x33\112\125\x66\x7a\x52\x55\124\102\x74\107\130\124\x35\111\62\x72\115\x31\61\111\x2f\117\163\112\x49\156\x31\x36\x48\125\64\125\155\61\x50\x38\x56\x47\111\160\160\x66\110\x41\x51\121\x64\67\x6f\111\x73\x45\x37\61\66\165\x56\x64\152\x35\x5a\x47\152\x58\163\103\x59\65\x6f\161\71\x7a\x67\x4d\167\x33\x68\x37\147\x63\x6a\x62\66\116\x79\x69\126\66\x2b\147\147\121\65\x2f\106\102\x4c\163\125\x4a\x62\111\163\156\53\x2b\141\53\106\57\x48\x77\147\x32\172\x37\x55\x54\x37\53\x79\x49\x77\113\60\117\141\112\x45\147\x4b\146\x47\123\144\154\66\x41\66\x76\106\x49\163\x61\x46\x4d\62\103\x6a\x30\x49\102\57\x6a\121\x5a\x44\171\x50\x51\156\65\x79\x54\125\131\132\x76\127\112\x33\60\105\70\167\143\144\x32\61\60\x71\x71\102\x43\x53\x39\61\x65\x5a\156\166\167\65\x65\123\x59\142\71\151\x58\x6b\x4c\x63\67\x42\x70\132\114\x54\x6f\162\63\166\123\x6d\105\x4b\62\x64\x70\71\105\115\126\144\167\116\x59\x50\145\x54\x42\x51\170\x52\x39\144\x59\x49\71\x71\172\x4e\x2f\144\x33\143\x6c\166\154\166\x77\x7a\66\x79\x52\110\170\115\x4a\x59\x55\117\64\x52\x31\115\x68\x6d\x57\x69\x51\x39\x34\103\x6e\x54\x53\x6d\x7a\106\120\110\x71\160\x2b\x49\x32\x73\x61\163\x6e\111\x58\142\122\x6c\x39\x44\63\x36\x53\x2f\x38\126\131\x41\x43\x31\x32\x4b\103\x33\x30\110\122\101\x59\167\101\x41\101\x41\x42\112\x52\x55\65\x45\x72\153\112\x67\147\147\x3d\75"); class pdfnc_helper { protected static $arrProtectflags = array("\155\x6f\144\151\x66\x79", "\145\170\x74\x72\x61\x63\164", "\160\162\151\x6e\x74", "\160\162\151\156\x74\x2d\150\151\147\150", "\x63\157\x70\171", "\141\156\x6e\157\164\x2d\x66\157\162\155\x73", "\x66\x69\x6c\x6c\55\146\x6f\162\x6d\x73"); public static function getPdfData($arrPDF, &$arrTokens, $pdfdatei) { $objDB = Database::getInstance(); $hascontent = false; if (class_exists(\Codefog\HasteBundle\StringParser::class)) { $hasteStringParser = new \Codefog\HasteBundle\StringParser(); } if (isset($arrTokens["\x66\157\x72\x6d\143\157\156\146\x69\147\137\151\x64"])) { $objFine = $objDB->prepare("\x53\x45\x4c\x45\x43\x54\x20\52\x20\x46\122\117\x4d\40\164\x6c\137\x66\x6f\x72\x6d\x5f\146\151\145\x6c\144\40\127\110\105\122\x45\40\x60\164\171\160\145\140\75\77\x20\x41\x4e\104\x20\x70\x69\144\x3d\x3f")->execute("\x66\x69\156\145\x55\x70\x6c\157\141\x64\x65\162", $arrTokens["\x66\157\x72\x6d\x63\157\x6e\146\x69\147\137\151\x64"]); while ($objFine->next()) { $tokenname = "\x66\x6f\162\x6d\x5f" . $objFine->name; if (isset($arrTokens[$tokenname])) { $arrFiles = StringUtil::trimsplit("\x2c", $arrTokens[$tokenname]); $nr = 1; foreach ($arrFiles as $filename) { $arrTokens[$tokenname . "\137\43" . $nr] = $filename; $arrTokens[$tokenname . "\137\43" . $nr . "\x5f\x62\141\163\145\156\x61\x6d\145"] = basename($filename); $nr++; } } } $objUpl = $objDB->prepare("\123\105\114\x45\x43\x54\x20\52\x20\x46\x52\117\115\40\x74\154\137\x66\157\162\155\x5f\x66\x69\x65\154\x64\40\x57\110\105\x52\x45\x20\140\x74\171\160\x65\x60\75\x3f\40\x41\x4e\104\40\x70\151\144\75\77")->execute("\165\x70\154\x6f\x61\144", $arrTokens["\x66\157\162\x6d\x63\157\156\x66\x69\x67\137\151\144"]); while ($objUpl->next()) { $tokenname = "\x66\157\x72\x6d\x5f" . $objUpl->name; if (isset($arrTokens[$tokenname])) { $arrTokens[$tokenname . "\x5f\142\x61\163\145\x6e\141\155\145"] = basename($arrTokens[$tokenname]); } } } $l = array(); $l["\141\x5f\x6d\x65\x74\x61\137\144\151\162"] = "\154\164\162"; $l["\141\x5f\155\145\x74\x61\x5f\x63\x68\141\162\x73\145\x74"] = Config::get("\x63\150\141\x72\x61\143\164\145\x72\123\x65\x74"); $l["\x61\x5f\155\145\x74\141\x5f\154\x61\156\147\165\x61\x67\x65"] = substr($GLOBALS["\124\114\x5f\x4c\x41\x4e\107\x55\101\x47\105"], 0, 2); $l["\x77\x5f\160\141\x67\x65"] = "\160\x61\x67\x65"; $font = PDF_FONT_NAME_MAIN; $pdf = new \setasign\Fpdi\Tcpdf\Fpdi(PDF_PAGE_ORIENTATION, "\x6d\155", PDF_PAGE_FORMAT, true); $pages = 0; if (!empty($arrPDF["\166\x6f\162\154\141\147\145"]) && file(TL_ROOT . "\x2f" . $arrPDF["\x76\x6f\x72\154\x61\147\145"])) { $pages = $pdf->setSourceFile(TL_ROOT . "\x2f" . $arrPDF["\x76\157\x72\x6c\x61\147\x65"]); } $pdf->SetCreator(PDF_CREATOR . (Self::CDDAC68499E52601E4DBEB210CE9A1A7() ? "\54" : "\x2c\40\x44\105\115\117") . "\x20\143\157\x6e\x74\x61\157\x2d\x70\144\146\x2d\156\143\x2d\x61\164\164\x61\x63\x68\155\x65\156\x74\x2d\x62\165\156\x64\x6c\145"); $pdf->SetAuthor($arrPDF["\x61\165\164\x68\157\162"]); $pdf->SetTitle($arrPDF["\x74\x69\164\154\145"]); $pdf->SetSubject($arrPDF["\x67\x61\x74\x65\164\151\164\154\145"]); $pdf->setPrintHeader(false); $pdf->setPrintFooter(false); $pdf->SetMargins(0, 0, 0); $pdf->SetAutoPageBreak(true, 0); $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO); $pdf->setLanguageArray($l); $pdf->getAliasNbPages(); $customfont = array("\x52" => false, "\102" => false, "\x49" => false, "\x49\x42" => false); foreach ($customfont as $attr => $status) { if (!empty($arrPDF[$attr]) && file_exists(TL_ROOT . "\57" . $arrPDF[$attr])) { $customfont[$attr] = \TCPDF_FONTS::addTTFfont(TL_ROOT . "\57" . $arrPDF[$attr], '', '', 32, TL_ROOT . "\57" . dirname($arrPDF[$attr]) . "\x2f"); $file_parts = pathinfo(TL_ROOT . "\x2f" . $arrPDF[$attr]); $pdf->AddFont("\143\x75\163\x74\x6f\x6d\x66\157\x6e\x74", $attr == "\x52" ? '' : $attr, $file_parts["\x64\x69\x72\156\141\155\x65"] . "\x2f" . strtolower($customfont[$attr] . "\56\160\150\x70")); } } $seiten = -1; $where = ''; if ($pdfdatei !== '') { if (!empty($arrPDF["\155\x75\154\164\x69\146\x6f\x72\x6d"]) && is_array($arrPDF["\x6d\x75\154\x74\x69\146\x6f\162\x6d"]) && $arrPDF["\x6d\165\x6c\x74\151\x66\157\x72\155"][0]["\x62\x65\x64\151\156\147\165\x6e\x67"] !== '') { $seiten = array(); foreach ($arrPDF["\x6d\165\154\x74\x69\x66\157\162\x6d"] as $multi) { if (!Self::checkBedingung($multi, $arrPDF, $arrTokens)) { continue; } $arrBereiche = StringUtil::trimsplit("\54", $multi["\x73\x65\x69\164\x65\156"]); foreach ($arrBereiche as $ber) { if (strpos($ber, "\55") == false) { $seiten[] = $ber; } else { $se = StringUtil::trimsplit("\x2d", $ber); for ($i = $se[0]; $i <= $se[1]; $i++) { $seiten[] = $i; } } } } if (count($seiten) < 1) { unlink(TL_ROOT . "\57" . $pdfdatei); return false; } $seiten = array_unique($seiten, SORT_NUMERIC); $where = "\x20\x41\x4e\104\40\160\141\147\145\x20\x49\116\x28" . implode("\x2c", $seiten) . "\51"; } } $objItems = $objDB->prepare("\123\105\x4c\105\103\124\x20\52\40\x46\x52\x4f\115\x20\164\x6c\x5f\x70\144\146\156\143\137\160\x6f\163\151\164\151\x6f\156\x73\40\127\110\105\122\x45\x20\x70\165\142\x6c\x69\163\x68\x65\144\x3d\61\x20\101\116\104\40\x70\151\144\x3d\77" . $where . "\40\x4f\x52\x44\x45\122\40\102\x59\40\x70\141\x67\x65\x2c\40\163\x6f\162\164\151\x6e\147")->execute($arrPDF["\x67\141\x74\x65\151\x64"]); if ($objItems->numRows < 1 && $pdfdatei !== '') { unlink(TL_ROOT . "\57" . $pdfdatei); return false; } if ($objItems->numRows > 0) { $page = 0; while ($objItems->next()) { $arrItem = array(); $arrItem["\x69\x64"] = $objItems->id; $arrItem["\x74\x79\160\x65"] = $objItems->type; $arrItem["\x70\151\143\164\171\x70\145"] = $objItems->pictype; if ($objItems->pictype === "\x75\x75\x69\144") { $picuuid = html_entity_decode($objItems->pictag); if (!\Contao\Validator::isUuid($picuuid)) { $picuuid = trim($picuuid, "\43"); if (class_exists(\Haste\Util\StringUtil::class)) { $picuuid = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags("\43\43" . $picuuid . "\43\43", $arrTokens); } else { $picuuid = $hasteStringParser->recursiveReplaceTokensAndTags("\x23\43" . $picuuid . "\43\x23", $arrTokens); } $picuuid = trim($picuuid, "\43"); } if (mb_substr($picuuid, 0, 2) === "\60\x78") { $picuuid = mb_substr($picuuid, 2); } if (ctype_xdigit($picuuid) && mb_strlen($picuuid) == 32) { $picuuid = hex2bin($picuuid); } $objPic = FilesModel::findByUuid($picuuid); if ($objPic == null) { continue; } $arrItem["\160\151\143\164\171\160\x65"] = "\x66\x69\154\145"; $arrItem["\x70\151\x63\164\x61\x67"] = $objPic->path ?? ''; } else { $objPic = FilesModel::findByUuid($objItems->picture); $arrItem["\x70\151\143\164\x61\x67"] = $objItems->pictag; } $arrItem["\x70\151\143\x74\165\x72\145"] = $objPic->path ?? ''; $arrItem["\142\x61\x72\164\x79\x70\x65"] = $objItems->bartype; $arrItem["\164\x65\x78\164\x69\164\x65\155\x73"] = StringUtil::deserialize($objItems->textitems); $arrItem["\160\141\147\x65"] = $objItems->page; $arrItem["\160\x6f\163\x78\171"] = StringUtil::deserialize($objItems->posxy); $arrItem["\141\162\145\x61"] = StringUtil::deserialize($objItems->textarea); $arrItem["\141\x6c\x69\x67\156"] = $objItems->align; $arrItem["\146\x6f\x6e\164\x73\164\x79\154\x65"] = StringUtil::deserialize($objItems->fontstyle); $arrItem["\x74\x65\x78\x74\x74\162\141\156\x73\x66\x6f\x72\155"] = $objItems->texttransform; $arrItem["\x66\x6f\x6e\164\163\x69\x7a\x65"] = $objItems->fontsize; $arrItem["\x74\145\x78\x74\x63\157\x6c\157\162"] = $objItems->textcolor; $arrItem["\x62\157\162\144\145\x72\162\151\147\x68\164"] = $objItems->borderright; $arrItem["\161\162\163\x69\172\145"] = $objItems->qrsize; $arrItem["\142\x65\144\x69\156\x67\165\x6e\x67"] = $objItems->bedingung; $arrItem["\156\x6f\142\154\x61\156\153\x73"] = $objItems->noblanks; if (!empty($arrItem["\x74\x65\170\164\151\164\145\x6d\163"])) { foreach ($arrItem["\164\145\x78\164\x69\x74\x65\x6d\163"] as $key => $value) { $arrItem["\164\145\170\x74\151\x74\145\x6d\163"][$key]["\146\x65\x6c\144"] = StringUtil::decodeEntities($value["\146\x65\154\144"]); $arrItem["\x74\145\170\164\151\164\145\x6d\x73"][$key]["\x62\145\x64\151\156\147\x75\156\147"] = StringUtil::decodeEntities($value["\x62\x65\144\x69\156\x67\165\156\147"]); } } if (isset($GLOBALS["\124\x4c\x5f\x48\x4f\x4f\x4b\123"]["\160\144\x66\156\143\137\x50\157\x73\151\164\151\x6f\156\163"]) && \is_array($GLOBALS["\124\114\137\x48\x4f\117\x4b\123"]["\160\x64\146\156\143\137\120\x6f\163\x69\164\x69\x6f\156\x73"])) { foreach ($GLOBALS["\x54\x4c\137\x48\117\117\113\123"]["\160\144\146\x6e\143\137\120\x6f\x73\x69\164\x69\x6f\156\x73"] as $callback) { $arrItem = System::importStatic($callback[0])->{$callback[1]}($arrItem); } } $arrItem["\x70\141\x67\145"] = $objItems->page; while ($page != $arrItem["\x70\x61\147\145"]) { if ($page > 0) { Self::demoHinweis($pdf); } if ($arrPDF["\x61\154\154\160\x61\147\145\x73"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\160\x61\x67\145"]; } $pdf->AddPage(); if ($pages > 0) { if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pageheight = $arrPageDimensions["\150\153"]; $pagewidth = $arrPageDimensions["\167\153"]; } } $text = ''; if ($arrItem["\164\x79\160\145"] === "\x70\x69\143") { $pos = array(); $pos[0] = $arrItem["\160\x6f\x73\170\x79"][0] + $arrPDF["\157\x66\x66\x73\145\164"][0]; $pos[1] = $arrItem["\160\x6f\163\170\x79"][1] + $arrPDF["\x6f\146\x66\163\x65\x74"][1]; if ($pdfdatei !== '') { if (!Self::checkBedingung($arrItem, $arrPDF, $arrTokens)) { continue; } switch ($arrItem["\160\151\143\x74\x79\160\145"]) { case "\x66\151\x6c\145": $imageFactory = System::getContainer()->get("\x63\157\x6e\164\141\157\56\x69\x6d\x61\x67\x65\56\151\155\x61\x67\145\x5f\x66\141\x63\164\157\162\x79"); $image = $imageFactory->create(TL_ROOT . "\x2f" . $arrItem["\x70\151\143\x74\x75\x72\x65"], array($arrItem["\x61\162\145\x61"][0] * 11.8, $arrItem["\141\x72\145\141"][1] * 11.8, ResizeConfiguration::MODE_CROP)); $src = str_replace("\45\62\60", "\40", $image->getUrl(TL_ROOT)); $bildtyp = Self::getimagetype($src); if ($bildtyp != '') { $pdf->Image(TL_ROOT . "\57" . $src, $pos[0], $pos[1], $arrItem["\x61\x72\x65\x61"][0], $arrItem["\141\162\x65\141"][1], $bildtyp); $hascontent = true; } break; case "\165\x70\x6c\x6f\x61\x64": if (class_exists(\Haste\Util\StringUtil::class)) { $png = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags("\x23\43" . $arrItem["\160\x69\143\164\x61\147"] . "\43\43", $arrTokens); } else { $png = $hasteStringParser->recursiveReplaceTokensAndTags("\x23\x23" . $arrItem["\x70\151\x63\x74\x61\147"] . "\43\x23", $arrTokens); } if (substr($png, 0, 2) === "\43\x23") { break; } if ($png[0] !== "\x2f") { $png = TL_ROOT . "\57" . $png; } $imageFactory = System::getContainer()->get("\x63\x6f\x6e\x74\141\157\x2e\151\x6d\x61\147\145\x2e\151\x6d\x61\147\x65\137\x66\x61\143\x74\157\x72\171"); $image = $imageFactory->create($png, array($arrItem["\x61\162\x65\141"][0] * 11.8, $arrItem["\x61\162\145\x61"][1] * 11.8, ResizeConfiguration::MODE_CROP)); $src = str_replace("\x25\x32\60", "\40", $image->getUrl(TL_ROOT)); $bildtyp = Self::getimagetype($src); if ($bildtyp != '') { $pdf->Image(TL_ROOT . "\x2f" . $src, $pos[0], $pos[1], $arrItem["\x61\162\x65\x61"][0], $arrItem["\x61\162\145\141"][1], $bildtyp); $hascontent = true; } break; case "\x64\141\164\x61": $png = $arrTokens[$arrItem["\x70\151\143\x74\141\147"]]; $png = base64_decode(preg_replace("\43\x5e\144\x61\164\x61\72\151\x6d\141\147\x65\x2f\133\x5e\73\135\x2b\x3b\x62\x61\x73\145\x36\x34\x2c\x23", '', $png)); $pdf->Image("\x40" . $png, $pos[0], $pos[1], $arrItem["\x61\x72\x65\141"][0], $arrItem["\x61\x72\x65\141"][1], "\120\x4e\x47"); $hascontent = true; break; } } else { $png = base64_decode(preg_replace("\43\x5e\x64\141\164\x61\72\151\x6d\x61\147\145\x2f\133\136\73\x5d\x2b\73\142\141\x73\x65\66\x34\x2c\x23", '', IMGDUMMY)); $pdf->Image("\100" . $png, $pos[0], $pos[1], $arrItem["\x61\162\145\x61"][0], $arrItem["\141\x72\x65\141"][1], "\120\x4e\107"); $pdf->SetXY($pos[0], $pos[1]); $pdf->SetTextColor(0, 0, 0); $pdf->writeHTML($arrItem["\160\x69\143\x74\171\160\x65"] == "\x66\x69\154\145" ? basename($arrItem["\x70\x69\143\x74\x75\x72\x65"]) : $arrItem["\x70\151\143\164\141\147"], false, false, true, false, "\x4c"); $hascontent = true; } } else { $fontattr = ''; if (is_array($arrItem["\x66\x6f\x6e\164\x73\x74\x79\x6c\145"])) { foreach ($arrItem["\146\x6f\156\164\x73\164\x79\x6c\145"] as $attr) { switch ($attr) { case "\x69\164\x61\154\151\x63": $fontattr .= "\x49"; break; case "\142\x6f\x6c\144": $fontattr .= "\102"; break; } } } switch ($arrItem["\141\154\x69\x67\156"]) { case "\162\x69\x67\x68\164": $align = "\122"; break; case "\143\x65\156\x74\x65\162": $align = "\103"; break; default: $align = "\114"; } $color = $arrPDF["\x74\145\x78\164\143\157\154\157\x72"] != '' ? $arrPDF["\x74\145\x78\164\143\157\154\157\x72"] : "\60\x30\60\60\60\x30"; if (!empty($arrItem["\164\145\170\164\x63\157\x6c\157\162"])) { $color = $arrItem["\x74\x65\170\x74\x63\157\154\157\162"]; } if (strlen($color) != 6) { if (strlen($color) == 3) { $color = substr($color, 0, 1) . substr($color, 0, 1) . substr($color, 1, 1) . substr($color, 1, 1) . substr($color, 2, 1) . substr($color, 2, 1); } else { $color = "\x30\x30\60\x30\60\60"; } } $r = hexdec(substr($color, 0, 2)); $g = hexdec(substr($color, 2, 2)); $b = hexdec(substr($color, 4, 2)); $pdf->SetTextColor($r, $g, $b); if ($fontattr === "\102\111") { $fontattr = "\x49\x42"; } $fontidx = $fontattr == '' ? "\122" : $fontattr; $pdf->SetFont(empty($customfont[$fontidx]) ? "\x68\x65\x6c\166\x65\164\x69\x63\141" : "\143\x75\x73\164\157\155\146\157\156\x74", $fontattr, $arrItem["\x66\157\x6e\x74\163\x69\172\145"]); $text = ''; $blank = $arrItem["\x6e\157\142\154\x61\156\x6b\x73"] ? '' : "\40"; foreach ($arrItem["\x74\x65\170\x74\151\164\x65\155\x73"] as $item) { if ($pdfdatei !== '') { if (!Self::checkBedingung($item, $arrPDF, $arrTokens)) { continue; } } if (substr($item["\x66\x65\154\144"], 0, 1) == "\42") { if (substr($item["\146\145\154\144"], 1, 1) == "\x2c" || substr($item["\x66\x65\x6c\144"], 1, 1) == "\x2e" || substr($item["\x66\x65\154\144"], 1, 1) == "\x3c") { $text = trim($text); } $text .= Controller::replaceInsertTags(trim($item["\x66\x65\x6c\144"], "\x22"), false) . $blank; } else { if ($pdfdatei !== '') { if (!empty(trim($item["\146\x65\x6c\144"]))) { $text .= "\43\43" . trim(Controller::replaceInsertTags(trim($item["\x66\x65\x6c\x64"]), false), "\43") . "\x23\x23" . $blank; } } else { $text .= Controller::replaceInsertTags(trim($item["\146\x65\x6c\x64"]), false) . $blank; } } } if ($text === '') { continue; } } while ($page != $arrItem["\160\141\147\x65"]) { Self::demoHinweis($pdf); if ($arrPDF["\x61\x6c\154\160\141\x67\x65\163"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\x70\x61\x67\145"]; } $pdf->AddPage(); if ($pages > 0) { if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pageheight = $arrPageDimensions["\150\153"]; $pagewidth = $arrPageDimensions["\167\x6b"]; } } while ($page != $arrItem["\160\x61\147\145"]) { Self::demoHinweis($pdf); if ($arrPDF["\141\154\x6c\160\x61\x67\145\163"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\160\141\x67\145"]; } if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7() && $page > 2) { break; } $pdf->AddPage(); if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pagewidth = $arrPageDimensions["\x77\153"]; } if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7() && $page > 2) { break; } $borderleft = $arrItem["\160\157\x73\x78\x79"][0] + $arrPDF["\x6f\146\x66\x73\x65\164"][0]; $borderright = 0 - $arrPDF["\x6f\x66\x66\163\145\164"][0]; if ($arrItem["\142\157\162\144\145\x72\162\151\147\x68\x74"] != '' && is_numeric($arrItem["\142\x6f\162\x64\x65\x72\x72\151\147\150\164"]) && $pagewidth - $arrItem["\x62\157\162\144\x65\162\162\151\147\x68\x74"] > $arrItem["\160\x6f\x73\170\171"][0]) { $borderright = $arrItem["\142\x6f\x72\144\x65\162\162\151\x67\x68\164"] - $arrPDF["\x6f\x66\x66\x73\x65\x74"][0]; } $pdf->SetMargins($borderleft, 0, $borderright); $pos[0] = $arrItem["\160\157\x73\170\171"][0] + $arrPDF["\x6f\x66\x66\163\145\x74"][0]; $pos[1] = $arrItem["\160\157\x73\x78\x79"][1] + $arrPDF["\157\146\146\x73\x65\x74"][1]; $pdf->SetXY($pos[0], $pos[1]); if (class_exists(\Haste\Util\StringUtil::class)) { $text = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags($text, $arrTokens); } else { $text = $hasteStringParser->recursiveReplaceTokensAndTags($text, $arrTokens); } switch ($arrItem["\164\x79\160\x65"]) { case "\161\x72\x63\x6f\144\145": if (strlen(trim($text)) > 0) { switch ($arrItem["\x62\141\162\x74\171\160\145"]) { case "\x44\101\x54\x41\x4d\101\124\x52\111\130": case "\x51\122\x43\x4f\104\x45\54\114": case "\121\x52\x43\117\x44\x45\x2c\x4d": case "\x51\x52\x43\x4f\x44\x45\54\121": case "\x51\122\103\117\104\x45\x2c\110": $style = array("\x62\157\x72\x64\x65\162" => false, "\x76\160\141\144\144\x69\156\147" => "\x61\165\x74\x6f", "\x68\160\x61\144\144\x69\x6e\147" => "\141\x75\164\x6f", "\146\x67\x63\x6f\154\x6f\x72" => array($r, $g, $b), "\142\x67\143\x6f\154\x6f\x72" => array(255, 255, 255), "\155\157\144\x75\x6c\x65\137\x77\x69\144\x74\x68" => $arrItem["\161\162\163\151\x7a\145"], "\155\157\144\165\154\x65\137\150\x65\x69\x67\150\164" => $arrItem["\161\x72\x73\151\172\145"]); $pdf->write2DBarcode(trim($text), $arrItem["\142\x61\162\164\171\160\x65"], $pos[0], $pos[1], 0, 0, $style, "\116"); break; case "\120\104\106\64\x31\67": $style = array("\x62\x6f\x72\144\145\162" => false, "\166\x70\141\x64\x64\x69\156\x67" => "\141\165\164\157", "\x68\x70\x61\x64\x64\151\x6e\147" => "\141\165\x74\157", "\x66\147\x63\x6f\154\x6f\162" => array($r, $g, $b), "\142\x67\x63\x6f\x6c\157\162" => array(255, 255, 255)); $pdf->write2DBarcode(trim($text), $arrItem["\142\x61\x72\164\x79\160\145"], $pos[0], $pos[1], 0, $arrItem["\x71\x72\163\151\x7a\x65"] * 10, $style, "\x4e"); break; default: $style = array("\x73\164\x72\145\164\x63\x68" => false, "\x66\x69\164\167\151\x64\164\150" => true, "\142\157\x72\144\x65\x72" => false, "\150\x70\141\x64\144\151\x6e\x67" => "\x61\x75\164\x6f", "\166\160\x61\x64\144\151\x6e\147" => "\141\x75\164\x6f", "\x66\147\143\157\x6c\157\x72" => array($r, $g, $b), "\142\147\143\157\154\157\162" => array(255, 255, 255), "\164\x65\x78\164" => false); $pdf->write1DBarcode(trim($text), $arrItem["\x62\x61\162\164\171\x70\x65"], $pos[0], $pos[1], '', $arrItem["\x71\162\x73\x69\x7a\145"] * 5, 0.3, $style, "\x4e"); break; } $hascontent = true; } break; case "\160\151\x63": break; default: switch ($arrItem["\x74\145\x78\164\x74\162\141\x6e\x73\146\x6f\162\x6d"]) { case "\x75\x70\160\145\x72\x63\x61\163\145": $text = mb_convert_case($text, MB_CASE_UPPER, "\x55\124\106\x2d\70"); break; case "\154\157\x77\145\162\143\141\163\x65": $text = mb_convert_case($text, MB_CASE_LOWER, "\125\124\x46\x2d\70"); break; case "\143\x61\x70\x69\x74\x61\x6c\x69\172\145": $text = mb_convert_case($text, MB_CASE_TITLE, "\x55\x54\x46\x2d\x38"); break; } $pdf->writeHTML(nl2br(trim($text)), false, false, true, false, $align); $hascontent = true; break; } } } if (Self::CDDAC68499E52601E4DBEB210CE9A1A7() === true || $page < 2) { while ($page < $pages && $arrPDF["\141\154\x6c\160\141\147\145\x73"] == 1) { Self::demoHinweis($pdf); $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } $pdf->AddPage(); $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } } Self::demoHinweis($pdf); $beUserLoggedIn = false; $beUserLoggedIn = false; $arrVersion = explode("\x2e", VERSION); if (sha1(session_id() . (!Config::get("\144\151\x73\141\142\x6c\145\x49\x70\103\150\145\x63\x6b") ? Environment::get("\151\x70") : '') . "\x42\105\x5f\125\123\105\x52\x5f\101\125\x54\110") == Input::cookie("\x42\x45\x5f\x55\x53\105\x52\x5f\101\125\x54\x48")) { $beUserLoggedIn = true; } else { if ($arrVersion[1] >= 6) { $beUserLoggedIn = System::getContainer()->get("\143\x6f\x6e\x74\141\x6f\x2e\163\x65\x63\x75\162\151\164\x79\56\x74\x6f\153\x65\x6e\137\143\x68\x65\x63\x6b\145\x72")->hasBackendUser() === true; } } if ($beUserLoggedIn && $arrPDF["\164\157\x6b\145\156\154\x69\163\164"] == 1) { $pdf->AddPage(); $pdf->SetTextColor(0, 0, 0); $pdf->SetFont($font, '', 11); $pdf->SetMargins(15, 10, 15); $pdf->SetAutoPageBreak(true, 10); $pdf->SetXY(15, 10); if ($pdfdatei !== '') { $text = "\101\x76\x61\x69\x6c\141\142\x6c\145\x20\x54\157\153\145\156\163\x3a\x3c\x62\x72\76\x3c\142\162\76\74\x74\141\142\154\145\x3e"; $arrTokens["\160\144\146\x6e\x63\137\x61\x74\x74\x61\143\150\155\145\x6e\164"] = $pdfdatei; $arrTokens["\x70\x64\146\x6e\x63\x5f\x64\x6f\143\x75\155\x65\x6e\164"] = basename($pdfdatei); foreach ($arrTokens as $token => $content) { $content = trim($content); if (mb_strlen($content) > 200) { $content = mb_substr($content, 0, 196) . "\40\x2e\x2e\x2e"; } $c = preg_replace("\x7e\133\136\x61\x2d\172\x41\x2d\132\x30\55\71\134\55\x2b\x3d\137\134\100\134\56\x3a\73\x2c\x5c\x7b\x5c\x7d\134\x5b\134\135\x5c\x28\134\51\134\x5c\57\42\x27\134\156\303\244\303\xb6\xc3\274\303\x84\xc3\x96\303\x9c\xc3\x9f\342\x80\246\303\240\303\xa1\xc3\xa2\xc3\251\xc3\xa8\303\264\xc3\252\43\40\135\176\x69", '', $content); if ($c !== $content) { continue; } if (mb_stripos($token, "\160\x61\163\x73\167\x6f\162\144") != false || mb_stripos($token, "\160\x61\163\163\x77\x6f\x72\x74")) { continue; } $text .= "\74\x74\162\76\x3c\164\x64\x3e\43\x23" . $token . "\x23\43\74\57\164\144\x3e\x3c\x74\x64\x3e" . nl2br($content) . "\74\x2f\x74\x64\76\74\x2f\x74\x72\76"; } $text .= "\74\57\x74\141\x62\x6c\x65\x3e"; } else { $text = "\x41\x76\141\151\x6c\x61\x62\x6c\x65\40\124\x6f\153\145\x6e\x73\x3a\x3c\142\162\76\x3c\x62\x72\x3e\x3c\x62\162\76\x3c\x62\x72\76" . "\x54\150\x65\x20\141\166\x61\151\x6c\141\142\154\x65\x20\123\x69\x6d\160\154\x65\124\157\153\145\x6e\x73\x20\x72\x65\x73\x75\154\164\x73\40\x66\x72\157\155\x20\x74\x68\145\x20\143\x61\x6c\154\x20\157\146\x20\x74\x68\145\x20\156\x6f\164\x69\146\x69\143\141\164\x69\157\156\56\40\x49\x6e\40\164\150\145\x20" . "\164\145\x73\x74\40\x50\104\106\x20\x69\x74\x20\151\163\40\x6e\x6f\164\x20\160\157\x73\x73\151\142\154\145\40\x74\x6f\x20\x64\x65\x74\145\x63\164\40\x74\x68\x65\40\162\145\141\x6c\x20\x69\x6e\160\165\164\x20\164\157\x6b\x65\x6e\x73\56\40" . "\131\x6f\x75\40\167\151\x6c\154\x20\146\151\x6e\x64\40\x74\x68\x65\x20\164\157\153\x65\x6e\x20\154\151\163\164\x20\x6f\x6e\x6c\171\x20\151\x6e\x20\164\x68\145\40\x6f\162\151\x67\x69\156\141\x6c\x20\x6e\157\164\x69\146\151\143\x61\164\x69\x6f\156\56\x3c\x62\162\x3e\74\x62\x72\x3e" . "\74\163\164\162\157\x6e\x67\76\123\x74\141\x79\40\x6c\x6f\147\147\x65\144\x20\x69\156\40\x69\x6e\40\x74\150\145\x20\142\141\143\x6b\145\156\x64\x3c\57\163\164\x72\157\x6e\x67\76\x20\141\x6e\144\x20\164\150\145\156\40\163\x65\156\x64\x20\164\150\x65\40\146\157\x72\155\40\x69\x6e\40\x74\x68\x65\x20" . "\x66\x72\157\156\164\x65\x6e\144\x2e\40\131\x6f\165\x20\163\x68\x6f\165\x6c\x64\x20\x74\x68\145\156\x20\x66\x69\156\x64\x20\x61\40\x50\x44\x46\40\167\151\164\x68\40\164\x68\145\40\x74\x6f\153\145\x6e\x20\x6c\151\163\164\x20\x69\x6e\40\164\x68\x65\x20\155\x61\x69\154\40\141\164\164\x61\143\x68\155\145\x6e\164\56\74\142\162\76\74\142\x72\76" . "\x59\x6f\165\40\143\141\x6e\40\144\x69\163\x61\x62\x6c\145\40\164\150\x65\x20\x74\x6f\x6b\x65\156\40\x6c\x69\163\164\40\x70\141\x67\145\40\x69\156\40\164\x68\145\40\x4e\157\164\151\146\x69\x63\141\164\x69\157\x6e\x20\x43\145\x6e\x74\x65\162\40\x69\156\x20\164\150\x65\40\160\162\157\x70\x65\162\x74\x69\145\163\x20\x6f\146\x20\164\x68\145\x20\x67\141\164\145\x77\141\171\56" . "\x3c\x62\x72\x3e\x3c\x62\x72\76\74\142\x72\76\74\142\162\x3e" . "\104\151\145\x20\x76\x65\x72\x66\303\274\147\x62\141\162\145\x6e\40\123\151\x6d\x70\154\145\124\157\153\145\156\163\40\145\x72\147\x65\142\145\156\40\163\151\143\x68\40\141\165\163\x20\144\x65\155\x20\101\165\146\162\x75\x66\40\x64\x65\x72\40\x42\x65\x6e\141\x63\150\162\151\x63\150\x74\x69\x67\x75\x6e\x67\56\40" . "\111\155\x20\x54\x65\163\164\x2d\x50\x44\x46\40\151\x73\164\40\x65\x73\x20\x6e\151\x63\x68\x74\x20\155\303\266\x67\x6c\x69\143\x68\x20\144\151\145\x20\145\143\150\164\145\x6e\x20\x45\x69\156\x67\x61\x6e\147\163\55\124\x6f\153\145\156\x20\172\x75\x20\145\x72\x6d\151\x74\x74\145\x6c\156\x2c\x20\x64\141\150\145\x72\40\x66\151\156\x64\145\x6e\x20" . "\123\151\145\40\x64\x69\x65\x20\114\x69\163\164\145\x20\x6e\165\162\40\151\156\40\144\145\162\40\x6f\x72\151\147\x69\156\141\154\x65\x6e\x20\102\145\156\x61\143\x68\x72\x69\143\150\164\x69\x67\165\x6e\x67\56\x3c\142\x72\x3e\74\142\x72\x3e" . "\x3c\x73\164\162\x6f\x6e\147\76\x42\154\x65\151\142\x65\x6e\40\123\151\x65\40\151\x6d\40\x42\141\x63\153\145\x6e\x64\40\x65\151\156\147\145\x6c\157\147\x67\164\74\x2f\x73\164\162\157\x6e\x67\x3e\40\165\156\144\x20\x73\143\150\x69\143\153\145\156\x20\x64\141\156\x6e\x20\151\155\40" . "\x46\x72\157\156\x74\145\x6e\144\40\x64\141\163\x20\x46\157\x72\x6d\165\154\x61\x72\x20\141\x62\56\40\x49\156\x20\144\x65\x6d\40\x4d\141\x69\x6c\141\x6e\x68\x61\156\x67\40\x73\x6f\x6c\x6c\164\145\x6e\40\x53\151\x65\x20\144\141\156\x6e\x20\x65\151\156\x20\x50\x44\x46\40\x6d\x69\164\40\141\156\x67\145\150\xc3\244\156\x67\164\145\162\40" . "\x54\x6f\153\145\x6e\154\x69\163\x74\x65\40\146\151\156\x64\x65\x6e\x2e\x3c\142\x72\x3e\x3c\x62\x72\x3e" . "\104\151\x65\40\x54\157\x6b\x65\x6e\154\x69\x73\164\x65\x20\x6b\303\266\156\x6e\145\156\40\123\151\x65\x20\x69\155\x20\116\x6f\x74\x69\x66\x69\x63\141\164\151\157\156\x20\103\x65\156\x74\x65\x72\40\151\x6e\40\144\x65\x6e\40\x45\151\x67\145\156\x73\143\x68\141\x66\164\x65\156\40\x64\x65\x73\x20\x47\141\164\x65\167\141\171\163\x20\141\142\x73\143\x68\x61\154\x74\x65\156\x2e"; } $pdf->writeHTML($text, false, false, true, false, "\x4c"); } $pdf->lastPage(); if ($arrPDF["\160\x72\x6f\164\x65\x63\164"] == 1) { if (in_array("\x70\162\x69\x6e\x74\x2d\150\x69\147\150", $arrPDF["\x70\162\157\164\145\x63\164\146\154\x61\x67\163"]) && !in_array("\x70\162\x69\x6e\x74", $arrPDF["\x70\x72\x6f\x74\x65\x63\x74\x66\x6c\x61\147\163"])) { $arrPDF["\x70\162\157\164\145\143\164\x66\154\141\147\163"][] = "\160\x72\x69\x6e\x74"; } $opass = $arrPDF["\x6f\x70\x65\x6e\x70\x61\x73\163\167\157\162\144"]; if ($opass == '') { $pass = $arrPDF["\x70\141\x73\163\x77\157\162\144"]; if ($pass == '') { $pass = null; } $pdf->SetProtection(array_diff(Self::$arrProtectflags, $arrPDF["\x70\x72\157\164\145\143\x74\x66\154\141\x67\163"]), '', $pass, 1, NULL); } else { $pdf->SetProtection(Self::$arrProtectflags, $opass, $opass, 1, NULL); } } $result = true; if ($pdfdatei !== '') { if ($hascontent) { $pdf->Output(TL_ROOT . "\x2f" . $pdfdatei, "\106"); $_SESSION["\x70\x64\x66\156\143"]["\x70\144\146\x64\x6f\x63\x75\155\145\x6e\x74"] = $pdfdatei; } else { @unlink(TL_ROOT . "\57" . $pdfdatei); $result = false; } } else { $pdf->Output($arrPDF["\147\141\164\145\x74\x69\164\154\145"] . "\56\160\144\146", "\104"); } unset($pdf); return $result; } protected static function checkBedingung($item, $arrPDF, $arrTokens) { $bedingung = html_entity_decode($item["\142\x65\144\151\156\147\165\x6e\147"]); if (!empty($bedingung)) { $arrSplitG = explode("\75\x3d", $bedingung); $arrSplitU = explode("\41\75", $bedingung); if (count($arrSplitG) > 1) { $arrSplitG[0] = trim($arrSplitG[0], "\43"); $arrSplitG[1] = trim($arrSplitG[1], "\42"); if (!isset($arrTokens[$arrSplitG[0]]) || strcmp(strtolower($arrSplitG[1]), strtolower($arrTokens[$arrSplitG[0]])) != 0) { return false; } } else { if (count($arrSplitU) > 1) { $arrSplitU[0] = trim($arrSplitU[0], "\43"); $arrSplitU[1] = trim($arrSplitU[1], "\42"); if (!isset($arrTokens[$arrSplitU[0]]) || strcmp(strtolower($arrSplitU[1]), strtolower($arrTokens[$arrSplitU[0]])) == 0) { return false; } } else { if (!isset($arrTokens[$bedingung]) || empty($arrTokens[$bedingung])) { return false; } } } } return true; } protected static function demoHinweis($pdf) { if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7()) { $x = $pdf->GetX(); $y = $pdf->GetY(); $arrPageDimensions = $pdf->getPageDimensions(); $pdf->SetXY(15, $arrPageDimensions["\x68\153"] - 14); $pdf->writeHTML("\74\163\x70\x61\x6e\x20\x73\x74\171\x6c\145\75\x22\x63\x6f\x6c\157\x72\x3a\43\146\x66\x30\60\60\60\x3b\142\x61\x63\x6b\147\162\157\165\156\x64\x2d\x63\x6f\154\157\162\x3a\x23\x66\146\x65\x65\x65\145\x3b\x66\x6f\156\x74\55\163\151\x7a\x65\72\71\x70\x78\73\x66\x6f\x6e\164\55\x77\145\x69\147\x68\164\72\x62\x6f\154\x64\42\76\46\x6e\142\163\x70\73\x26\x6e\142\x73\160\73\75\75\x20\104\105\x4d\x4f\x20\x76\x65\x72\163\151\x6f\156\40\157\146\40\x64\x6f\55\x77\150\x69\x6c\145\57\143\157\156\x74\x61\x6f\55\x70\144\x66\55\156\x63\55\x61\x74\x74\x61\x63\150\155\145\x6e\164\55\x62\165\x6e\x64\154\145\40\x2d\x20\x6d\141\170\x69\x6d\165\155\x20\x32\40\x70\141\147\145\163\40\55\x20\x42\x75\x79\x20\x4c\151\143\145\x6e\x63\145\40\x6b\145\x79\41\x20\75\x3d\x26\156\142\x73\x70\73\46\156\142\x73\160\x3b\74\57\x73\160\141\156\76", false, true, true, false, "\x4c"); $pdf->SetXY($x, $y); } } protected static function CDDAC68499E52601E4DBEB210CE9A1A7() { $k = str_split(Config::get(PRODUCT_NC . LIZENZ), strlen(vNZpjXztEVKIiq)); $p = eval("\162\145\x74\165\162\156\40\x73\165\142\163\x74\x72\x28\x22\x30\x30\x30\x30\x22\56\x73\x74\x72\164\x6f\x75\160\160\145\162\50\144\145\143\x68\145\x78\x28\x63\x72\143\x33\62\50\x6d\x64\65\50\42" . PRODUCT_NC . "\72\x22\x2e\163\165\142\x73\164\162\x28\126\x45\122\x53\x49\117\116\x2c\60\54\61\x29\x2e\42\72" . $k[0] . "\x22\x29\x29\x29\x29\54\55\x34\x29\73"); return !empty($p) && isset($k[1]) && $p === $k[1]; } public static function encrypt($varValue, $dc = null) { if (empty($varValue)) { return ''; } mt_srand(6152); $out = array(); for ($x = 0, $l = strlen($varValue); $x < $l; $x++) { $out[$x] = ord($varValue[$x]) * 3 + mt_rand(350, 16000); } mt_srand(); return implode("\56", $out); } public static function decrypt($varValue, $dc = null) { if (empty($varValue)) { return ''; } mt_srand(6152); $out = array(); $blocks = explode("\56", $varValue); foreach ($blocks as $block) { $ord = (intval($block) - mt_rand(350, 16000)) / 3; $out[] = chr($ord); } mt_srand(); return implode('', $out); } protected static function getimagetype($src) { $file = TL_ROOT . "\57" . $src; if (method_exists(File::class, "\143\x72\x65\141\x74\145\x49\146\104\145\146\145\x72\x72\145\144") && is_callable(File::class, "\143\162\x65\x61\x74\145\111\146\x44\x65\146\x65\162\162\145\144")) { (new File($src))->createIfDeferred(); } if (!file_exists($file)) { return ''; } $size = getimagesize($file); if ($size[2] == IMAGETYPE_GIF) { return "\107\111\106"; } else { if ($size[2] == IMAGETYPE_JPEG) { return "\x4a\x50\x45\107"; } else { if ($size[2] == IMAGETYPE_PNG) { return "\120\x4e\x47"; } else { return ''; } } } } }
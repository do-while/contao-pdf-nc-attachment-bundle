<?php
 namespace Softleister\Pdfncattachment; use Contao\Config; use Contao\StringUtil; use Contao\Database; use Contao\FilesModel; use Contao\System; use Contao\Image\ResizeConfiguration; use Contao\Controller; use Contao\Environment; use Contao\Input; use Contao\File; use Symfony\Component\VarDumper\VarDumper; define("\x4c\x49\x5a\105\x4e\x5a", "\114\151\143\145\x6e\x63\145"); define("\x50\122\117\x44\x55\103\x54\137\x4e\x43", "\160\x64\146\x6e\x63\x61\x74\164\141\143\150\x6d\145\x6e\164"); define("\166\116\132\x70\152\130\172\164\105\x56\113\x49\x69\161", "\x31\x32\x33\x34\x39\65\66\67\70\71\x30\61\x32\70\63\x34\x35\66\x37"); define("\x49\x4d\x47\x44\x55\x4d\x4d\x59", "\x64\141\164\x61\x3a\x69\x6d\x61\x67\145\x2f\160\x6e\147\x3b\142\141\163\145\x36\64\54\151\126\102\117\122\x77\x30\113\107\x67\157\101\101\101\101\116\x53\x55\150\x45\x55\147\x41\101\101\112\x59\101\x41\101\101\61\103\101\111\101\101\101\101\x73\x36\64\130\61\x41\x41\101\x41\x47\x58\122\106\127\x48\x52\124\x62\62\x5a\x30\x64\62\x46\171\132\x51\102\102\132\x47\x39\x69\132\123\x42\x4a\x62\127\x46\x6e\x5a\126\x4a\154\x59\127\x52\65\143\x63\x6c\154\x50\101\x41\101\x43\60\170\112\x52\105\106\x55\145\x4e\162\x73\130\107\x6c\x58\62\x7a\157\x51\152\x52\172\x6a\x37\101\x74\162\x6f\146\124\57\x2f\66\x64\x2b\67\x6d\x76\124\121\157\x44\x73\151\121\x4f\x32\63\x78\61\116\64\x69\146\x4a\123\x2b\124\105\x77\117\x73\65\x31\x71\x45\x63\103\111\x6f\x6b\x7a\x35\x33\154\x7a\155\150\x53\x39\57\166\x33\67\x37\126\x71\57\x4d\63\x44\161\x55\122\x51\121\x56\x69\x4e\x43\163\x4a\x71\x56\102\102\127\105\106\141\x6a\x67\162\101\x61\x46\x59\x54\x56\x71\x43\x43\163\x49\113\170\x47\102\x57\x45\x31\113\x67\151\x72\125\x55\106\131\121\x56\x69\x4e\x43\x73\x4a\161\x56\102\102\127\x34\71\152\x68\161\162\x38\x49\x49\146\102\x50\x2b\63\x74\x45\167\63\150\120\x79\162\124\143\x2b\121\130\x65\142\162\146\x43\x77\144\x56\157\x68\x53\x4b\x4c\x35\113\62\117\170\x65\x56\x53\113\x57\166\x4b\162\x59\x58\x38\x77\130\67\110\x41\x34\71\166\117\x52\x51\160\x61\122\102\x75\x74\x39\163\x77\x44\x4f\120\x6c\x4d\x61\130\165\117\x4f\x37\132\155\x66\x46\x32\x33\57\x64\x54\x6a\x78\x76\112\70\x33\x6d\x59\156\x33\x76\105\x49\x41\150\x65\x58\61\71\106\170\x73\x48\x71\162\153\x73\x37\x57\147\116\101\132\167\x34\x43\157\x65\x79\x49\x52\x54\172\x50\105\x38\x36\160\x44\163\x5a\170\110\x4b\x7a\x73\142\67\145\x62\172\145\142\x74\x39\x58\x57\x39\127\x75\107\x37\x65\164\132\107\161\64\x57\116\x76\x47\141\172\60\127\x69\x63\145\122\x37\x4e\104\70\120\x38\116\124\x45\102\x69\x35\103\147\124\x6f\x50\x50\x71\x64\x66\x50\x39\162\x69\64\161\156\131\x38\x2f\x76\66\x39\x57\x69\x35\152\143\127\102\161\164\71\x65\67\166\142\70\x33\x44\x76\x48\x72\170\x34\x2f\x67\x37\123\61\x31\x61\x61\170\67\71\x2b\61\x62\x73\71\153\115\115\172\x44\x41\x34\160\120\x6e\x35\x2b\146\x78\x57\113\x54\102\x48\x49\x58\x68\x2b\144\x58\126\71\145\x30\x74\132\107\143\x6a\131\151\x6a\x54\x36\x4d\145\120\x31\x2b\x31\127\126\x52\157\x73\70\x75\130\165\162\156\71\53\110\150\x31\162\x69\x45\x4a\x61\61\x57\167\66\130\x53\60\127\151\57\154\143\x4d\x79\102\x6c\121\x46\x62\x34\x49\155\60\124\157\164\x76\x76\144\67\160\144\x69\x47\x74\156\x72\170\153\110\150\150\x36\115\146\166\x34\x30\144\x4b\67\x6f\101\x41\123\115\x43\x78\142\105\130\x71\x59\x6a\170\141\x73\x71\150\113\153\x37\x30\x54\163\x7a\144\x42\x79\162\167\x79\x79\141\x37\130\x59\164\101\x77\117\x73\x69\143\x64\x57\144\60\x6e\x61\163\146\x33\x44\x51\x43\x49\167\141\x4b\151\x6b\x67\143\x42\x38\120\x75\70\x4e\x68\x30\143\x62\x33\71\x62\63\156\x78\64\146\x63\125\64\x38\152\160\116\164\x7a\142\x75\152\x79\165\57\172\66\130\x51\x35\x6e\x2b\x4d\164\x46\x31\144\130\70\x43\x4d\x35\62\153\115\x4c\x5a\x67\x69\x32\x57\120\x68\x34\112\172\157\x44\112\53\x6c\x76\x4e\x72\x56\x73\105\x34\124\105\131\x63\110\x69\x39\107\101\147\x39\x34\x4c\125\125\160\131\x53\x41\155\x63\x41\x75\x6b\x66\163\101\x76\156\x43\x37\x45\142\57\x2f\x4d\120\107\x35\61\x68\67\x59\x77\x5a\155\x39\x76\x4c\171\x2b\x2b\x64\x50\x43\x68\x50\117\170\57\x48\105\153\156\x63\x53\125\156\x7a\60\104\x42\x6e\151\x38\x39\146\162\66\x46\x44\x41\x73\116\63\111\x39\x7a\143\x5a\117\x47\107\x4c\122\x53\x71\66\x42\57\107\142\x7a\122\x35\107\111\67\114\163\x42\101\131\167\x4c\x42\x67\154\x39\103\142\153\x72\53\x52\x54\167\111\x66\x56\x36\x35\x76\x31\107\151\165\70\x5a\x55\x76\147\x66\x52\154\x70\x43\122\161\102\x2b\x43\123\x44\x50\x34\x4a\x69\x43\x70\x56\x31\x48\x44\x77\x68\115\x61\x62\x54\x6c\126\121\111\151\x44\x75\x54\106\167\151\102\x6a\x65\x44\123\125\64\53\x52\57\x67\x34\x45\x71\x75\x58\171\70\143\70\146\x4f\160\65\117\x6a\155\x71\x53\x5a\114\x55\67\156\127\141\x72\126\127\143\x6e\107\x55\126\121\x49\120\x69\x41\126\60\x6c\x77\116\x4c\x63\155\101\x78\67\x69\57\144\130\x4e\x54\x53\107\x4b\x55\157\x43\x6d\66\x6b\x2f\153\x6c\x71\64\x55\x46\x41\x35\71\x48\60\53\x62\164\102\165\64\125\x49\x6a\x31\122\x44\x37\x47\123\x7a\106\x46\x7a\112\x6b\101\152\x67\x4d\x79\115\x72\171\x38\x6a\103\x79\131\x45\x66\104\104\x32\x63\x61\x50\x6a\x2b\x54\153\106\146\125\x69\150\x6c\171\166\x39\x34\146\104\57\155\101\x41\x38\101\x53\x48\143\103\156\x42\x62\x68\147\117\172\x38\71\x68\66\171\71\x50\x54\64\106\x4f\x54\64\101\x69\121\x69\x4d\111\104\155\152\x64\x51\x51\x57\103\x75\107\x36\x2f\x66\x6f\126\x2b\x68\105\127\x63\x6b\x30\170\x32\102\x43\71\145\120\x6f\122\x43\127\153\102\166\x4d\x45\x6a\53\x43\x57\112\71\113\x79\x4d\x51\x59\157\130\x6c\x59\166\107\155\x5a\x79\x59\107\x2b\x63\113\166\x6d\101\115\x35\x41\x67\115\142\121\x35\170\116\112\x6a\x69\62\x6f\x2b\x4d\x48\x59\147\x4a\66\x44\113\x6f\x5a\70\121\x68\x44\x64\x53\107\101\x4f\162\x79\x34\121\104\x6f\x42\172\x32\153\101\x41\x45\x2b\x37\x6d\x45\x35\x62\67\x62\x61\x4e\x41\156\x45\x65\x46\122\141\x4d\114\x2f\x46\x44\x4f\x61\126\x67\x64\x71\142\153\152\x67\x78\x68\114\x61\x30\147\147\x41\121\114\x4b\115\x61\x43\x68\x6e\x44\172\171\x56\x76\127\144\x68\104\x51\145\x72\x47\x67\x5a\61\131\x77\70\x32\x52\155\160\160\x6f\x43\x2b\126\x4b\153\x73\x48\x59\x32\152\122\x54\103\x30\124\x55\x41\170\x32\120\70\x73\106\110\x71\111\x54\x6b\x36\131\x67\113\x41\x33\x45\x32\111\71\x67\x4e\163\145\142\62\62\152\111\152\122\x55\x61\x4e\x4d\117\x6b\x50\160\111\x4b\x57\64\x58\x72\x77\165\124\x41\61\157\107\x61\x66\110\60\x34\114\114\x71\x4b\70\x30\155\x6b\62\156\145\106\101\x6b\111\151\120\x54\142\124\x58\65\x41\131\53\x41\x7a\63\124\61\171\115\x65\107\141\114\115\x6d\167\151\161\154\67\x66\161\x42\x34\x55\147\131\166\167\x4f\145\115\x49\162\x67\x61\132\x48\x64\x38\x7a\x46\x77\x68\x6e\x61\63\x69\60\102\x34\57\x65\x55\x4c\65\x32\x31\x2f\102\65\x30\65\x6b\x39\125\x51\123\x69\x66\62\x55\153\103\x67\147\x68\x74\x4a\x42\153\x49\x56\x56\x38\124\114\165\x56\162\x76\x73\x49\171\61\x55\121\124\145\101\123\62\x4a\x34\x53\143\x64\x63\x6c\63\64\x54\x4b\x67\x49\156\125\x48\x5a\x46\x4c\105\113\112\154\x49\x33\105\x73\145\x45\103\161\x72\x35\145\53\170\103\x45\x66\53\163\x41\112\101\117\146\x48\102\x78\x67\121\x65\105\125\x75\113\x68\126\116\x33\x36\141\x35\x4b\x4b\x6e\122\125\161\156\x42\x35\x4f\x7a\114\x42\x43\x43\x48\62\162\x6d\101\x35\53\141\x43\x51\x6f\152\66\125\x58\x6e\x63\71\155\161\166\156\151\x52\144\x43\102\165\x75\x4e\60\x65\x7a\x31\x6a\125\x34\151\126\143\x73\x66\143\71\102\x79\x2b\x2f\126\130\x58\114\x66\x49\x51\162\144\141\132\x34\154\x63\117\104\x75\x42\x39\x66\x6e\156\112\x57\x70\166\x30\x64\130\71\x44\125\x69\106\114\x61\57\x2f\x46\105\x68\x6c\x64\104\x45\64\120\x31\170\144\x7a\x55\x62\x77\111\150\x58\x58\162\71\x53\117\157\104\132\x54\x44\153\x44\x6a\143\126\66\x66\x66\150\70\x66\172\155\x6b\62\166\60\x66\102\x56\110\x79\64\x74\x72\x4a\x39\x62\x71\x61\107\x44\112\143\x54\144\x4b\x71\150\145\64\121\x6e\112\x4c\x74\x54\122\171\x66\125\124\x71\142\x47\172\x5a\x41\151\170\63\x6c\x6d\152\64\142\150\x75\130\x48\x6b\x42\x7a\167\141\126\x69\101\116\153\x4a\x4a\x4e\66\115\x78\101\145\x42\x53\x48\151\x6c\x76\105\70\114\x53\101\x6e\116\x78\114\123\x45\x44\125\x48\111\x41\x53\117\147\126\x65\171\x57\104\164\142\131\x62\x4b\125\62\x43\172\165\111\131\64\155\x67\61\x54\x4a\103\x34\114\x51\62\155\x72\132\x35\65\x55\116\x49\123\171\147\60\x55\x44\x38\131\101\65\107\153\125\x39\103\x57\x4f\x76\x33\x64\x78\x4f\x43\x51\x4a\125\x73\x52\x41\131\132\x46\145\x55\x79\121\165\x4b\170\x31\154\x57\150\112\x6d\x76\170\x38\121\123\x34\115\x69\x4c\x6f\142\x32\x2b\x31\63\x53\60\x51\156\121\x53\x6b\x42\161\x2f\x48\151\132\123\170\x4b\x46\60\x64\66\x42\103\x53\x56\x62\151\x75\132\131\x6e\x53\x68\166\x66\156\114\x2f\x55\x38\110\164\x4d\x42\x72\x4b\156\x41\x78\144\x55\126\66\x46\x4c\x36\132\144\115\x70\x56\x67\152\113\101\116\126\121\x32\x63\x52\155\164\121\162\x32\x4e\145\147\x56\x47\120\142\x2b\143\157\x50\x35\117\161\x55\x54\x52\x52\x58\x57\143\x54\x67\144\126\111\x6b\x4d\101\x47\166\107\x76\x43\x6d\x4b\x6f\x45\x6e\x77\x67\122\x51\163\x6c\141\103\114\110\110\70\x37\110\113\x71\x61\161\x7a\162\x41\111\112\107\66\65\122\145\120\x6f\113\53\x42\156\143\126\x6b\x56\x66\116\124\66\x71\166\62\x51\153\x67\64\x44\114\x63\x73\x62\x31\x43\x54\x68\150\x56\x54\x4f\66\x35\x68\x51\x74\171\145\x39\112\x59\167\x51\x56\x58\124\64\121\x6f\113\130\121\x70\x6d\x56\x57\123\x77\112\152\171\153\x75\67\x63\x59\160\166\127\x74\124\x6b\x66\x4e\x4a\143\x68\62\153\x59\x53\163\x56\161\x6b\121\61\x6f\x70\156\x70\x55\x39\x50\124\x39\117\130\x6c\64\120\131\x51\x44\117\x51\126\70\102\151\x41\x6f\166\x73\x2f\166\x4d\132\113\x61\x77\161\x6c\x42\102\161\x45\x67\143\106\x6c\x58\64\x56\153\x6f\x55\x44\x6a\101\60\x66\x57\163\167\121\x46\x72\x32\x64\x68\x34\x6b\x62\102\122\121\x47\124\x45\62\57\x59\106\116\x74\66\125\x75\61\x35\x4e\x64\x78\x46\x6f\x76\106\150\x31\110\105\x44\x78\x37\154\x33\x56\122\x49\125\161\157\123\70\x64\x6a\x34\104\116\131\117\x4e\x77\126\x33\x35\53\170\152\x6c\x54\x30\x4e\121\63\x71\x67\x55\150\113\x2b\x59\x55\67\127\x49\x58\x47\x47\112\112\53\105\x46\x53\x62\x7a\x48\x44\x37\x4d\150\61\60\160\x35\x41\123\x49\121\165\116\x64\x48\107\154\163\113\145\x43\132\141\153\62\114\x70\x62\141\x56\x70\x64\110\57\146\x4a\x33\152\x63\103\x32\104\142\65\x68\164\x69\x76\x52\163\x30\x33\x43\x50\x52\x74\x69\147\62\x34\x4e\62\x32\x37\152\x69\170\x32\x52\x6b\105\130\104\160\122\161\x55\107\126\x42\131\155\x61\63\152\117\x33\x52\155\x4d\101\x49\x6b\106\x50\70\160\153\x6f\x5a\122\x66\67\53\x38\x37\x68\x63\162\143\x4f\x69\71\x7a\123\x30\126\x51\x63\103\113\64\67\167\153\x69\x76\153\67\104\71\71\x58\x72\x62\63\x68\144\x67\x72\104\147\x34\161\101\153\170\157\x55\101\130\x79\x41\x2f\x6a\105\141\x57\x56\112\x43\x61\130\x37\x5a\142\153\x30\x62\112\66\161\103\x54\x61\120\x72\103\171\132\116\116\121\62\160\x70\61\x44\101\106\143\131\x67\105\110\132\x54\x64\60\x54\61\x52\112\x55\x4f\157\x6c\x70\144\151\x33\121\145\x45\x36\165\156\147\122\x65\x73\106\165\x51\x7a\x57\x6d\x65\166\160\x59\x4a\167\152\160\x71\x49\x6c\x5a\112\x68\115\163\161\x48\x6c\x63\153\x6b\x6c\141\x63\126\161\x75\143\x41\x72\71\107\112\x6d\112\120\x4e\71\115\164\155\60\x6b\x77\x7a\x50\x7a\x37\x76\x39\x76\x6a\104\x69\x74\x4f\70\57\x50\172\x34\x47\160\172\x58\106\x66\x44\x36\105\124\x50\105\150\x45\124\x58\x79\x51\x63\x72\x47\x6c\121\x4b\x78\x6e\x6f\112\x45\102\x67\x61\125\145\165\x64\121\151\x49\x36\104\143\115\107\125\x65\x37\62\145\157\x31\x38\x2f\163\x64\x6f\x5a\161\157\104\163\x38\172\x77\x6e\x73\x39\132\170\x63\160\172\120\142\x4d\x64\61\171\162\x4b\x2f\156\125\x61\64\114\x6f\x78\x4d\x52\x59\151\x61\x5a\122\124\144\106\106\x49\x45\150\145\163\x58\x38\155\x72\x70\122\x41\x58\146\x58\124\57\160\170\124\154\127\x4f\x30\70\x76\x68\61\x4c\x38\x33\x74\102\111\x78\131\x59\144\x71\x54\105\53\x6b\x65\66\x57\x42\113\107\x53\163\x2b\x66\x48\x4f\x53\x47\x35\x54\103\x48\x38\157\x41\122\155\122\x57\x59\x76\x78\171\152\x33\x4b\60\153\121\157\105\x79\x72\x52\110\x61\102\167\x33\146\62\x56\123\x52\x31\x35\x75\172\154\170\x52\x36\131\124\66\x53\61\x4a\x64\57\x61\x55\57\x30\x61\157\121\x35\160\x59\x70\162\122\x55\x46\61\116\x6c\153\x61\152\x50\x51\165\x6c\111\x4a\x54\142\150\60\x47\x5a\x69\143\x77\x48\x44\111\117\x67\x74\115\124\103\x66\126\x45\x2b\161\162\x68\x78\141\157\155\x59\x7a\121\x59\130\x46\60\x6c\155\151\x77\151\x67\144\155\x33\x78\122\x52\126\x65\102\67\153\71\x6d\x4a\x76\x7a\x2f\x63\x6c\x6e\x47\127\114\65\x45\112\64\x42\x51\x74\143\116\x74\71\x76\x55\x43\121\x31\132\107\x6f\62\163\x65\x39\x65\x35\x77\155\x6c\x75\64\130\x6d\63\71\x2f\x66\x55\143\x4a\x78\114\170\x4c\110\122\156\61\53\x2f\160\160\117\112\x71\151\x4a\111\x54\x69\x67\151\104\157\144\161\x49\170\63\167\x41\60\x4e\x35\145\130\157\x79\116\x68\x6f\x2f\120\107\103\x56\146\x72\53\146\150\x53\x4a\x44\152\157\x54\x31\x61\x54\167\x2b\63\x64\130\57\142\x79\104\60\120\x4c\x64\145\x33\x36\x5a\62\165\x38\157\x4b\124\x6e\x71\x35\x4f\x61\164\115\112\123\x57\165\x47\131\60\x30\132\121\152\71\x4c\x61\x32\152\x33\x44\147\x4d\x67\112\153\156\x57\103\x74\145\125\122\x75\106\117\x56\x55\x64\104\111\x66\x67\161\x37\x35\151\67\161\170\x41\152\66\x50\122\x71\x2b\57\104\x46\x6c\x50\x76\x6a\122\105\x79\x4a\x35\x4d\112\x49\x4d\124\x4d\172\x79\111\x31\x37\71\x44\53\112\114\x31\143\141\166\122\x79\165\141\x35\127\112\x42\104\x43\x6d\64\127\66\116\x73\104\63\x77\x72\x2f\126\x39\160\61\153\53\x52\102\x36\70\x74\115\117\166\164\64\x46\x73\160\x55\116\161\115\61\62\x4f\x7a\132\x45\x47\x42\101\x38\170\x2b\130\126\x46\x62\112\x4d\152\130\x7a\x42\x51\64\x62\x68\70\x33\147\70\x6e\60\64\x37\166\x52\x37\60\x6a\x37\x75\105\70\103\x49\x56\x2b\65\132\114\67\161\154\115\x4a\141\x57\127\164\x37\65\64\x49\x36\x57\62\102\143\x30\x58\146\x76\166\155\67\x71\x34\63\107\117\x43\110\x63\151\x42\x55\x6b\x37\102\111\x66\x6c\67\x45\155\125\66\x6a\x78\104\x4f\102\x2b\106\x46\112\62\164\x34\105\x67\x38\x42\x6f\x69\x57\x44\123\155\171\x79\x79\x35\x41\x67\111\x68\x71\x69\x57\x31\x75\112\103\104\67\x57\130\x36\x52\114\x76\x64\114\165\130\x4e\172\144\152\x76\x5a\127\x55\146\60\x42\x4f\117\130\x6c\53\152\x6b\163\107\x58\x4c\155\x6f\x37\x5a\x73\x42\125\67\121\156\104\x41\106\x32\x77\66\111\112\x73\130\142\125\144\124\x47\143\125\65\155\x58\x54\143\x61\156\x72\x66\x67\x75\105\115\x4b\162\66\x53\145\x4c\x5a\x4a\115\x5a\x41\x4c\x41\70\115\x66\146\107\107\x30\61\147\146\104\126\x68\62\x56\x66\x49\x68\x36\x4f\x71\x74\53\x73\x61\x74\x72\126\141\x4c\162\x6e\53\157\161\x36\104\x67\57\125\x48\x41\x37\x71\114\145\110\x67\x77\107\67\x71\106\130\125\154\63\166\170\171\x55\x37\x50\114\66\x75\156\x45\x6f\127\x70\x39\x55\x7a\x53\x6d\57\172\113\x30\x62\151\x70\x65\64\151\x49\102\105\164\x49\170\x51\165\x73\146\x38\x78\151\121\x75\x71\150\153\166\x64\150\x4d\x4a\x51\x4c\x35\x4d\x71\x65\x6f\x4e\x67\x39\x50\x54\x50\x72\67\x30\123\x43\x49\x43\x69\146\x66\x36\146\x58\x41\x6c\127\x47\x53\x4e\70\170\x59\x37\x58\141\x45\153\x42\60\x65\x56\x56\145\114\x72\62\61\165\163\101\106\x66\x30\x4d\x52\x7a\126\116\x52\x35\101\x31\x56\142\x4f\166\126\111\x64\163\x53\160\x5a\112\x30\x46\x50\150\x48\x79\123\160\146\x34\x35\x4e\x2b\x70\x33\x54\x57\123\x45\153\x64\170\122\166\131\x65\x4b\x39\161\x45\106\60\132\124\x72\132\57\106\145\61\107\120\122\142\x68\145\x71\x44\x48\x43\161\103\x73\x4f\x64\124\141\146\170\117\153\113\x36\x42\116\x43\x51\x64\162\x65\142\151\151\111\117\x66\x2f\x66\164\x47\71\x36\171\155\105\x35\71\x33\64\71\142\166\x49\x33\112\125\146\172\122\x55\124\x42\164\107\130\124\65\111\x32\x72\x4d\x31\61\x49\x2f\x4f\x73\x4a\x49\156\x31\x36\x48\x55\64\x55\x6d\61\x50\x38\126\x47\x49\x70\x70\x66\x48\101\x51\x51\x64\67\x6f\111\x73\x45\x37\x31\66\x75\x56\144\x6a\x35\x5a\x47\x6a\130\163\x43\131\x35\157\161\x39\172\147\x4d\x77\63\x68\67\147\143\152\x62\x36\116\x79\x69\126\66\53\x67\147\x51\65\57\x46\x42\114\163\x55\112\142\111\x73\156\x2b\x2b\x61\53\x46\x2f\110\167\x67\62\x7a\67\x55\x54\x37\53\171\111\167\113\x30\x4f\141\x4a\105\x67\113\x66\107\x53\144\x6c\x36\101\66\x76\x46\x49\x73\141\106\115\62\103\x6a\x30\111\x42\x2f\152\x51\x5a\x44\171\x50\x51\x6e\65\171\x54\x55\131\x5a\x76\x57\112\x33\x30\105\70\167\x63\x64\62\61\x30\x71\161\x42\x43\x53\x39\x31\145\x5a\156\166\167\x35\x65\x53\x59\x62\71\151\x58\153\114\x63\67\102\x70\x5a\x4c\x54\157\x72\x33\166\123\155\105\113\62\x64\160\x39\105\x4d\126\144\167\116\x59\120\145\x54\102\121\x78\x52\71\x64\131\111\x39\x71\172\116\x2f\x64\63\143\x6c\x76\154\166\167\172\66\x79\x52\110\170\115\x4a\131\x55\117\64\x52\61\x4d\150\x6d\x57\151\121\x39\64\103\156\124\123\155\x7a\106\x50\110\x71\x70\x2b\111\62\x73\141\163\156\x49\130\142\x52\x6c\71\x44\x33\66\x53\57\70\x56\131\x41\x43\61\62\113\x43\x33\x30\110\122\101\x59\167\101\101\101\x41\102\112\x52\125\x35\105\x72\x6b\x4a\147\147\x67\x3d\x3d"); class pdfnc_helper { protected static $arrProtectflags = array("\x6d\x6f\x64\x69\x66\x79", "\145\x78\164\162\141\143\x74", "\160\x72\151\x6e\164", "\160\162\151\156\164\x2d\x68\151\x67\150", "\143\157\160\x79", "\x61\156\156\157\x74\55\x66\157\162\155\163", "\x66\x69\154\x6c\x2d\x66\157\x72\x6d\x73"); public static function getPdfData($arrPDF, &$arrTokens, $pdfdatei) { $objDB = Database::getInstance(); $hascontent = false; if (class_exists(\Codefog\HasteBundle\StringParser::class)) { $hasteStringParser = new \Codefog\HasteBundle\StringParser(); } if (isset($arrTokens["\x66\157\162\x6d\143\x6f\156\x66\x69\147\137\151\x64"])) { $objFine = $objDB->prepare("\x53\x45\x4c\105\103\124\40\52\x20\x46\122\117\115\x20\164\154\x5f\x66\x6f\x72\x6d\137\x66\151\145\x6c\x64\40\x57\110\105\122\105\40\x60\164\171\160\x65\x60\x3d\x3f\40\x41\116\104\40\x70\x69\144\x3d\77")->execute("\146\x69\x6e\145\125\160\154\x6f\141\144\145\162", $arrTokens["\146\x6f\162\x6d\143\x6f\156\x66\151\147\x5f\151\144"]); while ($objFine->next()) { $tokenname = "\x66\157\162\155\x5f" . $objFine->name; if (isset($arrTokens[$tokenname])) { $arrFiles = StringUtil::trimsplit("\x2c", $arrTokens[$tokenname]); $nr = 1; foreach ($arrFiles as $filename) { $arrTokens[$tokenname . "\x5f\43" . $nr] = $filename; $arrTokens[$tokenname . "\137\x23" . $nr . "\137\142\x61\x73\x65\156\141\x6d\145"] = basename($filename); $nr++; } } } $objUpl = $objDB->prepare("\123\x45\114\105\103\124\40\52\x20\x46\x52\117\115\x20\164\x6c\x5f\146\x6f\162\x6d\x5f\x66\x69\x65\x6c\144\x20\x57\x48\x45\122\x45\x20\140\164\171\x70\x65\140\x3d\x3f\x20\x41\116\x44\x20\160\151\x64\75\x3f")->execute("\x75\x70\154\157\x61\144", $arrTokens["\x66\x6f\x72\x6d\x63\157\x6e\146\151\x67\x5f\x69\x64"]); while ($objUpl->next()) { $tokenname = "\146\157\162\x6d\137" . $objUpl->name; if (isset($arrTokens[$tokenname])) { $arrTokens[$tokenname . "\137\x62\141\163\145\156\x61\x6d\145"] = basename($arrTokens[$tokenname]); } } } $l = array(); $l["\x61\137\155\x65\x74\x61\x5f\x64\151\162"] = "\154\x74\x72"; $l["\x61\137\x6d\x65\x74\141\x5f\143\x68\x61\x72\163\x65\164"] = Config::get("\x63\150\141\162\x61\143\164\x65\x72\123\x65\164"); $l["\x61\x5f\155\145\x74\141\x5f\154\141\156\x67\x75\141\147\145"] = substr($GLOBALS["\124\x4c\x5f\114\101\x4e\x47\125\101\107\105"], 0, 2); $l["\167\137\160\141\x67\x65"] = "\x70\141\147\x65"; $font = PDF_FONT_NAME_MAIN; $pdf = new \setasign\Fpdi\Tcpdf\Fpdi(PDF_PAGE_ORIENTATION, "\x6d\x6d", PDF_PAGE_FORMAT, true); $pages = 0; if (!empty($arrPDF["\x76\157\x72\154\141\x67\145"]) && file(TL_ROOT . "\x2f" . $arrPDF["\166\157\x72\154\141\x67\145"])) { $pages = $pdf->setSourceFile(TL_ROOT . "\x2f" . $arrPDF["\x76\x6f\x72\154\141\147\x65"]); } $pdf->SetCreator(PDF_CREATOR . (Self::CDDAC68499E52601E4DBEB210CE9A1A7() ? "\54" : "\54\x20\x44\105\x4d\117") . "\40\143\157\x6e\164\x61\x6f\55\160\x64\146\55\x6e\x63\55\141\164\x74\x61\x63\x68\155\145\156\x74\x2d\x62\x75\156\x64\154\145"); $pdf->SetAuthor($arrPDF["\x61\165\x74\x68\157\x72"]); $pdf->SetTitle($arrPDF["\x74\151\164\154\x65"]); $pdf->SetSubject($arrPDF["\x67\x61\x74\x65\164\x69\x74\154\145"]); $pdf->setPrintHeader(false); $pdf->setPrintFooter(false); $pdf->SetMargins(0, 0, 0); $pdf->SetAutoPageBreak(true, 0); $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO); $pdf->setLanguageArray($l); $pdf->getAliasNbPages(); $customfont = array("\122" => false, "\102" => false, "\x49" => false, "\x49\102" => false); foreach ($customfont as $attr => $status) { if (!empty($arrPDF[$attr]) && file_exists(TL_ROOT . "\57" . $arrPDF[$attr])) { $customfont[$attr] = \TCPDF_FONTS::addTTFfont(TL_ROOT . "\x2f" . $arrPDF[$attr], '', '', 32, TL_ROOT . "\x2f" . dirname($arrPDF[$attr]) . "\57"); $file_parts = pathinfo(TL_ROOT . "\x2f" . $arrPDF[$attr]); $pdf->AddFont("\143\x75\x73\164\157\x6d\146\157\156\164", $attr == "\x52" ? '' : $attr, $file_parts["\x64\x69\162\156\141\155\145"] . "\x2f" . strtolower($customfont[$attr] . "\x2e\160\150\160")); } } $seiten = -1; $where = ''; if ($pdfdatei !== '') { if (!empty($arrPDF["\x6d\165\x6c\x74\151\x66\x6f\162\155"]) && is_array($arrPDF["\x6d\x75\154\164\151\x66\157\162\x6d"]) && $arrPDF["\x6d\x75\x6c\x74\x69\x66\157\162\155"][0]["\142\x65\144\x69\x6e\x67\x75\156\x67"] !== '') { $seiten = array(); foreach ($arrPDF["\155\x75\154\164\151\146\157\x72\x6d"] as $multi) { if (!Self::checkBedingung($multi, $arrPDF, $arrTokens)) { continue; } $arrBereiche = StringUtil::trimsplit("\54", $multi["\x73\145\x69\164\145\x6e"]); foreach ($arrBereiche as $ber) { if (strpos($ber, "\55") == false) { $seiten[] = $ber; } else { $se = StringUtil::trimsplit("\x2d", $ber); for ($i = $se[0]; $i <= $se[1]; $i++) { $seiten[] = $i; } } } } if (count($seiten) < 1) { unlink(TL_ROOT . "\57" . $pdfdatei); return false; } $seiten = array_unique($seiten, SORT_NUMERIC); $where = "\40\x41\116\x44\40\x70\141\147\x65\40\x49\x4e\x28" . implode("\54", $seiten) . "\x29"; } } $objItems = $objDB->prepare("\x53\x45\114\105\103\x54\40\52\x20\x46\x52\x4f\115\40\164\154\x5f\160\x64\146\156\x63\137\x70\157\x73\151\164\x69\x6f\156\x73\40\x57\x48\x45\122\105\40\x70\x75\x62\x6c\x69\163\x68\145\x64\75\x31\40\x41\x4e\x44\40\x70\151\144\x3d\77" . $where . "\x20\x4f\x52\x44\x45\x52\x20\x42\x59\40\160\141\147\145\x2c\40\163\157\162\x74\151\x6e\x67")->execute($arrPDF["\x67\141\x74\145\x69\144"]); if ($objItems->numRows < 1 && $pdfdatei !== '') { unlink(TL_ROOT . "\57" . $pdfdatei); return false; } if ($objItems->numRows > 0) { $page = 0; $lastpos = array(0, 0); while ($objItems->next()) { $arrItem = array(); $arrItem["\151\144"] = $objItems->id; $arrItem["\x74\x79\x70\x65"] = $objItems->type; $arrItem["\160\x69\143\x74\x79\160\145"] = $objItems->pictype; if ($objItems->pictype === "\x75\x75\x69\144") { $picuuid = html_entity_decode($objItems->pictag); if (!\Contao\Validator::isUuid($picuuid)) { $picuuid = trim($picuuid, "\x23"); if (class_exists(\Haste\Util\StringUtil::class)) { $picuuid = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags("\x23\43" . $picuuid . "\43\43", $arrTokens); } else { $picuuid = $hasteStringParser->recursiveReplaceTokensAndTags("\43\x23" . $picuuid . "\43\43", $arrTokens); } $picuuid = trim($picuuid, "\x23"); } if (mb_substr($picuuid, 0, 2) === "\60\x78") { $picuuid = mb_substr($picuuid, 2); } if (ctype_xdigit($picuuid) && mb_strlen($picuuid) == 32) { $picuuid = hex2bin($picuuid); } $objPic = FilesModel::findByUuid($picuuid); if ($objPic == null) { continue; } $arrItem["\160\x69\143\164\171\160\x65"] = "\146\151\x6c\145"; $arrItem["\160\151\143\x74\x61\x67"] = $objPic->path ?? ''; } else { $objPic = FilesModel::findByUuid($objItems->picture); $arrItem["\160\x69\x63\x74\x61\x67"] = $objItems->pictag; } $arrItem["\x70\x69\x63\x74\x75\x72\145"] = $objPic->path ?? ''; $arrItem["\x62\141\x72\x74\171\160\x65"] = $objItems->bartype; $arrItem["\164\145\170\x74\151\x74\x65\155\163"] = StringUtil::deserialize($objItems->textitems); $arrItem["\160\141\147\145"] = $objItems->page; $arrItem["\x70\x6f\163\170\171"] = StringUtil::deserialize($objItems->posxy); $arrItem["\141\162\145\x61"] = StringUtil::deserialize($objItems->textarea); $arrItem["\141\154\x69\147\156"] = $objItems->align; $arrItem["\x66\157\x6e\164\163\x74\x79\154\x65"] = StringUtil::deserialize($objItems->fontstyle); $arrItem["\164\x65\x78\x74\x74\162\141\156\x73\146\157\162\155"] = $objItems->texttransform; $arrItem["\x66\157\156\164\163\x69\172\x65"] = $objItems->fontsize; $arrItem["\164\145\170\164\x63\x6f\x6c\157\x72"] = $objItems->textcolor; $arrItem["\142\x6f\162\144\x65\x72\x72\151\147\150\164"] = $objItems->borderright; $arrItem["\x71\162\163\151\x7a\145"] = $objItems->qrsize; $arrItem["\142\x65\144\x69\156\147\x75\156\x67"] = $objItems->bedingung; $arrItem["\x6e\157\142\x6c\141\156\x6b\163"] = $objItems->noblanks; if (!empty($arrItem["\x74\145\x78\x74\151\164\x65\x6d\163"])) { foreach ($arrItem["\x74\145\x78\x74\151\x74\x65\x6d\163"] as $key => $value) { $arrItem["\x74\x65\170\164\x69\164\x65\155\163"][$key]["\146\145\154\x64"] = StringUtil::decodeEntities($value["\146\145\x6c\144"]); $arrItem["\164\145\x78\164\151\x74\145\x6d\x73"][$key]["\142\145\x64\x69\x6e\x67\x75\x6e\147"] = StringUtil::decodeEntities($value["\142\145\x64\151\156\x67\x75\156\x67"]); } } if (isset($GLOBALS["\x54\x4c\137\x48\117\x4f\x4b\123"]["\x70\144\146\156\x63\137\x50\x6f\x73\151\x74\151\157\x6e\x73"]) && \is_array($GLOBALS["\x54\114\137\x48\117\117\113\123"]["\x70\x64\x66\156\143\137\120\157\x73\x69\x74\x69\157\x6e\x73"])) { foreach ($GLOBALS["\x54\114\137\110\x4f\x4f\113\123"]["\160\144\146\x6e\x63\137\120\x6f\163\151\164\151\157\156\163"] as $callback) { $arrItem = System::importStatic($callback[0])->{$callback[1]}($arrItem); } } $arrItem["\x70\141\147\x65"] = $objItems->page; while ($page != $arrItem["\x70\x61\x67\x65"]) { if ($page > 0) { Self::demoHinweis($pdf); } if ($arrPDF["\141\x6c\154\160\x61\147\x65\163"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\x70\141\x67\145"]; } $pdf->AddPage(); if ($pages > 0) { if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pageheight = $arrPageDimensions["\x68\153"]; $pagewidth = $arrPageDimensions["\x77\x6b"]; } } $text = ''; if ($arrItem["\x74\x79\160\x65"] === "\x70\151\143") { $pos = array(); if (Self::is_relative($arrItem["\x70\x6f\x73\170\171"][0])) { $pos[0] = $lastpos[0] + $arrItem["\160\157\x73\x78\171"][0]; } else { $pos[0] = $arrItem["\160\x6f\163\x78\x79"][0] + $arrPDF["\x6f\x66\146\163\x65\164"][0]; } if (Self::is_relative($arrItem["\x70\157\163\170\171"][1])) { $pos[1] = $lastpos[1] + $arrItem["\x70\157\x73\x78\171"][1]; } else { $pos[1] = $arrItem["\160\x6f\x73\170\x79"][1] + $arrPDF["\157\x66\x66\x73\x65\x74"][1]; } if ($pdfdatei !== '') { if (!Self::checkBedingung($arrItem, $arrPDF, $arrTokens)) { continue; } switch ($arrItem["\160\x69\143\164\x79\160\145"]) { case "\x66\x69\x6c\x65": $imageFactory = System::getContainer()->get("\x63\157\156\x74\141\x6f\56\151\155\x61\x67\x65\56\151\155\x61\x67\x65\x5f\146\x61\x63\x74\x6f\x72\x79"); $image = $imageFactory->create(TL_ROOT . "\x2f" . $arrItem["\160\151\x63\164\165\162\x65"], array($arrItem["\x61\162\145\141"][0] * 11.8, $arrItem["\141\x72\x65\x61"][1] * 11.8, ResizeConfiguration::MODE_CROP)); $src = str_replace("\45\x32\x30", "\x20", $image->getUrl(TL_ROOT)); $bildtyp = Self::getimagetype($src); if ($bildtyp != '') { $pdf->Image(TL_ROOT . "\57" . $src, $pos[0], $pos[1], $arrItem["\x61\162\x65\x61"][0], $arrItem["\141\x72\x65\x61"][1], $bildtyp); $hascontent = true; } break; case "\x75\160\x6c\x6f\x61\x64": if (class_exists(\Haste\Util\StringUtil::class)) { $png = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags("\x23\43" . $arrItem["\160\x69\x63\x74\x61\147"] . "\x23\x23", $arrTokens); } else { $png = $hasteStringParser->recursiveReplaceTokensAndTags("\43\43" . $arrItem["\160\x69\143\164\141\147"] . "\x23\43", $arrTokens); } if (substr($png, 0, 2) === "\x23\x23") { break; } if ($png[0] !== "\x2f") { $png = TL_ROOT . "\x2f" . $png; } $imageFactory = System::getContainer()->get("\x63\x6f\x6e\164\141\157\x2e\x69\x6d\x61\147\145\56\x69\155\x61\x67\145\137\x66\141\x63\x74\x6f\162\x79"); $image = $imageFactory->create($png, array($arrItem["\141\162\x65\x61"][0] * 11.8, $arrItem["\141\x72\145\x61"][1] * 11.8, ResizeConfiguration::MODE_CROP)); $src = str_replace("\x25\62\x30", "\40", $image->getUrl(TL_ROOT)); $bildtyp = Self::getimagetype($src); if ($bildtyp != '') { $pdf->Image(TL_ROOT . "\x2f" . $src, $pos[0], $pos[1], $arrItem["\141\162\x65\141"][0], $arrItem["\x61\162\145\141"][1], $bildtyp); $hascontent = true; } break; case "\144\141\x74\x61": $png = $arrTokens[$arrItem["\x70\151\143\x74\x61\147"]]; $png = base64_decode(preg_replace("\x23\136\144\141\164\141\72\151\155\x61\x67\x65\x2f\x5b\136\73\135\x2b\x3b\142\x61\163\x65\x36\x34\x2c\43", '', $png)); $pdf->Image("\x40" . $png, $pos[0], $pos[1], $arrItem["\x61\x72\145\141"][0], $arrItem["\141\162\145\141"][1], "\120\x4e\x47"); $hascontent = true; break; } } else { $png = base64_decode(preg_replace("\x23\x5e\144\141\x74\x61\x3a\151\155\x61\x67\x65\x2f\x5b\136\73\135\x2b\73\142\141\x73\145\x36\64\x2c\x23", '', IMGDUMMY)); $pdf->Image("\x40" . $png, $pos[0], $pos[1], $arrItem["\x61\x72\x65\141"][0], $arrItem["\141\x72\145\141"][1], "\120\x4e\107"); $pdf->SetXY($lastpos[0] = $pos[0], $lastpos[1] = $pos[1]); $pdf->SetTextColor(0, 0, 0); $pdf->writeHTML($arrItem["\160\151\143\x74\x79\160\145"] == "\146\151\154\145" ? basename($arrItem["\160\x69\x63\x74\165\x72\x65"]) : $arrItem["\x70\151\x63\164\x61\x67"], false, false, true, false, "\x4c"); $hascontent = true; } } else { $fontattr = ''; if (is_array($arrItem["\146\157\156\x74\163\164\x79\154\x65"])) { foreach ($arrItem["\146\x6f\156\x74\163\x74\171\x6c\x65"] as $attr) { switch ($attr) { case "\x69\x74\141\154\151\143": $fontattr .= "\111"; break; case "\142\x6f\154\144": $fontattr .= "\102"; break; } } } switch ($arrItem["\x61\154\x69\147\x6e"]) { case "\x72\x69\x67\150\164": $align = "\x52"; break; case "\x63\145\x6e\x74\145\162": $align = "\103"; break; default: $align = "\x4c"; } $color = $arrPDF["\164\x65\170\164\x63\x6f\x6c\x6f\x72"] != '' ? $arrPDF["\x74\145\x78\164\x63\x6f\154\x6f\162"] : "\60\60\60\x30\60\60"; if (!empty($arrItem["\164\x65\170\x74\x63\x6f\x6c\157\162"])) { $color = $arrItem["\x74\145\x78\164\143\x6f\154\x6f\162"]; } if (strlen($color) != 6) { if (strlen($color) == 3) { $color = substr($color, 0, 1) . substr($color, 0, 1) . substr($color, 1, 1) . substr($color, 1, 1) . substr($color, 2, 1) . substr($color, 2, 1); } else { $color = "\x30\60\x30\x30\x30\x30"; } } $r = hexdec(substr($color, 0, 2)); $g = hexdec(substr($color, 2, 2)); $b = hexdec(substr($color, 4, 2)); $pdf->SetTextColor($r, $g, $b); if ($fontattr === "\102\111") { $fontattr = "\111\102"; } $fontidx = $fontattr == '' ? "\x52" : $fontattr; $pdf->SetFont(empty($customfont[$fontidx]) ? "\150\x65\154\x76\145\x74\151\x63\141" : "\x63\x75\163\164\157\x6d\146\x6f\x6e\164", $fontattr, $arrItem["\x66\x6f\156\164\x73\151\x7a\x65"]); $text = ''; $blank = $arrItem["\x6e\x6f\142\x6c\141\x6e\153\x73"] ? '' : "\x20"; if (is_array($arrItem["\x74\x65\170\x74\151\164\x65\x6d\x73"])) { foreach ($arrItem["\164\145\x78\x74\x69\x74\x65\x6d\x73"] as $item) { if ($pdfdatei !== '') { if (!Self::checkBedingung($item, $arrPDF, $arrTokens)) { continue; } } if (substr($item["\146\x65\154\144"], 0, 1) == "\x22") { if (substr($item["\146\x65\x6c\x64"], 1, 1) == "\54" || substr($item["\x66\x65\x6c\x64"], 1, 1) == "\x2e" || substr($item["\146\145\x6c\144"], 1, 1) == "\74") { $text = trim($text); } $text .= Controller::replaceInsertTags(trim($item["\x66\x65\154\x64"], "\42"), false) . $blank; } else { if ($pdfdatei !== '') { if (trim($item["\146\145\154\x64"]) != '') { $text .= "\43\43" . trim(Controller::replaceInsertTags(trim($item["\x66\145\154\x64"]), false), "\43") . "\x23\x23" . $blank; } } else { $text .= Controller::replaceInsertTags(trim($item["\146\145\x6c\x64"]), false) . $blank; } } } } if ($text === '') { continue; } } while ($page != $arrItem["\x70\141\147\145"]) { Self::demoHinweis($pdf); if ($arrPDF["\x61\154\154\x70\x61\x67\x65\x73"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\160\x61\147\145"]; } $pdf->AddPage(); if ($pages > 0) { if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pageheight = $arrPageDimensions["\x68\x6b"]; $pagewidth = $arrPageDimensions["\x77\x6b"]; } } while ($page != $arrItem["\160\x61\147\145"]) { Self::demoHinweis($pdf); if ($arrPDF["\141\x6c\x6c\x70\141\x67\145\x73"] == 1) { $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } } else { $page = $arrItem["\160\141\x67\x65"]; } if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7() && $page > 2) { break; } $pdf->AddPage(); if ($page <= $pages) { $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } else { $pdf->useTemplate($pdf->importPage($pages), 0, 0, null, null, true); } $arrPageDimensions = $pdf->getPageDimensions(); $pagewidth = $arrPageDimensions["\167\153"]; } if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7() && $page > 2) { break; } if (Self::is_relative($arrItem["\x70\x6f\x73\x78\171"][0])) { $borderleft = $lastpos[0] + $arrItem["\x70\157\x73\x78\171"][0]; } else { $borderleft = $arrItem["\x70\157\x73\170\171"][0] + $arrPDF["\157\146\146\x73\145\164"][0]; } $borderright = 0 - $arrPDF["\157\x66\x66\163\x65\x74"][0]; if ($arrItem["\x62\x6f\162\144\145\162\x72\151\147\150\x74"] != '' && is_numeric($arrItem["\142\x6f\162\144\x65\162\x72\151\147\150\x74"]) && $pagewidth - $arrItem["\142\157\x72\144\145\x72\162\151\147\x68\164"] > $borderleft - $arrPDF["\157\x66\x66\163\145\164"][0]) { $borderright = $arrItem["\142\157\162\x64\145\x72\162\151\147\x68\164"] - $arrPDF["\157\146\146\x73\145\164"][0]; } $pdf->SetMargins($borderleft, 0, $borderright); if (Self::is_relative($arrItem["\x70\157\163\170\x79"][0])) { $pos[0] = $lastpos[0] + $arrItem["\160\x6f\163\170\x79"][0]; } else { $pos[0] = $arrItem["\160\x6f\x73\170\171"][0] + $arrPDF["\157\146\x66\x73\x65\x74"][0]; } if (Self::is_relative($arrItem["\x70\x6f\x73\x78\x79"][1])) { $pos[1] = $lastpos[1] + $arrItem["\x70\157\163\170\x79"][1]; } else { $pos[1] = $arrItem["\160\x6f\x73\x78\x79"][1] + $arrPDF["\157\x66\x66\x73\145\164"][1]; } $pdf->SetXY($lastpos[0] = $pos[0], $lastpos[1] = $pos[1]); if (class_exists(\Haste\Util\StringUtil::class)) { $text = \Haste\Util\StringUtil::recursiveReplaceTokensAndTags($text, $arrTokens); } else { $text = $hasteStringParser->recursiveReplaceTokensAndTags($text, $arrTokens); } $text = htmlspecialchars_decode($text, ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML5); switch ($arrItem["\164\x79\x70\145"]) { case "\x71\162\143\x6f\x64\145": if (strlen(trim($text)) > 0) { switch ($arrItem["\142\x61\162\164\171\160\145"]) { case "\x44\101\124\x41\x4d\101\x54\122\111\130": case "\121\122\x43\117\x44\105\54\114": case "\121\122\x43\x4f\x44\105\54\115": case "\121\122\103\x4f\x44\105\x2c\x51": case "\121\x52\103\x4f\x44\x45\54\110": $style = array("\x62\x6f\x72\x64\145\162" => false, "\x76\x70\141\x64\144\x69\x6e\147" => "\141\x75\x74\x6f", "\150\x70\x61\144\144\151\x6e\147" => "\141\165\164\157", "\146\147\x63\x6f\x6c\x6f\162" => array($r, $g, $b), "\x62\147\x63\x6f\154\157\162" => array(255, 255, 255), "\x6d\157\x64\165\x6c\x65\137\167\151\144\x74\x68" => $arrItem["\x71\162\163\151\172\145"], "\x6d\x6f\x64\x75\154\x65\137\x68\145\151\147\150\164" => $arrItem["\161\162\x73\151\172\x65"]); $pdf->write2DBarcode(trim($text), $arrItem["\x62\x61\162\x74\171\x70\145"], $pos[0], $pos[1], 0, 0, $style, "\x4e"); break; case "\x50\x44\106\64\x31\x37": $style = array("\142\157\162\144\145\162" => false, "\166\x70\x61\144\x64\151\156\x67" => "\141\x75\x74\157", "\x68\160\141\x64\x64\x69\156\147" => "\x61\165\x74\x6f", "\146\x67\143\x6f\x6c\x6f\x72" => array($r, $g, $b), "\x62\x67\143\x6f\154\x6f\x72" => array(255, 255, 255)); $pdf->write2DBarcode(trim($text), $arrItem["\x62\141\162\164\171\160\x65"], $pos[0], $pos[1], 0, $arrItem["\x71\162\x73\x69\x7a\145"] * 10, $style, "\x4e"); break; default: $style = array("\163\x74\162\x65\x74\143\x68" => false, "\x66\x69\x74\167\x69\144\164\x68" => true, "\142\157\162\144\145\x72" => false, "\x68\x70\x61\x64\x64\151\156\x67" => "\141\x75\164\x6f", "\166\x70\141\144\x64\x69\156\x67" => "\141\165\164\157", "\x66\147\x63\x6f\154\157\162" => array($r, $g, $b), "\142\147\143\x6f\x6c\x6f\162" => array(255, 255, 255), "\164\145\x78\164" => false); $pdf->write1DBarcode(trim($text), $arrItem["\x62\141\162\x74\171\x70\x65"], $pos[0], $pos[1], '', $arrItem["\x71\x72\x73\x69\172\x65"] * 5, 0.3, $style, "\116"); break; } $hascontent = true; } break; case "\160\x69\143": break; default: switch ($arrItem["\x74\x65\170\164\164\162\141\x6e\163\146\x6f\x72\x6d"]) { case "\165\x70\x70\x65\x72\143\x61\x73\145": $text = mb_convert_case($text, MB_CASE_UPPER, "\125\124\x46\55\70"); break; case "\x6c\157\167\145\162\x63\x61\x73\145": $text = mb_convert_case($text, MB_CASE_LOWER, "\125\124\x46\55\70"); break; case "\143\x61\160\151\x74\141\154\151\x7a\x65": $text = mb_convert_case($text, MB_CASE_TITLE, "\x55\124\x46\55\70"); break; } $pdf->writeHTML(nl2br(trim($text)) . "\46\156\x62\x73\160\x3b", false, false, true, false, $align); $hascontent = true; break; } } } if (Self::CDDAC68499E52601E4DBEB210CE9A1A7() === true || $page < 2) { while ($page < $pages && $arrPDF["\141\154\154\x70\x61\x67\x65\163"] == 1) { Self::demoHinweis($pdf); $page++; if (is_array($seiten) && !in_array($page, $seiten)) { continue; } $pdf->AddPage(); $pdf->useTemplate($pdf->importPage($page), 0, 0, null, null, true); } } Self::demoHinweis($pdf); $beUserLoggedIn = false; $beUserLoggedIn = false; $arrVersion = explode("\56", VERSION); if (sha1(session_id() . (!Config::get("\x64\151\163\x61\x62\x6c\145\x49\x70\x43\x68\x65\143\153") ? Environment::get("\151\x70") : '') . "\x42\x45\x5f\125\123\105\x52\x5f\x41\x55\x54\x48") == Input::cookie("\x42\x45\137\x55\x53\105\122\x5f\x41\x55\124\110")) { $beUserLoggedIn = true; } else { if ($arrVersion[1] >= 6) { $beUserLoggedIn = System::getContainer()->get("\x63\157\x6e\164\x61\x6f\56\163\x65\x63\x75\x72\151\164\x79\x2e\x74\157\153\x65\156\x5f\x63\x68\x65\x63\x6b\145\x72")->hasBackendUser() === true; } } if ($beUserLoggedIn && $arrPDF["\164\x6f\153\x65\x6e\x6c\x69\163\164"] == 1) { $pdf->AddPage(); $pdf->SetTextColor(0, 0, 0); $pdf->SetFont($font, '', 11); $pdf->SetMargins(15, 10, 15); $pdf->SetAutoPageBreak(true, 10); $pdf->SetXY($lastpos[0] = 15, $lastpos[1] = 10); if ($pdfdatei !== '') { $text = "\x41\x76\x61\151\154\141\x62\x6c\x65\40\x54\x6f\x6b\x65\156\x73\x3a\74\x62\x72\76\74\142\162\76\x3c\x74\141\x62\x6c\x65\76"; $arrTokens["\x70\144\146\x6e\143\x5f\x61\164\164\141\143\150\x6d\145\x6e\x74"] = $pdfdatei; $arrTokens["\160\144\x66\x6e\x63\x5f\x64\x6f\143\x75\x6d\x65\x6e\x74"] = basename($pdfdatei); foreach ($arrTokens as $token => $content) { $content = trim($content); if (mb_strlen($content) > 200) { $content = mb_substr($content, 0, 196) . "\x20\x2e\56\x2e"; } $c = preg_replace("\176\133\x5e\141\55\x7a\101\x2d\132\x30\55\71\134\x2d\53\x3d\137\134\100\134\x2e\72\x3b\54\134\173\x5c\x7d\x5c\133\x5c\135\x5c\50\x5c\x29\x5c\134\x2f\x22\47\134\156\303\xa4\303\266\303\xbc\303\204\xc3\226\303\234\xc3\237\342\200\xa6\xc3\xa0\303\241\303\xa2\xc3\xa9\303\xa8\xc3\264\xc3\xaa\x23\40\x5d\176\x69", '', $content); if ($c !== $content) { continue; } if (mb_stripos($token, "\160\x61\x73\163\x77\157\x72\144") != false || mb_stripos($token, "\x70\141\163\x73\x77\157\x72\x74")) { continue; } $text .= "\x3c\x74\162\76\x3c\x74\x64\76\43\x23" . $token . "\x23\x23\74\57\164\144\76\x3c\x74\144\x3e" . nl2br($content) . "\x3c\57\164\x64\76\74\57\x74\x72\x3e"; } $text .= "\74\x2f\x74\141\142\154\145\76"; } else { $text = "\x41\166\x61\x69\x6c\x61\x62\x6c\x65\x20\124\x6f\153\x65\x6e\x73\72\74\142\x72\76\x3c\142\x72\x3e\x3c\x62\x72\76\x3c\x62\x72\x3e" . "\124\x68\145\40\141\166\x61\151\154\x61\x62\x6c\x65\40\x53\x69\x6d\160\154\145\x54\x6f\x6b\x65\156\163\40\162\145\x73\165\x6c\x74\x73\x20\146\162\157\155\x20\x74\x68\x65\x20\x63\x61\x6c\154\40\x6f\x66\x20\164\150\x65\x20\156\x6f\164\151\146\x69\x63\141\164\x69\x6f\156\56\40\x49\156\x20\164\x68\145\x20" . "\x74\x65\x73\164\x20\x50\104\x46\40\151\164\40\x69\163\40\x6e\x6f\x74\x20\x70\x6f\x73\x73\x69\142\154\145\x20\164\x6f\40\144\145\164\x65\x63\x74\x20\164\150\145\x20\162\x65\141\154\x20\151\x6e\160\165\x74\x20\164\x6f\x6b\x65\156\x73\x2e\40" . "\131\157\x75\40\167\151\154\154\40\146\x69\156\144\x20\164\x68\x65\40\164\157\x6b\x65\156\40\154\x69\163\x74\x20\x6f\156\x6c\171\x20\151\x6e\x20\164\150\x65\x20\157\x72\151\147\x69\156\x61\154\x20\156\x6f\164\151\x66\151\143\x61\x74\151\157\156\56\x3c\x62\x72\76\x3c\x62\x72\76" . "\x3c\x73\164\162\157\x6e\x67\76\123\164\141\x79\x20\x6c\x6f\147\x67\145\x64\x20\151\x6e\x20\151\156\40\x74\x68\145\40\x62\141\143\153\145\156\x64\74\x2f\163\x74\162\157\x6e\x67\76\x20\141\156\144\x20\x74\150\145\x6e\40\x73\x65\x6e\x64\x20\164\x68\145\40\146\157\162\155\40\151\x6e\40\x74\150\x65\x20" . "\146\162\x6f\x6e\164\x65\156\x64\x2e\x20\x59\x6f\x75\x20\163\x68\157\x75\x6c\x64\40\x74\150\x65\x6e\x20\x66\x69\x6e\x64\40\x61\x20\120\104\106\40\167\x69\x74\150\40\164\150\145\40\164\157\153\x65\x6e\x20\154\x69\163\x74\40\x69\156\x20\x74\x68\x65\40\x6d\141\151\154\40\x61\164\x74\141\143\150\155\x65\x6e\164\56\74\142\162\x3e\x3c\x62\x72\76" . "\x59\157\165\x20\143\x61\156\x20\144\151\x73\x61\x62\154\145\40\164\x68\x65\40\164\157\x6b\145\156\40\154\x69\x73\164\40\x70\141\147\x65\x20\x69\x6e\40\x74\x68\145\x20\116\157\164\x69\x66\151\x63\x61\x74\151\x6f\156\40\103\x65\156\x74\x65\x72\40\151\156\x20\164\x68\x65\x20\160\162\157\160\x65\x72\x74\151\145\x73\x20\157\146\x20\x74\x68\145\40\147\141\x74\145\167\x61\171\56" . "\74\142\162\x3e\74\x62\x72\x3e\74\x62\162\x3e\x3c\x62\x72\76" . "\x44\x69\x65\40\x76\x65\x72\146\303\xbc\147\142\x61\x72\145\x6e\x20\123\151\155\x70\x6c\x65\124\x6f\x6b\145\156\163\x20\145\x72\147\145\x62\145\156\x20\x73\151\x63\x68\40\x61\x75\163\40\x64\x65\x6d\x20\x41\165\x66\x72\x75\x66\x20\x64\x65\162\x20\102\145\156\x61\x63\150\x72\151\143\150\164\x69\147\x75\x6e\147\x2e\x20" . "\x49\x6d\40\124\x65\163\x74\x2d\x50\x44\106\x20\x69\163\x74\x20\145\x73\x20\156\x69\x63\150\x74\40\155\303\266\147\x6c\151\x63\150\40\144\151\145\40\x65\143\150\164\145\x6e\40\x45\151\156\147\141\156\147\x73\55\x54\157\x6b\145\156\40\172\x75\40\145\162\155\151\x74\164\x65\x6c\x6e\x2c\40\x64\x61\150\145\162\40\x66\151\156\x64\145\156\x20" . "\123\x69\x65\40\x64\x69\145\x20\114\151\163\x74\145\x20\156\165\x72\x20\x69\x6e\40\144\145\162\x20\157\162\151\147\x69\156\141\x6c\x65\x6e\x20\102\x65\x6e\141\x63\x68\162\x69\x63\150\164\x69\147\x75\x6e\x67\56\74\142\x72\x3e\74\142\x72\x3e" . "\74\163\164\162\157\156\147\x3e\102\154\145\x69\142\x65\156\40\123\x69\145\40\151\x6d\40\x42\x61\143\153\145\156\x64\40\145\x69\156\147\145\154\157\x67\x67\164\x3c\57\x73\164\x72\157\156\147\76\x20\165\156\144\40\163\143\150\151\x63\153\145\x6e\x20\x64\141\156\x6e\x20\151\155\x20" . "\x46\x72\x6f\x6e\x74\145\x6e\144\x20\144\141\163\x20\106\157\x72\155\165\x6c\141\x72\x20\x61\142\x2e\40\111\156\40\x64\x65\155\x20\115\x61\151\154\141\156\150\x61\x6e\147\x20\163\x6f\154\154\164\x65\156\40\x53\151\x65\40\144\x61\x6e\156\40\145\151\x6e\40\x50\x44\106\x20\x6d\151\x74\x20\x61\156\x67\145\150\xc3\xa4\x6e\x67\164\x65\x72\x20" . "\124\x6f\153\145\x6e\154\x69\163\164\145\40\x66\x69\x6e\144\x65\x6e\x2e\74\x62\x72\76\74\x62\162\76" . "\x44\x69\x65\x20\x54\157\x6b\145\x6e\x6c\x69\x73\164\145\40\153\303\xb6\156\x6e\x65\156\x20\123\x69\145\x20\151\x6d\x20\116\157\164\x69\146\151\143\x61\x74\151\x6f\x6e\40\x43\145\156\x74\145\x72\40\x69\156\40\x64\x65\156\40\105\x69\x67\145\x6e\163\143\x68\x61\146\x74\x65\156\40\x64\x65\x73\40\107\141\164\145\x77\141\171\163\40\x61\142\163\x63\150\141\x6c\164\145\156\x2e"; } $pdf->writeHTML($text, false, false, true, false, "\x4c"); } $pdf->lastPage(); if ($arrPDF["\x70\x72\157\x74\x65\143\164"] == 1) { if (in_array("\160\162\x69\156\164\x2d\150\x69\x67\x68", $arrPDF["\x70\162\x6f\x74\x65\x63\164\146\x6c\x61\147\163"]) && !in_array("\x70\x72\151\156\x74", $arrPDF["\160\162\x6f\164\145\143\x74\146\x6c\141\147\x73"])) { $arrPDF["\x70\x72\157\164\x65\x63\x74\146\154\x61\147\x73"][] = "\160\x72\x69\156\164"; } $opass = $arrPDF["\x6f\x70\x65\x6e\160\x61\x73\x73\x77\x6f\162\x64"]; if ($opass == '') { $pass = $arrPDF["\160\141\163\163\x77\157\162\x64"]; if ($pass == '') { $pass = null; } $pdf->SetProtection(array_diff(Self::$arrProtectflags, $arrPDF["\160\162\x6f\x74\145\143\x74\146\x6c\x61\x67\163"]), '', $pass, 1, NULL); } else { $pdf->SetProtection(Self::$arrProtectflags, $opass, $opass, 1, NULL); } } $result = true; if ($pdfdatei !== '') { if ($hascontent) { $pdf->Output(TL_ROOT . "\57" . $pdfdatei, "\106"); $_SESSION["\x70\x64\x66\156\x63"]["\160\x64\x66\144\157\143\x75\155\x65\156\164"] = $pdfdatei; } else { @unlink(TL_ROOT . "\x2f" . $pdfdatei); $result = false; } } else { $pdf->Output($arrPDF["\x67\141\164\145\x74\151\x74\x6c\145"] . "\56\x70\144\x66", "\x44"); } unset($pdf); return $result; } protected static function checkBedingung($item, $arrPDF, $arrTokens) { $bedingung = html_entity_decode($item["\x62\x65\144\x69\x6e\x67\165\156\x67"]); if (!empty($bedingung)) { $arrSplitG = explode("\75\75", $bedingung); $arrSplitU = explode("\41\75", $bedingung); if (count($arrSplitG) > 1) { $arrSplitG[0] = trim($arrSplitG[0], "\43"); $arrSplitG[1] = trim($arrSplitG[1], "\x22"); if (!isset($arrTokens[$arrSplitG[0]]) || strcmp(strtolower($arrSplitG[1]), strtolower($arrTokens[$arrSplitG[0]])) != 0) { return false; } } else { if (count($arrSplitU) > 1) { $arrSplitU[0] = trim($arrSplitU[0], "\x23"); $arrSplitU[1] = trim($arrSplitU[1], "\42"); if (!isset($arrTokens[$arrSplitU[0]]) || strcmp(strtolower($arrSplitU[1]), strtolower($arrTokens[$arrSplitU[0]])) == 0) { return false; } } else { if (!isset($arrTokens[$bedingung]) || $arrTokens[$bedingung] == '') { return false; } } } } return true; } protected static function demoHinweis($pdf) { if (!Self::CDDAC68499E52601E4DBEB210CE9A1A7()) { $x = $pdf->GetX(); $y = $pdf->GetY(); $arrPageDimensions = $pdf->getPageDimensions(); $pdf->SetXY(15, $arrPageDimensions["\x68\153"] - 14); $pdf->writeHTML("\74\x73\x70\x61\156\x20\163\164\171\x6c\x65\x3d\42\x63\157\154\x6f\x72\72\43\x66\146\60\60\x30\x30\73\142\x61\143\153\147\x72\157\x75\x6e\144\55\143\157\154\157\162\x3a\x23\x66\146\145\x65\x65\145\x3b\x66\x6f\x6e\x74\x2d\x73\x69\172\145\x3a\71\160\x78\73\146\x6f\156\x74\x2d\167\145\151\147\x68\x74\x3a\142\157\154\144\x22\x3e\x26\156\142\163\x70\73\46\x6e\x62\x73\160\73\x3d\x3d\40\104\105\x4d\117\40\166\145\162\163\151\157\x6e\x20\x6f\x66\x20\144\x6f\x2d\x77\150\x69\x6c\x65\57\143\157\x6e\164\x61\157\55\160\x64\x66\x2d\x6e\x63\x2d\x61\x74\164\141\143\150\155\145\156\164\x2d\142\x75\156\x64\x6c\x65\x20\55\x20\x6d\141\170\151\155\x75\x6d\40\62\x20\x70\141\147\x65\x73\x20\x2d\40\x42\165\171\x20\x4c\x69\143\x65\156\x63\145\40\153\145\171\x21\40\x3d\x3d\x26\156\x62\163\160\73\46\156\142\x73\x70\73\x3c\57\163\160\x61\156\76", false, true, true, false, "\114"); $pdf->SetXY($x, $y); } } protected static function CDDAC68499E52601E4DBEB210CE9A1A7() { $k = str_split(Config::get(PRODUCT_NC . LIZENZ), strlen(vNZpjXztEVKIiq)); $p = eval("\x72\x65\164\165\x72\156\40\163\165\142\x73\164\162\x28\42\60\60\x30\60\x22\56\163\164\x72\164\x6f\x75\x70\x70\145\x72\50\x64\145\x63\150\x65\170\50\143\162\x63\x33\x32\x28\x6d\144\x35\50\x22" . PRODUCT_NC . "\72\42\x2e\x73\x75\x62\x73\x74\x72\50\x56\105\122\x53\x49\117\116\54\60\54\x31\51\x2e\42\72" . ($k[0] ?? '') . "\42\x29\x29\51\51\54\55\64\x29\x3b"); return !empty($p) && isset($k[1]) && $p === $k[1]; } public static function encrypt($varValue, $dc = null) { if (empty($varValue)) { return ''; } mt_srand(6152); $out = array(); for ($x = 0, $l = strlen($varValue); $x < $l; $x++) { $out[$x] = ord($varValue[$x]) * 3 + mt_rand(350, 16000); } mt_srand(); return implode("\56", $out); } public static function decrypt($varValue, $dc = null) { if (empty($varValue)) { return ''; } mt_srand(6152); $out = array(); $blocks = explode("\56", $varValue); foreach ($blocks as $block) { $ord = (intval($block) - mt_rand(350, 16000)) / 3; $out[] = chr($ord); } mt_srand(); return implode('', $out); } protected static function getimagetype($src) { $file = TL_ROOT . "\57" . $src; if (method_exists(File::class, "\143\x72\145\141\x74\145\x49\146\x44\x65\146\145\x72\162\x65\x64") && is_callable(File::class, "\x63\x72\x65\141\x74\145\111\146\x44\145\146\145\x72\162\x65\x64")) { (new File($src))->createIfDeferred(); } if (!file_exists($file)) { return ''; } $size = getimagesize($file); if ($size[2] == IMAGETYPE_GIF) { return "\107\111\106"; } else { if ($size[2] == IMAGETYPE_JPEG) { return "\112\x50\105\x47"; } else { if ($size[2] == IMAGETYPE_PNG) { return "\x50\116\x47"; } else { return ''; } } } } protected static function is_relative($pos) { if (substr($pos, 0, 1) === "\x2b") { return true; } if (substr($pos, 0, 1) === "\x2d") { return true; } return false; } }